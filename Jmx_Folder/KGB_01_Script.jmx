<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">www.example.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="JpetStore_Server" elementType="Argument">
            <stringProp name="Argument.name">JpetStore_Server</stringProp>
            <stringProp name="Argument.value">petstore.octoperf.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="JPetstore_Fish_Buying_ThinkTime" elementType="Argument">
            <stringProp name="Argument.name">JPetstore_Fish_Buying_ThinkTime</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <stringProp name="HTTPSampler.domain">www.example.com</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
            <collectionProp name="AuthManager.auth_list">
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://ogads-pa.clients6.google.com/$rpc/google.internal.onegoogle.asyncdata.v1.AsyncDataService/</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://play.google.com/</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
            </collectionProp>
            <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
          </AuthManager>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_02_LogIN" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/u/0/ogw/AF2bZyjTDYOK8Pr-dKsQ0rUTZODHhKGBEMyZEMhvfJoLdnAT9Q=s64-c-mo-26" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">lh3.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/u/0/ogw/AF2bZyjTDYOK8Pr-dKsQ0rUTZODHhKGBEMyZEMhvfJoLdnAT9Q=s64-c-mo</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Year" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Year</stringProp>
                    <stringProp name="Header.value">2025</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Validation" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Validation</stringProp>
                    <stringProp name="Header.value">6h3XF8YcD8syi2FF2BbuE2KllQo=</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Channel" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Channel</stringProp>
                    <stringProp name="Header.value">stable</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Data" elementType="Header">
                    <stringProp name="Header.name">X-Client-Data</stringProp>
                    <stringProp name="Header.value">CI+2yQEIorbJAQipncoBCMvhygEIlaHLAQijo8sBCIWgzQEI4fDOAQiJ/c4BGOHizgE=</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Copyright" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Copyright</stringProp>
                    <stringProp name="Header.value">Copyright 2025 Google LLC. All rights reserved.</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/$rpc/google.internal.onegoogle.asyncdata.v1.AsyncDataService/GetAsyncData-27" enabled="true">
              <stringProp name="HTTPSampler.domain">ogads-pa.clients6.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/$rpc/google.internal.onegoogle.asyncdata.v1.AsyncDataService/GetAsyncData</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[243,&quot;&quot;,243,&quot;en&quot;,&quot;co.in&quot;,1,null,0,0,&quot;&quot;,&quot;&quot;,1,0,null,67911908,[[1],0,0],[1],1]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-Browser-Year" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Year</stringProp>
                    <stringProp name="Header.value">2025</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Api-Key" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                    <stringProp name="Header.value">AIzaSyCbsbvGCe7C9mCtdaTycZB2eUFuzsYKG_E</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">chrome-untrusted://new-tab-page</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Agent" elementType="Header">
                    <stringProp name="Header.name">X-User-Agent</stringProp>
                    <stringProp name="Header.value">grpc-web-javascript/0.1</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Data" elementType="Header">
                    <stringProp name="Header.name">X-Client-Data</stringProp>
                    <stringProp name="Header.value">CI+2yQEIorbJAQipncoBCMvhygEIlaHLAQijo8sBCIWgzQEI4fDOAQiJ/c4BGOHizgE=</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json+protobuf</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Validation" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Validation</stringProp>
                    <stringProp name="Header.value">6h3XF8YcD8syi2FF2BbuE2KllQo=</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Channel" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Channel</stringProp>
                    <stringProp name="Header.value">stable</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Authuser" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Authuser</stringProp>
                    <stringProp name="Header.value">0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Copyright" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Copyright</stringProp>
                    <stringProp name="Header.value">Copyright 2025 Google LLC. All rights reserved.</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/log?format=json&amp;hasfast=true&amp;authuser=0-28" enabled="true">
              <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,null,null,null,null,[[[&quot;Not)A;Brand&quot;,&quot;8&quot;],[&quot;Chromium&quot;,&quot;138&quot;],[&quot;Google Chrome&quot;,&quot;138&quot;]],0,&quot;Windows&quot;,&quot;10.0.0&quot;,&quot;x86&quot;,&quot;&quot;,&quot;138.0.7204.101&quot;],[1,0]]],373,[[&quot;1752812782315&quot;,null,null,null,null,null,null,&quot;[1,40400,243,null,\&quot;782699082.0\&quot;,\&quot;m8x5aJU41J6O4w_RiukQ\&quot;,null,null,null,\&quot;en\&quot;,\&quot;IND\&quot;,1,7,2706,null,1,0,null,\&quot;og-2bfaa9c3-bd7e-4f63-b114-2fc618ba9d6c\&quot;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,null,null,null,null,null,0,null,null,null,1,null,[2,5,\&quot;sl\&quot;,36],null,null,null,null,1]&quot;,null,null,null,null,null,null,-19800,[null,null,null,&quot;[null,null,[3700949,3701384,102772546,103159296]]&quot;],null,null,null,null,1]],&quot;1752812783462&quot;,null,null,null,null,null,null,null,null,null,null,null,null,null,[[null,[null,null,null,null,null,null,null,null,null,null,null,null,122505695]],9]]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-Browser-Year" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Year</stringProp>
                    <stringProp name="Header.value">2025</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">chrome-untrusted://new-tab-page</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Data" elementType="Header">
                    <stringProp name="Header.name">X-Client-Data</stringProp>
                    <stringProp name="Header.value">CI+2yQEIorbJAQipncoBCMvhygEIlaHLAQijo8sBCIWgzQEI4fDOAQiJ/c4BGOHizgE=</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Validation" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Validation</stringProp>
                    <stringProp name="Header.value">6h3XF8YcD8syi2FF2BbuE2KllQo=</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Channel" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Channel</stringProp>
                    <stringProp name="Header.value">stable</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-AuthUser" elementType="Header">
                    <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                    <stringProp name="Header.value">0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Copyright" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Copyright</stringProp>
                    <stringProp name="Header.value">Copyright 2025 Google LLC. All rights reserved.</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/log?format=json&amp;hasfast=true&amp;authuser=0-30" enabled="true">
              <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,null,null,null,null,[[[&quot;Not)A;Brand&quot;,&quot;8&quot;],[&quot;Chromium&quot;,&quot;138&quot;],[&quot;Google Chrome&quot;,&quot;138&quot;]],0,&quot;Windows&quot;,&quot;10.0.0&quot;,&quot;x86&quot;,&quot;&quot;,&quot;138.0.7204.101&quot;],[1,0]]],373,[[&quot;1752812783548&quot;,null,null,null,null,null,null,&quot;[130,40400,243,null,\&quot;782699082.0\&quot;,\&quot;m8x5aJU41J6O4w_RiukQ\&quot;,null,null,null,\&quot;en\&quot;,\&quot;IND\&quot;,1,7,3939,null,1,0,null,\&quot;og-2bfaa9c3-bd7e-4f63-b114-2fc618ba9d6c\&quot;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,[2,5,\&quot;sl\&quot;,36],null,null,null,null,1]&quot;,null,null,null,null,null,null,-19800,[null,null,null,&quot;[null,null,[3700949,3701384,102772546,103159296]]&quot;],null,null,null,null,2]],&quot;1752812785465&quot;,null,null,null,null,null,null,null,null,null,null,null,null,null,[[null,[null,null,null,null,null,null,null,null,null,null,null,null,122505695]],9]]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-Browser-Year" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Year</stringProp>
                    <stringProp name="Header.value">2025</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">chrome-untrusted://new-tab-page</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Data" elementType="Header">
                    <stringProp name="Header.name">X-Client-Data</stringProp>
                    <stringProp name="Header.value">CI+2yQEIorbJAQipncoBCMvhygEIlaHLAQijo8sBCIWgzQEI4fDOAQiJ/c4BGOHizgE=</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Validation" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Validation</stringProp>
                    <stringProp name="Header.value">6h3XF8YcD8syi2FF2BbuE2KllQo=</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Channel" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Channel</stringProp>
                    <stringProp name="Header.value">stable</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-AuthUser" elementType="Header">
                    <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                    <stringProp name="Header.value">0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Copyright" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Copyright</stringProp>
                    <stringProp name="Header.value">Copyright 2025 Google LLC. All rights reserved.</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;content-encoding=gzip-29" enabled="true">
              <stringProp name="HTTPSampler.domain">teams.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;content-encoding=gzip</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x3;�;Ys�F��߯P�)�&#x8;�\���&#x3;MѶl]+��a�j&#x8;&#xc;E�@�&#x1;@ɊK�}�gp��,&#x7f;qv���&#x1f;L�����=���^&quot;&#x17;�7�͕̊��E��v{E���0�&quot;�E�3&quot;&#x6;�&#xc;�ק&gt;�&#x15;0nU&#x6;&#x8;�O�w�N��C:�&#x6;�&apos;,�(g3�&#x15;��x�$��]&#x7f;&amp;=&#xf;p�Ǣ7����&#x1b;��P�{&#x13;�RM��&#x13;K�Y�&#x2;Z�~�&#xd;l���e&#x1a;�&#x11;��m�\!h�a�&apos;�KMF��!&#xc;�ԕL&#x10;n9&#x1;&#xb;-a�ԚJǵ�`慳�K[(���q�O�8&#xd;d�&#x12;��:��ȝ��@�.d��@��&quot;�/� K�tV�t&#x1;lM��N���Z5�&#xb;#&#x7;���ϹM�&#x1e;G!�L��T�0F~FM���4�U&#x2;Z��8W�t��ʥ&#x1d;.�$&#x4;���)&#x1;��&apos;�F.��0��,E���r&quot;&#x17;K��&#x12;&#x2;p�&#xd;��&#x1f;0�&#x7;b&#xf;8�=&#x0;8��D�T���~ٱ9&#xd;
&#x2;�&#x12;e��K�&#x15;��K&#x1b;�Q�:9���(Q��L&#x12;&#x15;�D�V?��yQA��~&lt;�&#x19;Y&#x14;����I���&#x12;=L~���Z4��4�UP�Y9�\L�l5���&apos;&#xd;
��,�������6%-V�^_kE�j&amp;W1�2�&#x5;��&apos;�&#x14;�&#x7f;�]�(?����&#x15;Z�,��Ҏ�}&#x7f;Ƹ�&#x12;�	x��JBmE&#x2;)�B�4@#��lv5��Q,��:���&#x11;xӡZ�&#x19;����D�ٜ���S��B�&#x1b;��&#x11;�ؾ�[&apos;&lt;��ˆ(g�&#x13;�#D;�&#x14;ɹ6�0��A*Q&gt;۫I�?Q��&gt;9��L��(��(�Ξ�=�G�&#x1d;&#xd;
�Ar(s:H�t���I��&#x1f;��&#x10;�;�J&#xd;
��&#x6;*�u`��&#x12;J�t�3ۦ&#xd;&#x17;G��n�d���+���mX�xf&#x10;��6�.��&#x16;�#h���Yz]&#x16;N�0�YF���K&#x19;��I&#x18;�l&#xb;UR��4I�+�㹍b*�m�r�n��B��Q�q�&#x6;�Q)���%��B��NU&#x12;��iR5N�e�S����jL(6��eɖ|�`����:�.�B�:���b�f�)˜&#x17;Q&#x1c;&#x15;�k�3�u�m�SF�����{��Xl�&#x1f;��ںh&#x2;����I����&gt;�Ǭ�O����@����^�$xz�[�X���F���G&#x0;�x&#x1;�U��&#x14;5pe~OVӳj8��.�U&#x7f;��3]�&apos;�i���(0��b��P��gA3p&#x1;&#xb;�\L�0&#x1e;,W�� Vg�f�&#x0;�&#x16;&#xf;u��%�!W8�(Ț�k&#x4;�Q&#x17;��*6P�R����&#x2;�{�+�@��(-&#x15;0��__|�1}Z|��M�}�&#x1b;��.���&apos;�@�K������&#x0;c�|=�&#x2;�u�-&#x1e;�A&#x1a;y�Щ�ݘ�9��n��&#x1a;҂r��.^&apos;�)wl�;]��&#x15;��&#x1d;��1]/v��$�]Ҏ�&#xf;�c�&#x8;�y�&#x10;:����&#xe;��sm&#x7;��|�%�t�=�&#xe;.&#x1a;��*��&#xd;�Q?o��&#x19;O�e&#x1d;�I&#xb;��X-T���� �9&#x4;K��[­�����	���&gt;�6�S=G{&#x7;�K��k��`�Ws]b?����B]�2p&#x1b;&lt;�&#x1d;���-x��6C�u�o�X&#xe;&#x17;|&#x1b;N[0�ڮ���f��6���Qr�!��ӊ�&#x12;� j�DP_�Ʀ%F��PN�����G&#xd;bS�&#x5;��k&#x10;+&#x1f;�&#x1;���&gt;&#xb;�f��O$Bp�2���c��*�`T�!�%�} ���&#xd;
�g��Y%�,R!�c�&#x4;fP���4�&#x13;�Q&#x5;(T��(,�&#x13;��Yv���y��P?f*OcH�i����R��p�&#x173e;�P�c��G:��\�(��&#x1e;�&#x11;l�r���E0&#x19;#N&#x5;��C��8)@&#x7;�&#x7f;&#xe;�ߠ&#x0;A&#x16;&#x19;�{&lt;�b�&#x1e;\&#x19;�2u)�y�7c�\���RfPA&gt;`ͩ��&#xc;�:���&#x19;��J&#x3;���F�Vk���4�\q@&#x1f;�!&#x6;&#x7f;P�-1��kB&#x7f;�2Ps�&#x10;;�3&#x5;$��)j�j2ڦx��&#xb;�aP�&quot;�&#xf;�&#x0;$���Y&#x4;�^[&#xd;ḁ�ղ�,��� ��8&#x3;�&#xd;��{���)�5�&#x1a;�m&#x1d;l&#x19;�iV�ҤP&#x1f;&#xb;=&#xe;&#x15;z!3�&#x17;t�����&#x13;�o�&#x1f;eЮ�}J�_�&#x5;�����v۶&#x3;�?�;�k�&#x17;H�H�Q�rϷ�&quot;SK&#x6;S�b�q\�H2��?Ϳ;����}��䵍�\&#x5;i&#x12;&gt;&quot;�&#x10;�u|&quot;-�&#xd;
&#x10;�1��g&#x1;�&#x4;�Δ�R7`�O&#xb;�&#xf;8G&#x3;P�m&#x15;�ɶ_�~&gt;&#xd;��ԙZ&quot;P�%(��s&lt;�b,&#xc;���&#x1c;�����&#x8;&#x1f;�&#x1c;�C�=�&gt;e�~��M&#x11;��:S���r&#xc;�QY&#x1e;q�R�Cs�۪�&#x5;3��Eg[�k���&#x7;�B%x&#x1a;��&#x12;&#x6;&#x13;&#xf;�}�*&#xe;Ӱ��&#x17;&#x12;&#x19;&#xc;M��&#x12;�vl�W�F�����a��&#x1b;&#x10;e&#x18;kױN�k32 &#xf;k��B�j�VaR�����&#xe;m�C�^�N&#x1f;��2]&#x1e;�&#xd;
3��n�Y�X]��8�� �^�IT�YŨ��椚m�f�����#�I�1�썹�k�L��ە�&#x3;��&#x1;���T�@;�n&#x15;;&#x15;��!��\.�EC3&#x10;%�j�E�	&#x2;��B-��m&#x6;K[�U��E&#x15;w��l�lFg6�$�!&#x7;)n[����={&#x16;N�Clo��ե1�&#x6;d��&#x6;��&#x1a;&#x0;��;ί[�&#x8;�N�09p����������r�|��~�tu	a�&#x19;l&gt;�(&lt;�f����e]&apos;t��&#x1c;��N�Or��&#x2cf8;l�&#x3;�i�&#x7f;�L��]&apos;��:���؅�&apos;#&#x8;��]���^+�@�&apos;2Q�&#x10;!/��\�|��&gt;D��S���]�6&#xc;&#x19;+���i&apos;qZ���1�j��&#x6;���!\�PU_��b&#xd;�u&#x16;���\�9Q2&#xb;��x+�&#x13;�&#x15;�3%&#x17;ۦ�Ĳ��J��&#x12;��G�&gt;��&#xd;I�M�+&#x5;���iũ��-�Ǉ&amp;!י�����:���1:�0��}&#x11;&#x5;�d��ƥt�.��b��&#x16;&#xf;� D&lt;J&#xb;،&#x7;&#x12;{��*&#xd;
�P�&#x17;�8��D&#xb;óy�dx�g�Ygl&#x4;�B��50��	��C�&#xd;
�&#x19;&#x1e;ql(Y�K�O6�C*o�(�,�&gt;A0���/]�=8��`��&#x1b;�ʸ&#x1a;�4	U@`��&quot;b��i��&amp;&#x1b;�U%�x�|V&#x7;&apos;�L&#xe;�&#x1b;��Z&#x12;}I�҉Ო&#x6;�֜��[��0�t&#x1f;�8���ŀ�&gt;s�G��d&#x0;e�A��&lt;ٱ�v[&#xe;ڭú��&#x7;�pL�k��ͬ$��%l4�u�&#x1b;&#xe;#}��M&#xf;�!&#x1c;�{|ݤq&#x10;��l��\��&#x6;b&amp;�O�&#x14;�+H��X����i�&#xd;�����A�,�\���e]��{&#xd;]�a�AZ/Q0�Y&#x10;r��&#x2;�&#x1d;m�_�ư{0O�bjۄ��,i������I��BկI�&#x4;&#x4;|&#x6;�0�$�L.�U���&#x13;�&#xe;Rg8/�!_�wh0�`��&apos;�O�8{�r3�v�_&#x1e;ކ*�r��o�&#x7f;�i��V�^a&amp;^&#x1d;��]����L	�&#x19;�R&#x1;�-�KbI%���*�S¡r��&#xb;HU]�1�U2��P�oQ&#x7;��&#x10;���PA��p���Zr �땼.�Z��^�A��&#x6;T��\	&lt;�n�%�&#x17;�&amp;6�&#x8;a�M�&gt;�ǭʮ�Q&#x1b;W/�&#x1c;���Y�̦&#xe;�s�B�u]�w8�#~(�A�A��j㏐&#xf;@�@&#x1d;��Y&#x19;α@��9�&#x6;��iZ�&#x4;�A�m�z?R��&apos;��W�m�!�&#x1f;���Xc�:�s9�F�&#x12;�&#x6;@=�:&#x16;�\�l�6u)&quot;�%��&#x7;[&#xd;��&#xd;
�R�1�&apos;��&#x0;^&#x2;8�u�&#x1;�F��YG&#x10;k&#x8;|&#x1d;�v&#x11;H���ז��&#xe;���h3C�ܥ^&#xb;A��&#x11;�� ���RS�&#x11;&#x1e;wZ�`�&apos;��@�i&#x0;Dt&#x0;&#x1e;�۪bB@Yk-J\P�&#xf;D�&#x19;���[r&#x11;�&#x11;�X�b���c�&#x1a;�&quot;q!�im?`Q&#xb;Y&#x1b;�v��2�&#x6;؍P�&#x5;�p����nKHd&#x0;(v&#x18;@c�&#x6;&#x0;&#xc; ��&#x1;ߧԮ&#x19;�l�W�bw�Jn&#x2;:`�3&#xe;�A6�&#x10;�7�z��cUT^{�j�}%��^�z��Q�w`ce Ч��myµ8m�&#x1c;���W�&#x1;��m���B߉�K&#x8;&#x18;&#x1d;{*�)�Vh&gt;&#x12;�&#x7;r�&#x4;�}]&#x17;&#x1;+�&#x0;��S�SJn�n#yu~�&#x7f;5���U�&#x8;��&quot;�9^&#x15;�En&#x15;�{Q��x:t!aC��N��&gt;�t���CY&#x13;0�5&lt;]�7��&#x1a;��9���=L�u&amp;��P�&#xd;
���XB�&#x92;.�Y&#x2;&#xc;㸮��ؤ�-/�&amp;�|�[0�u���B�w&#x8;�&#xc;��&#x1c;�E|X!W7*J2�I)ꞂN&#x2;${l\�u����&#xe;*��U�� &#x15;�a��� @ET�F�x�X�&#x1d;KŞ¼WU���h�N�q�J.���&#x3;&#x1c;-Wk�C.B]=�� %�������mi��k�Z��&#x4;d*�o&#x11;苡Uf��+��ٌ{&#x1;�\&#x6;�j}� �����1&gt;�@����٥淵Ls&#x13;&#x17;�+�3n���|�&#x1e;&apos;�u)��f�qrz�w&gt;:���_�&apos;����&#x1;Z�܁2��M&amp;{�b)4����u�ַ�aH��P�r��J&#x1f;6DET�&#x5;���h�[q�&apos;X�Д�&#x7b5;��R��=lk&#x7f;M&#x13;�)o&#x8;&#x1b;&#x1a;&#x1b;��x�f��7��&#x6;�T]&#x1b;&#xd;�&#x1e;���g&#x12;W{&#x7fb;x��`�C&#x14;^�}=&#x1b;�&#x1f;�&#x1f;�ԍÌ�����������&#x17;{��&amp;���}&#xf;f�I󢞭���&#xf;�_����?��t|���ϧGo�x�C/e&#x7f;��&#x1f;A&#x16;�2&#x1e;��lmv�&#x18;ٶ�&#x14;�2SH~�&#xd;͑-��Y�&#xe;��&#x11;&#x15;��_�&#xc;�&#x5;&#x7;D��FI;���&#xe;�;lՇIX��ǉI&#x11;u�a&#x1a;&#x7f;h&#x1f;6F�T&quot;�B��$&#xf;�#mk&#x1a;&#x4;&#x10;��/-I������)�&#x1b;����a(ј�f��l��V&#x16;�&#xc;�/&#x11;&#x11;�}9&apos;�-L��}j���@���&#xb;��&lt;���s&#x13;a&#x1f;�(�,��0�H)�������Q&#x19;f�*�&#xc;�{��&#x3;�&#x7;��A&#x7;�T��&#x1a;�d1=J��&#x14;�h&#x6;�o���&#xd;�DEe�&#xd;
�m������&#x14;���&#x8;�����@�9:����q&#x7;&#x0;��q&#x7;Z��w����^�]T���&#xb;�g�wo�&#xe;&#xf;vw��F�V�M���h&#xe;�E�09&#x8;��L�LfQ5e&#x1c;^��L��b[-{�&#x1b;_Ñ�&#xc;&#x18;au�&#xd;
\�2��&#x18;U&quot;&#xd;
(�&lt;�6h���&#xd;
z�]#^�&#xd;�W�&#x8;�m&#x2;��~*�@�{�{:��V&quot;������&#xe;����S�&#x18;о;;�~&apos;���s�&#x1c;�f�t&#x4;@�唟g�w&#x11;����l���&#x17;q&#x14;`�&lt;c�����^&#x7;m���&#xc;�?JONʘ+a�x����&#x1a;eJ�&#x18;ȸ*ɘ�&#x17;���|�Xe�/����_&#x1a;@&#xf;&#xf;�W&#x7f;Ɂn7�����&#xf;&#x4;8����&gt;��}N�U&gt;�&#x1;��ƪ��f�U&apos;�i&#x10;z셌!�������Nub*�&#xf;�|���&#x16;@�7Ƚ���r�&#x2;��&#x0;�Ez2��2�����U��J���j&#x1c;�&#x19;�$�&#x19;�a�`�&#x0;��_A&#x1e;�&#xf;c��?�q�а&#x2;L�VyՎªf�&#x0;|h@&#x18;�&apos;9^���&#x7;�	2&gt;�q���-���qeȸ�X{H��6�7-B	�t�u3S&#xd;�أ6�ͦ�&#x1c;F&#x1a;ru&#x1d;����4ꋒ@S�^��&#xd;
�s&#xd;
��:+�9� k���&#x0;�&#xd;
�o���2]_����E�ʅ�8tFn��,����K����G&#x1b;�tݮ�Krt�xk&#x7f;|&#x11;d�{�7#�__����N&#xe;��_����,���&lt;}���hv�t�&#x7f;iS��6���߿��m��~�3G����ۙ�&#x7f;����1~{����f����&#xe;��Ok�[&#x16;�B}�&#x1a;�lw\�o{6�nw`&#xf;���������:�~�t����������p�_��k:�F&#x0;&#x0;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="upload-time" elementType="Header">
                    <stringProp name="Header.name">upload-time</stringProp>
                    <stringProp name="Header.value">1752812784839</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="apikey" elementType="Header">
                    <stringProp name="Header.name">apikey</stringProp>
                    <stringProp name="Header.value">bc3902d8132f43e3ae086a009979fa88-632130b2-9455-44a6-80e2-d7457b6eb8ca-7193</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="client-version" elementType="Header">
                    <stringProp name="Header.name">client-version</stringProp>
                    <stringProp name="Header.value">1DS-Web-JS-4.2.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="AuthMsaDeviceTicket" elementType="Header">
                    <stringProp name="Header.name">AuthMsaDeviceTicket</stringProp>
                    <stringProp name="Header.value">t=GwD2AbuEBAAUT8E2pcttyweiwH80omnEMQMzYo0OZgAAENLFXhlq0Add3CTxxEWaqYDAAVf4Ge/DhSuUkQv/xVSh/PPeGFDFAd6plqIpbf9EmNu3w1oHSdfyKcDVy4SamKQ0ZSCr37+5nV+51r74Gzrmquv9ryd9TDhRpTv1P9a4hjssJ4TZZpD53PjSzKb2Phvc33byOeSifiIH7qI93CZm/HjffAwwGdetIJWkIyOCNrAjTSdCeGlYeOUz06kZ5ZZyBgbick2Yj6Lh+ulfoattP/VvbqSSxYM0bNP/Sy5n/hgstFfL3UkwrtnjDDbTsS30mGYZ/qdUyWOzrennPKMKU/5CcTBPs+N3lVGuDgcGSVOdvaZnGfohsiqsvlkxYldn2kkPBOT4tjKXuh4WzZxMjzLWGyrGiysUScXxiQQ8BNd+LvlD6qNKjJ/tjcWpszSGoIiAdmWVgUdx4Xk2ijt/NdEWijkz/Cf+2J1dn7jLraLVPDnGAG8cPDnckDiPtlBVzz5ESMGSae73YX9dOxuG7KV4GzjbV8vej+p5QbNwMbdvnZul5jvtycvPXOGHBYAxtTLhvc3QDjrAkJTrBf1RC/15oAcNAoY2Dele62PKzYZT4p8O09uLz6CZCyjJwFOcmI7oMXlTue5b9Eut5CYrb0f4AQ==&amp;p=</stringProp>
                  </elementProp>
                  <elementProp name="time-delta-to-apply-millis" elementType="Header">
                    <stringProp name="Header.name">time-delta-to-apply-millis</stringProp>
                    <stringProp name="Header.value">69</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-json-stream</stringProp>
                  </elementProp>
                  <elementProp name="cache-control" elementType="Header">
                    <stringProp name="Header.name">cache-control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store</stringProp>
                  </elementProp>
                  <elementProp name="Client-Id" elementType="Header">
                    <stringProp name="Header.name">Client-Id</stringProp>
                    <stringProp name="Header.value">NO_AUTH</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/fife/ALs6j_F5A8KZRxLsRS0j7DLBYdAoHiiwY9ceGrdL5qL9cggbefNXlFZH31M0gYWSo05_uIiY9wwgyHAs9NXes9zJymczLAWcBqTT79FIi-EXXdxbkJkXNrsXR034NC-lomWXUVhPeFdzB44NH-T1BfoUX-Cs4lZDbkszeG_QD81SpPpkwW3HMibsI58V_4NjoZMdPPYbh4flMnKyQxuEpaFB7UdVsVoZnE_VMEz3Bh-AmKIPBl5Goa9-xXH4rB8ZvkjpxzOKNoXFjcfw9eMhEwV55oKn2YDmZtqZYDHMtrpUvQng4gWpMUm5Xia4TZPbwi3EOenF4bDsXf7F9K3gTyHW7oURDz-0zRECpTUwmNJbxBL18kANfgMNqtLSU02y0UGPnEIK1cgYATYxbNFY1NT1N1EQBWu160NzateqBYH01rJ_BVz7EyhhiWbTwzPQAdsNOlDxmhkQZkWprpjjviJRmX6jL_slhvVenTRUtLwq_g5nUuj3fRE-C0w81MmTqjW5wHrptXBgxHX7nJmAzfGxLx1x2wIHurY_rgAdaTaH0QuMNtZkI0ki_jSvxPurCqzh3Sgtp5s4xUeR5kXvDvFl8TUAGjHqiOqKIQVYMhYGMnjyshW1xHM387nS6ThKmGVauJLkwv29FXIa2JWp4BEkbxKCcfc4nfON6gigh71vOjdWUdF1ug1iUA8VHAtWcbeTLYpc9ZhgWSXqqzjWR5-tlYHSpdHcZAsrgTR5wNyaGTu1QhsPA7nL1olHMhPFj0kivK5QJKLnaXNsmpPO8Z0n0ZFl6gGq6moTjnu8hy9oE645H4o4HLqUDWLEcvKH9XJWA8u2t2_2sD5eKxXdlJpeIr0EuL2Q8mHukSjouseKT-1YoT2xmFt3FmoKdhBGd8ATge7WpVBAOyDKvdbtyk7PWqpgGfUDkCDsBWIt4SrE-mhECedqSs6HlJVyy3OvmrIuJ8228bYiUrkGpjOP5F7g7bUKBQ1NwVQX7agLyf2jm5VNkD96dMbep0LQtta0Uf3FqNuoTO1fYrnu_F_xs22iFrwUR2uwt8ywDPAX3gA_Hxm22vautolgxQG0f0KqWTcHhg8QmWqBYvaWFwWm6jo3tBe0L5zS3IXT96biDkmgoa7PQUUvvOfcgJRD41dgAmVs7PXCvzZYrvA8v5BF-5TdWH739lcV6v8Yj5lgSWQl06FfjIkm36cnWgua9nr1l-BoyU5UG4a8AUrZdVo85rgSebLMG2wyFCeSJrio9-9Lqx3Wra6Ou4GHZLlUphz5IR88lcd0agACaVFR_QZaPM9oOXgnRKFVtRW3_SWcwfeOknudPlDwm7cNUUOuTFupk5Be7rwrB58HmbnCpmi_R1hrJn0H0Cms5-MJGrXoDOwrn0juOUiMp8jKerbkDmDwlKlPjEYC=s64-c-31" enabled="true">
              <stringProp name="HTTPSampler.domain">lh3.googleusercontent.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/fife/ALs6j_F5A8KZRxLsRS0j7DLBYdAoHiiwY9ceGrdL5qL9cggbefNXlFZH31M0gYWSo05_uIiY9wwgyHAs9NXes9zJymczLAWcBqTT79FIi-EXXdxbkJkXNrsXR034NC-lomWXUVhPeFdzB44NH-T1BfoUX-Cs4lZDbkszeG_QD81SpPpkwW3HMibsI58V_4NjoZMdPPYbh4flMnKyQxuEpaFB7UdVsVoZnE_VMEz3Bh-AmKIPBl5Goa9-xXH4rB8ZvkjpxzOKNoXFjcfw9eMhEwV55oKn2YDmZtqZYDHMtrpUvQng4gWpMUm5Xia4TZPbwi3EOenF4bDsXf7F9K3gTyHW7oURDz-0zRECpTUwmNJbxBL18kANfgMNqtLSU02y0UGPnEIK1cgYATYxbNFY1NT1N1EQBWu160NzateqBYH01rJ_BVz7EyhhiWbTwzPQAdsNOlDxmhkQZkWprpjjviJRmX6jL_slhvVenTRUtLwq_g5nUuj3fRE-C0w81MmTqjW5wHrptXBgxHX7nJmAzfGxLx1x2wIHurY_rgAdaTaH0QuMNtZkI0ki_jSvxPurCqzh3Sgtp5s4xUeR5kXvDvFl8TUAGjHqiOqKIQVYMhYGMnjyshW1xHM387nS6ThKmGVauJLkwv29FXIa2JWp4BEkbxKCcfc4nfON6gigh71vOjdWUdF1ug1iUA8VHAtWcbeTLYpc9ZhgWSXqqzjWR5-tlYHSpdHcZAsrgTR5wNyaGTu1QhsPA7nL1olHMhPFj0kivK5QJKLnaXNsmpPO8Z0n0ZFl6gGq6moTjnu8hy9oE645H4o4HLqUDWLEcvKH9XJWA8u2t2_2sD5eKxXdlJpeIr0EuL2Q8mHukSjouseKT-1YoT2xmFt3FmoKdhBGd8ATge7WpVBAOyDKvdbtyk7PWqpgGfUDkCDsBWIt4SrE-mhECedqSs6HlJVyy3OvmrIuJ8228bYiUrkGpjOP5F7g7bUKBQ1NwVQX7agLyf2jm5VNkD96dMbep0LQtta0Uf3FqNuoTO1fYrnu_F_xs22iFrwUR2uwt8ywDPAX3gA_Hxm22vautolgxQG0f0KqWTcHhg8QmWqBYvaWFwWm6jo3tBe0L5zS3IXT96biDkmgoa7PQUUvvOfcgJRD41dgAmVs7PXCvzZYrvA8v5BF-5TdWH739lcV6v8Yj5lgSWQl06FfjIkm36cnWgua9nr1l-BoyU5UG4a8AUrZdVo85rgSebLMG2wyFCeSJrio9-9Lqx3Wra6Ou4GHZLlUphz5IR88lcd0agACaVFR_QZaPM9oOXgnRKFVtRW3_SWcwfeOknudPlDwm7cNUUOuTFupk5Be7rwrB58HmbnCpmi_R1hrJn0H0Cms5-MJGrXoDOwrn0juOUiMp8jKerbkDmDwlKlPjEYC=s64-c</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Year" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Year</stringProp>
                    <stringProp name="Header.value">2025</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Validation" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Validation</stringProp>
                    <stringProp name="Header.value">6h3XF8YcD8syi2FF2BbuE2KllQo=</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Channel" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Channel</stringProp>
                    <stringProp name="Header.value">stable</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Data" elementType="Header">
                    <stringProp name="Header.name">X-Client-Data</stringProp>
                    <stringProp name="Header.value">CI+2yQEIorbJAQipncoBCMvhygEIlaHLAQijo8sBCIWgzQEI4fDOAQiJ/c4BGOHizgE=</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Copyright" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Copyright</stringProp>
                    <stringProp name="Header.value">Copyright 2025 Google LLC. All rights reserved.</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">image</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_01_L" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/u/0/widget/app-32" enabled="true">
              <stringProp name="HTTPSampler.domain">ogs.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/u/0/widget/app</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="eom" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">eom</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="awwd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">awwd</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="gpa" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">gpa</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">chrome-untrusted://new-tab-page</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="origin" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">origin</stringProp>
                    <stringProp name="Argument.value">chrome://new-tab-page</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="cn" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cn</stringProp>
                    <stringProp name="Argument.value">app</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="pid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pid</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="spid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">spid</stringProp>
                    <stringProp name="Argument.value">243</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="hl" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hl</stringProp>
                    <stringProp name="Argument.value">en</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Year" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Year</stringProp>
                    <stringProp name="Header.value">2025</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Validation" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Validation</stringProp>
                    <stringProp name="Header.value">6h3XF8YcD8syi2FF2BbuE2KllQo=</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Channel" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Channel</stringProp>
                    <stringProp name="Header.value">stable</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Data" elementType="Header">
                    <stringProp name="Header.name">X-Client-Data</stringProp>
                    <stringProp name="Header.value">CI+2yQEIorbJAQipncoBCMvhygEIlaHLAQijo8sBCIWgzQEI4fDOAQiJ/c4BGOHizgE=</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="X-Browser-Copyright" elementType="Header">
                    <stringProp name="Header.name">X-Browser-Copyright</stringProp>
                    <stringProp name="Header.value">Copyright 2025 Google LLC. All rights reserved.</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">iframe</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_01_Launch" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_01_Launch/complete/search-33" enabled="false">
              <stringProp name="HTTPSampler.domain">www.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/complete/search</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client</stringProp>
                    <stringProp name="Argument.value">chrome-omni</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="gs_ri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">gs_ri</stringProp>
                    <stringProp name="Argument.value">chrome-ext-ansg</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="xssi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">xssi</stringProp>
                    <stringProp name="Argument.value">t</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="q" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">q</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="oit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">oit</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="gs_rn" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">gs_rn</stringProp>
                    <stringProp name="Argument.value">42</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sugkey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sugkey</stringProp>
                    <stringProp name="Argument.value">AIzaSyA2KlwBX3mkFo30om9LUFYQhpqLoa_BNhE</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Data" elementType="Header">
                    <stringProp name="Header.name">X-Client-Data</stringProp>
                    <stringProp name="Header.value">CI+2yQEIorbJAQipncoBCMvhygEIlaHLAQijo8sBCIWgzQEI/qXOAQjh8M4BCKP7zgEI3/vOAQiL/M4BCOj8zgEIhv3OAQiJ/c4BGOHizgEYq/POARjP+s4BGL/7zgE=</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_01_Launch/complete/search-34" enabled="false">
              <stringProp name="HTTPSampler.domain">www.google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/complete/search</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client</stringProp>
                    <stringProp name="Argument.value">chrome-omni</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="gs_ri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">gs_ri</stringProp>
                    <stringProp name="Argument.value">chrome-ext-ansg</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="xssi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">xssi</stringProp>
                    <stringProp name="Argument.value">t</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="q" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">q</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="oit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">oit</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="oft" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">oft</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="pgcl" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pgcl</stringProp>
                    <stringProp name="Argument.value">7</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="gs_rn" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">gs_rn</stringProp>
                    <stringProp name="Argument.value">42</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="sugkey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sugkey</stringProp>
                    <stringProp name="Argument.value">AIzaSyA2KlwBX3mkFo30om9LUFYQhpqLoa_BNhE</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Data" elementType="Header">
                    <stringProp name="Header.name">X-Client-Data</stringProp>
                    <stringProp name="Header.value">CI+2yQEIorbJAQipncoBCMvhygEIlaHLAQijo8sBCIWgzQEI/qXOAQjh8M4BCKP7zgEI3/vOAQiL/M4BCOj8zgEIhv3OAQiJ/c4BGOHizgEYq/POARjP+s4BGL/7zgE=</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/owa/notificationchannel/negotiate-35" enabled="false">
              <stringProp name="HTTPSampler.domain">outlook.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/owa/notificationchannel/negotiate</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="clientProtocol" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientProtocol</stringProp>
                    <stringProp name="Argument.value">1.5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="UA" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">UA</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="cid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cid</stringProp>
                    <stringProp name="Argument.value">c46bc416-76a7-a660-63ad-519ae3a66f67</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="app" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">app</stringProp>
                    <stringProp name="Argument.value">Mail</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="connectionToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">connectionToken</stringProp>
                    <stringProp name="Argument.value">I4WyRKlZCgqWi6wyyH1zX2g4K+wB6fVk1IwoMtvHD56t4Y+cRx3WZ3Lqa4O7wbg9ULNvtm2alwI4QXnfiL+ohrdbkXlV/U9lKCZuu6+iWBEt6yYpLpV34Yn+qVJFHBN8BSwcWzP5onsdyJuHHHJgHuznadYQ6Id9J/2x4r5ViOE98BxeUKWxXB2TQkqV4lUoZq8q2dE1oIyc5bRNHThdaN12iOvPhFRltPM7TwpACjY3WB1+kP8k1CaInAW7nQWjbOp+RlVaL2bbSskkcX2ZTgiDdPElTr8fMCmbrrNcwZ3paPigqhNuIU82LN2ut04Ncppd0U6a9/J483ASm7T/Hg==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdDelRCbnU4eCt4K2FTT3hoMXpNY2ZyQU42Yz0iLCJ4NXQiOiJHQ3pUQm51OHgreCthU094aDF6TWNmckFONmM9Iiwibm9uY2UiOiJxb0lZdlg4UHU1QzFKSWN3WW1qRmpXb1hhZzl4R2ppX1dJZ3Y3YmY4N0lKeXRLTWZSN2ZndVFNUDZaU3ZCc0xmV1ZLREd4MUplcUZZTFpreEN4OTVGTmE0bnpIUnk2Y1B2aGhIbmRWUndYRlMwcGlwTHJwZU96b3lTSlRsRnRmb0EwZjFsdkFRZVdVM0tGbGxzdWowWkpPMEpOMkxFSThxVkhsa0pDUlRqYlEiLCJpc3Nsb2MiOiJNQVpQUjAxTUI1Nzc4Iiwic3JzbiI6NjM4ODgyNjc0MzgwNzQwMDU2fQ.eyJzYXAtdmVyc2lvbiI6IjMyIiwiYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJpc3NyaW5nIjoiV1ciLCJhcHBpZGFjciI6IjIiLCJhcHBfZGlzcGxheW5hbWUiOiIiLCJ1dGkiOiJhNDExODIzNy1hOGIzLTRmMTctOTM4Ni1mMDhhYjBjZGEwMTEiLCJpYXQiOjE3NTI4MTE0MzIsInZlciI6IlNUSS5Vc2VyLkNhbGxiYWNrVG9rZW4uVjEiLCJ0aWQiOiJlYTNjNDZhNWJjY2Y0ODlhYTFiOGUzODcxYjA4ZTdjMCIsInRydXN0ZWRmb3JkZWxlZ2F0aW9uIjoiZmFsc2UiLCJ0b3BvbG9neSI6IntcIlR5cGVcIjpcIk1hY2hpbmVcIixcIlZhbHVlXCI6XCJNQVpQUjAxTUI1Nzc4LklORFBSRDAxLlBST0QuT1VUTE9PSy5DT01cIn0iLCJyZXF1ZXN0b3JfYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJyZXF1ZXN0b3JfYXBwX2Rpc3BsYXluYW1lIjoiT2ZmaWNlIDM2NSBFeGNoYW5nZSBNaWNyb3NlcnZpY2UiLCJzY3AiOiJPd2EuTm90aWZpY2F0aW9ucy5BbGwiLCJvaWQiOiJhMjk1NTYyZS1hZWIwLTRkNTEtYjU0YS01NDU5NWQ4YzIwZWMiLCJwdWlkIjoiMTAwMzIwMDFFNjlCMTM5NiIsInNtdHAiOiJOYXptdWxsYWguc0B5ZXRoaS5pbiIsInVwbiI6Ik5hem11bGxhaC5zQHlldGhpLmluIiwiZXBrIjoie1wia3R5XCI6XCJSU0FcIixcIm5cIjpcInJtT0YtUUZ0a0RRWi1ROVQ3OXdnTThFTXgwZXhwTGNJWWtIUzBFWS00MDJERUh6cVNScS16UFFNSzd1Qk03VFVMR0NjaW5GdWc0emRtTDNIMEw5ZVVrM0V6WVc2NE95RGM1NHBCdUhMR2toNktvQjUtZjVJa1R0WEdxUXpxb2VzV1lGamgyZHJCSGZtRkRqbnFCMkNnZzVNUlA3UkdjbXpoTXRrY053RU1HU242dDhoSzZleEtXSFJzYWdaNHlibkZTUjNkcUdQOUZ0Zk1tOEpwTF9mREdhb0xVRW83YWMxZXhqT1d4ek9FMVc3QzFDaWNaU3d2SzVPTFhZMjRVX1pmcExmTlVOdHJxMHAtX1pHM3dKYlJKY1gzNjJONEpiSFBNS3kyVUJIQ3pjVUtIRjFRNGhLWE1PbWh1eEpsd1NjUFhvWl9aNUNveXcyUHZMUmdleW1wUVwiLFwiZVwiOlwiQVFBQlwiLFwiYWxnXCI6XCJSUzI1NlwiLFwiZXhwXCI6XCIxNzUyOTAxMDcwXCIsXCJleHBfZGlmZlwiOlwiODY0MDBcIixcImtpZFwiOlwiUDdLSWZIQ0NPWTQ4dkZGTC12b1NpTWp0ZFd3XCJ9LnVyREtUQ2ZyTjZaR21PMVpoZGxsV2szTVhwNmVVdlVKSVFjR0pxWWhUYmZvcFpPYWdVRFZhdmZKbDhWd3VFWUw1Q1pVZGR2Z1M0cmJibEQySU5tcnFHVnA5Z0JaLzlpaFU0M3BwWDQ2ZEdBb2lwR3JLQmlSWXRINjhVM3NJcGllb1BBeDFVd3kweGtzTFFLQ3dHeWh0ZEVoRXRXQ2g5NFVtaTZpTFlBNVVyNUc1d2YxcWtrWm8vSUZZR0NVLy85dmoxL0U5T3Btd3hRS241N2ptUWZtVDZESUJxM3VHNExDM1ZiVnFtVlVzS2tJYklJVS94S3d3bmhROW9DV215VVRwZnVSU3lCbkgrbnJTQU13MG5NTGNPY20wZUJvWGJIeGx1TVozZEdlaURxcDgzN0FWSmlrU2VxVXd1Ukx2THM4a1FkWXFrdHdJOTNlaDNZM3RRejRsUT09IiwibmJmIjoxNzUyODExNDMyLCJleHAiOjE3NTI4MTUwMzIsImlzcyI6Imh0dHBzOi8vc3Vic3RyYXRlLm9mZmljZS5jb20vc3RzLyIsImF1ZCI6Imh0dHBzOi8vb3V0bG9vay5vZmZpY2UuY29tIiwic3NlYyI6IkU3ZDVZa2hFaTY0TWh4M2giLCJlc3NlYyI6ImFydGlmYWN0LWF1dG8tcHJvZHxNMzY1MjAyNS0wNS0xOVQyMDo1Mjo1NC42NDUyODgzWnxGSmdKQTdkendhVDJ4TiJ9.b5at2dGZip-khsC7SxEfXHsNZt9xcApmDZwCr37NVqoUcO5HLM5ss6YjcrUNprjTcRs_TuMKdz52IAaRXKFP2MduANF4tiysN3LjtxdQYow9x21ypiP9S9NBwlJcHlyoymUvakTjvCkdRns_VSocNGIVNh0Vf2k1vDDPHxog5O6PeKaVUMzPK8E6DqKayBmhc8BVkGZorZYaMjJEnMRLvA1fAuUge9WmS7E1kk94mr0m04tDj_PDKXB61o0JCtDiBj3cmI6J4ct-tRFtb9rYIGXhNSvHGvPeSGrnj2gq7y2lWVv8LSwvQma1TLLCoZ4Umcy_FeJoZfCTGg3OuW12yw</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="Header">
                    <stringProp name="Header.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Header.value">PUID:10032001E69B1396@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_01_Launch/v1/ohttp/hpkekeyconfig-38" enabled="false">
              <stringProp name="HTTPSampler.domain">safebrowsingohttpgateway.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/ohttp/hpkekeyconfig</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">key</stringProp>
                    <stringProp name="Argument.value">AIzaSyA2KlwBX3mkFo30om9LUFYQhpqLoa_BNhE</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="X-OhttpPublickey-Fst" elementType="Header">
                    <stringProp name="Header.name">X-OhttpPublickey-Fst</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_01_Launch/-39" enabled="false">
              <stringProp name="HTTPSampler.domain">google-ohttp-relay-safebrowsing.fastly-edge.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">�&#x0; &#x0;&#x1;&#x0;&#x2;�	�&#x6;�&#x1e;4��n��y&#x7;,���ګ�&gt;&#xb;&#x1f;�&#xd;
8��?&#x1;&#x10;��j�&#x1c;H�jN�]�&#x1f;ψ�e�&#x16;�&#x3;&#x1;s�킜��w��2���9[%J�&gt;kM�&gt;8���{���Թ�&#x12;:�a��fX������&#xd;
�1h�9��&#x6;�&#x10;���x;f�z!o~{��.�,&#x12;y&#xb;�=&#x2;�&#x1b;0,2�z�n�����k�$�W������,�&#x7f;-��{ѹ9D5e��l�B��r}bP&#x14;,&#x18;/�&#x17;��5_����|�,���:1��:��?3&#x16;�bͳ��U&#x11;��r�݄�&#x8;!&#x12;?�D,ϑ��&#x17;�庼Z���.ig5K(D�o�|C&#x7f;-�0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">message/ohttp-req</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_01_Launch/actions/Catalog.action-37" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_01_Launch/owa/notificationchannel/abort?transport=foreverFrame&amp;clientProtocol=1.5&amp;UA=0&amp;cid=c46bc416-76a7-a660-63ad-519ae3a66f67&amp;app=Mail&amp;connectionToken=TcIThZc1aKj6wZiV%2FiQ6LqOXrrw4eCplOBzON5VMmuS%2FhcqYoBe%2BOalV9n0qP9YkbDypT2jYZ%2FVPXjcH6S6C7KcRwDjSx6yaco21W276U%2FZvGlbFsRPBNDjCU6rqbvKSU3f%2BtUdbvh2D8qFFrwtKqxMdUnrEDkrX79C7Id7BF6LEA5XcLGper3jMXQU%2FNuIOkJXMiGVJ9AGYyIPSgOXU%2FpnyHbr5SJ%2BnUY9dGFAqGl80S5ACRfefyIdI9rIBW%2FUAM2NlAB27QWKzL%2FRjNE3xbdchIBwzhlAwcpN67rS70fkXAj%2Fm4HB90olXurIovajwQhSpmK1WBw3uEFfRWdHgcw%3D%3D-40" enabled="false">
              <stringProp name="HTTPSampler.domain">outlook.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/owa/notificationchannel/abort?transport=foreverFrame&amp;clientProtocol=1.5&amp;UA=0&amp;cid=c46bc416-76a7-a660-63ad-519ae3a66f67&amp;app=Mail&amp;connectionToken=TcIThZc1aKj6wZiV%2FiQ6LqOXrrw4eCplOBzON5VMmuS%2FhcqYoBe%2BOalV9n0qP9YkbDypT2jYZ%2FVPXjcH6S6C7KcRwDjSx6yaco21W276U%2FZvGlbFsRPBNDjCU6rqbvKSU3f%2BtUdbvh2D8qFFrwtKqxMdUnrEDkrX79C7Id7BF6LEA5XcLGper3jMXQU%2FNuIOkJXMiGVJ9AGYyIPSgOXU%2FpnyHbr5SJ%2BnUY9dGFAqGl80S5ACRfefyIdI9rIBW%2FUAM2NlAB27QWKzL%2FRjNE3xbdchIBwzhlAwcpN67rS70fkXAj%2Fm4HB90olXurIovajwQhSpmK1WBw3uEFfRWdHgcw%3D%3D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdDelRCbnU4eCt4K2FTT3hoMXpNY2ZyQU42Yz0iLCJ4NXQiOiJHQ3pUQm51OHgreCthU094aDF6TWNmckFONmM9Iiwibm9uY2UiOiJxb0lZdlg4UHU1QzFKSWN3WW1qRmpXb1hhZzl4R2ppX1dJZ3Y3YmY4N0lKeXRLTWZSN2ZndVFNUDZaU3ZCc0xmV1ZLREd4MUplcUZZTFpreEN4OTVGTmE0bnpIUnk2Y1B2aGhIbmRWUndYRlMwcGlwTHJwZU96b3lTSlRsRnRmb0EwZjFsdkFRZVdVM0tGbGxzdWowWkpPMEpOMkxFSThxVkhsa0pDUlRqYlEiLCJpc3Nsb2MiOiJNQVpQUjAxTUI1Nzc4Iiwic3JzbiI6NjM4ODgyNjc0MzgwNzQwMDU2fQ.eyJzYXAtdmVyc2lvbiI6IjMyIiwiYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJpc3NyaW5nIjoiV1ciLCJhcHBpZGFjciI6IjIiLCJhcHBfZGlzcGxheW5hbWUiOiIiLCJ1dGkiOiJhNDExODIzNy1hOGIzLTRmMTctOTM4Ni1mMDhhYjBjZGEwMTEiLCJpYXQiOjE3NTI4MTE0MzIsInZlciI6IlNUSS5Vc2VyLkNhbGxiYWNrVG9rZW4uVjEiLCJ0aWQiOiJlYTNjNDZhNWJjY2Y0ODlhYTFiOGUzODcxYjA4ZTdjMCIsInRydXN0ZWRmb3JkZWxlZ2F0aW9uIjoiZmFsc2UiLCJ0b3BvbG9neSI6IntcIlR5cGVcIjpcIk1hY2hpbmVcIixcIlZhbHVlXCI6XCJNQVpQUjAxTUI1Nzc4LklORFBSRDAxLlBST0QuT1VUTE9PSy5DT01cIn0iLCJyZXF1ZXN0b3JfYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJyZXF1ZXN0b3JfYXBwX2Rpc3BsYXluYW1lIjoiT2ZmaWNlIDM2NSBFeGNoYW5nZSBNaWNyb3NlcnZpY2UiLCJzY3AiOiJPd2EuTm90aWZpY2F0aW9ucy5BbGwiLCJvaWQiOiJhMjk1NTYyZS1hZWIwLTRkNTEtYjU0YS01NDU5NWQ4YzIwZWMiLCJwdWlkIjoiMTAwMzIwMDFFNjlCMTM5NiIsInNtdHAiOiJOYXptdWxsYWguc0B5ZXRoaS5pbiIsInVwbiI6Ik5hem11bGxhaC5zQHlldGhpLmluIiwiZXBrIjoie1wia3R5XCI6XCJSU0FcIixcIm5cIjpcInJtT0YtUUZ0a0RRWi1ROVQ3OXdnTThFTXgwZXhwTGNJWWtIUzBFWS00MDJERUh6cVNScS16UFFNSzd1Qk03VFVMR0NjaW5GdWc0emRtTDNIMEw5ZVVrM0V6WVc2NE95RGM1NHBCdUhMR2toNktvQjUtZjVJa1R0WEdxUXpxb2VzV1lGamgyZHJCSGZtRkRqbnFCMkNnZzVNUlA3UkdjbXpoTXRrY053RU1HU242dDhoSzZleEtXSFJzYWdaNHlibkZTUjNkcUdQOUZ0Zk1tOEpwTF9mREdhb0xVRW83YWMxZXhqT1d4ek9FMVc3QzFDaWNaU3d2SzVPTFhZMjRVX1pmcExmTlVOdHJxMHAtX1pHM3dKYlJKY1gzNjJONEpiSFBNS3kyVUJIQ3pjVUtIRjFRNGhLWE1PbWh1eEpsd1NjUFhvWl9aNUNveXcyUHZMUmdleW1wUVwiLFwiZVwiOlwiQVFBQlwiLFwiYWxnXCI6XCJSUzI1NlwiLFwiZXhwXCI6XCIxNzUyOTAxMDcwXCIsXCJleHBfZGlmZlwiOlwiODY0MDBcIixcImtpZFwiOlwiUDdLSWZIQ0NPWTQ4dkZGTC12b1NpTWp0ZFd3XCJ9LnVyREtUQ2ZyTjZaR21PMVpoZGxsV2szTVhwNmVVdlVKSVFjR0pxWWhUYmZvcFpPYWdVRFZhdmZKbDhWd3VFWUw1Q1pVZGR2Z1M0cmJibEQySU5tcnFHVnA5Z0JaLzlpaFU0M3BwWDQ2ZEdBb2lwR3JLQmlSWXRINjhVM3NJcGllb1BBeDFVd3kweGtzTFFLQ3dHeWh0ZEVoRXRXQ2g5NFVtaTZpTFlBNVVyNUc1d2YxcWtrWm8vSUZZR0NVLy85dmoxL0U5T3Btd3hRS241N2ptUWZtVDZESUJxM3VHNExDM1ZiVnFtVlVzS2tJYklJVS94S3d3bmhROW9DV215VVRwZnVSU3lCbkgrbnJTQU13MG5NTGNPY20wZUJvWGJIeGx1TVozZEdlaURxcDgzN0FWSmlrU2VxVXd1Ukx2THM4a1FkWXFrdHdJOTNlaDNZM3RRejRsUT09IiwibmJmIjoxNzUyODExNDMyLCJleHAiOjE3NTI4MTUwMzIsImlzcyI6Imh0dHBzOi8vc3Vic3RyYXRlLm9mZmljZS5jb20vc3RzLyIsImF1ZCI6Imh0dHBzOi8vb3V0bG9vay5vZmZpY2UuY29tIiwic3NlYyI6IkU3ZDVZa2hFaTY0TWh4M2giLCJlc3NlYyI6ImFydGlmYWN0LWF1dG8tcHJvZHxNMzY1MjAyNS0wNS0xOVQyMDo1Mjo1NC42NDUyODgzWnxGSmdKQTdkendhVDJ4TiJ9.b5at2dGZip-khsC7SxEfXHsNZt9xcApmDZwCr37NVqoUcO5HLM5ss6YjcrUNprjTcRs_TuMKdz52IAaRXKFP2MduANF4tiysN3LjtxdQYow9x21ypiP9S9NBwlJcHlyoymUvakTjvCkdRns_VSocNGIVNh0Vf2k1vDDPHxog5O6PeKaVUMzPK8E6DqKayBmhc8BVkGZorZYaMjJEnMRLvA1fAuUge9WmS7E1kk94mr0m04tDj_PDKXB61o0JCtDiBj3cmI6J4ct-tRFtb9rYIGXhNSvHGvPeSGrnj2gq7y2lWVv8LSwvQma1TLLCoZ4Umcy_FeJoZfCTGg3OuW12yw</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="Header">
                    <stringProp name="Header.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Header.value">PUID:10032001E69B1396@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_01_Launch/owa/notificationchannel/connect-36" enabled="false">
              <stringProp name="HTTPSampler.domain">outlook.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/owa/notificationchannel/connect</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="transport" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">transport</stringProp>
                    <stringProp name="Argument.value">serverSentEvents</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="clientProtocol" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientProtocol</stringProp>
                    <stringProp name="Argument.value">1.5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="UA" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">UA</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="cid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cid</stringProp>
                    <stringProp name="Argument.value">c46bc416-76a7-a660-63ad-519ae3a66f67</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="app" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">app</stringProp>
                    <stringProp name="Argument.value">Mail</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="connectionToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">connectionToken</stringProp>
                    <stringProp name="Argument.value">TcIThZc1aKj6wZiV/iQ6LqOXrrw4eCplOBzON5VMmuS/hcqYoBe+OalV9n0qP9YkbDypT2jYZ/VPXjcH6S6C7KcRwDjSx6yaco21W276U/ZvGlbFsRPBNDjCU6rqbvKSU3f+tUdbvh2D8qFFrwtKqxMdUnrEDkrX79C7Id7BF6LEA5XcLGper3jMXQU/NuIOkJXMiGVJ9AGYyIPSgOXU/pnyHbr5SJ+nUY9dGFAqGl80S5ACRfefyIdI9rIBW/UAM2NlAB27QWKzL/RjNE3xbdchIBwzhlAwcpN67rS70fkXAj/m4HB90olXurIovajwQhSpmK1WBw3uEFfRWdHgcw==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="tid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">tid</stringProp>
                    <stringProp name="Argument.value">9</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/event-stream</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdDelRCbnU4eCt4K2FTT3hoMXpNY2ZyQU42Yz0iLCJ4NXQiOiJHQ3pUQm51OHgreCthU094aDF6TWNmckFONmM9Iiwibm9uY2UiOiJxb0lZdlg4UHU1QzFKSWN3WW1qRmpXb1hhZzl4R2ppX1dJZ3Y3YmY4N0lKeXRLTWZSN2ZndVFNUDZaU3ZCc0xmV1ZLREd4MUplcUZZTFpreEN4OTVGTmE0bnpIUnk2Y1B2aGhIbmRWUndYRlMwcGlwTHJwZU96b3lTSlRsRnRmb0EwZjFsdkFRZVdVM0tGbGxzdWowWkpPMEpOMkxFSThxVkhsa0pDUlRqYlEiLCJpc3Nsb2MiOiJNQVpQUjAxTUI1Nzc4Iiwic3JzbiI6NjM4ODgyNjc0MzgwNzQwMDU2fQ.eyJzYXAtdmVyc2lvbiI6IjMyIiwiYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJpc3NyaW5nIjoiV1ciLCJhcHBpZGFjciI6IjIiLCJhcHBfZGlzcGxheW5hbWUiOiIiLCJ1dGkiOiJhNDExODIzNy1hOGIzLTRmMTctOTM4Ni1mMDhhYjBjZGEwMTEiLCJpYXQiOjE3NTI4MTE0MzIsInZlciI6IlNUSS5Vc2VyLkNhbGxiYWNrVG9rZW4uVjEiLCJ0aWQiOiJlYTNjNDZhNWJjY2Y0ODlhYTFiOGUzODcxYjA4ZTdjMCIsInRydXN0ZWRmb3JkZWxlZ2F0aW9uIjoiZmFsc2UiLCJ0b3BvbG9neSI6IntcIlR5cGVcIjpcIk1hY2hpbmVcIixcIlZhbHVlXCI6XCJNQVpQUjAxTUI1Nzc4LklORFBSRDAxLlBST0QuT1VUTE9PSy5DT01cIn0iLCJyZXF1ZXN0b3JfYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJyZXF1ZXN0b3JfYXBwX2Rpc3BsYXluYW1lIjoiT2ZmaWNlIDM2NSBFeGNoYW5nZSBNaWNyb3NlcnZpY2UiLCJzY3AiOiJPd2EuTm90aWZpY2F0aW9ucy5BbGwiLCJvaWQiOiJhMjk1NTYyZS1hZWIwLTRkNTEtYjU0YS01NDU5NWQ4YzIwZWMiLCJwdWlkIjoiMTAwMzIwMDFFNjlCMTM5NiIsInNtdHAiOiJOYXptdWxsYWguc0B5ZXRoaS5pbiIsInVwbiI6Ik5hem11bGxhaC5zQHlldGhpLmluIiwiZXBrIjoie1wia3R5XCI6XCJSU0FcIixcIm5cIjpcInJtT0YtUUZ0a0RRWi1ROVQ3OXdnTThFTXgwZXhwTGNJWWtIUzBFWS00MDJERUh6cVNScS16UFFNSzd1Qk03VFVMR0NjaW5GdWc0emRtTDNIMEw5ZVVrM0V6WVc2NE95RGM1NHBCdUhMR2toNktvQjUtZjVJa1R0WEdxUXpxb2VzV1lGamgyZHJCSGZtRkRqbnFCMkNnZzVNUlA3UkdjbXpoTXRrY053RU1HU242dDhoSzZleEtXSFJzYWdaNHlibkZTUjNkcUdQOUZ0Zk1tOEpwTF9mREdhb0xVRW83YWMxZXhqT1d4ek9FMVc3QzFDaWNaU3d2SzVPTFhZMjRVX1pmcExmTlVOdHJxMHAtX1pHM3dKYlJKY1gzNjJONEpiSFBNS3kyVUJIQ3pjVUtIRjFRNGhLWE1PbWh1eEpsd1NjUFhvWl9aNUNveXcyUHZMUmdleW1wUVwiLFwiZVwiOlwiQVFBQlwiLFwiYWxnXCI6XCJSUzI1NlwiLFwiZXhwXCI6XCIxNzUyOTAxMDcwXCIsXCJleHBfZGlmZlwiOlwiODY0MDBcIixcImtpZFwiOlwiUDdLSWZIQ0NPWTQ4dkZGTC12b1NpTWp0ZFd3XCJ9LnVyREtUQ2ZyTjZaR21PMVpoZGxsV2szTVhwNmVVdlVKSVFjR0pxWWhUYmZvcFpPYWdVRFZhdmZKbDhWd3VFWUw1Q1pVZGR2Z1M0cmJibEQySU5tcnFHVnA5Z0JaLzlpaFU0M3BwWDQ2ZEdBb2lwR3JLQmlSWXRINjhVM3NJcGllb1BBeDFVd3kweGtzTFFLQ3dHeWh0ZEVoRXRXQ2g5NFVtaTZpTFlBNVVyNUc1d2YxcWtrWm8vSUZZR0NVLy85dmoxL0U5T3Btd3hRS241N2ptUWZtVDZESUJxM3VHNExDM1ZiVnFtVlVzS2tJYklJVS94S3d3bmhROW9DV215VVRwZnVSU3lCbkgrbnJTQU13MG5NTGNPY20wZUJvWGJIeGx1TVozZEdlaURxcDgzN0FWSmlrU2VxVXd1Ukx2THM4a1FkWXFrdHdJOTNlaDNZM3RRejRsUT09IiwibmJmIjoxNzUyODExNDMyLCJleHAiOjE3NTI4MTUwMzIsImlzcyI6Imh0dHBzOi8vc3Vic3RyYXRlLm9mZmljZS5jb20vc3RzLyIsImF1ZCI6Imh0dHBzOi8vb3V0bG9vay5vZmZpY2UuY29tIiwic3NlYyI6IkU3ZDVZa2hFaTY0TWh4M2giLCJlc3NlYyI6ImFydGlmYWN0LWF1dG8tcHJvZHxNMzY1MjAyNS0wNS0xOVQyMDo1Mjo1NC42NDUyODgzWnxGSmdKQTdkendhVDJ4TiJ9.b5at2dGZip-khsC7SxEfXHsNZt9xcApmDZwCr37NVqoUcO5HLM5ss6YjcrUNprjTcRs_TuMKdz52IAaRXKFP2MduANF4tiysN3LjtxdQYow9x21ypiP9S9NBwlJcHlyoymUvakTjvCkdRns_VSocNGIVNh0Vf2k1vDDPHxog5O6PeKaVUMzPK8E6DqKayBmhc8BVkGZorZYaMjJEnMRLvA1fAuUge9WmS7E1kk94mr0m04tDj_PDKXB61o0JCtDiBj3cmI6J4ct-tRFtb9rYIGXhNSvHGvPeSGrnj2gq7y2lWVv8LSwvQma1TLLCoZ4Umcy_FeJoZfCTGg3OuW12yw</stringProp>
                  </elementProp>
                  <elementProp name="Last-Event-ID" elementType="Header">
                    <stringProp name="Header.name">Last-Event-ID</stringProp>
                    <stringProp name="Header.value">null</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="Header">
                    <stringProp name="Header.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Header.value">PUID:10032001E69B1396@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_02" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_0/owa/service.svc?action=GetAttachmentDownloadToken&amp;app=Mail&amp;n=77-41" enabled="true">
              <stringProp name="HTTPSampler.domain">outlook.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/owa/service.svc?action=GetAttachmentDownloadToken&amp;app=Mail&amp;n=77</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="prefer" elementType="Header">
                    <stringProp name="Header.name">prefer</stringProp>
                    <stringProp name="Header.value">IdType=&quot;ImmutableId&quot;, exchange.behavior=&quot;IncludeThirdPartyOnlineMeetingProviders&quot;</stringProp>
                  </elementProp>
                  <elementProp name="x-req-source" elementType="Header">
                    <stringProp name="Header.name">x-req-source</stringProp>
                    <stringProp name="Header.value">Mail</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="x-owa-correlationid" elementType="Header">
                    <stringProp name="Header.name">x-owa-correlationid</stringProp>
                    <stringProp name="Header.value">e12e748f-ee3a-bb43-fabe-545fcbb77de4</stringProp>
                  </elementProp>
                  <elementProp name="x-owa-sessionid" elementType="Header">
                    <stringProp name="Header.name">x-owa-sessionid</stringProp>
                    <stringProp name="Header.value">73e39679-8f59-4fe9-a751-ba64cbe6e7a2</stringProp>
                  </elementProp>
                  <elementProp name="ms-cv" elementType="Header">
                    <stringProp name="Header.name">ms-cv</stringProp>
                    <stringProp name="Header.value">oTYaxIlLSz28XyyNlMSE1t.88</stringProp>
                  </elementProp>
                  <elementProp name="x-owa-urlpostdata" elementType="Header">
                    <stringProp name="Header.name">x-owa-urlpostdata</stringProp>
                    <stringProp name="Header.value">%7B%22__type%22%3A%22GetAttachmentDownloadTokenRequest%3A%23Exchange%22%2C%22UseNewDownloadTokenLifetime%22%3Atrue%7D</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer YOUR_TOKEN_HERE</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="x-owa-hosted-ux" elementType="Header">
                    <stringProp name="Header.name">x-owa-hosted-ux</stringProp>
                    <stringProp name="Header.value">false</stringProp>
                  </elementProp>
                  <elementProp name="action" elementType="Header">
                    <stringProp name="Header.name">action</stringProp>
                    <stringProp name="Header.value">GetAttachmentDownloadToken</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="x-anchormailbox" elementType="Header">
                    <stringProp name="Header.name">x-anchormailbox</stringProp>
                    <stringProp name="Header.value">PUID:10032001E69B1396@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="x-tenantid" elementType="Header">
                    <stringProp name="Header.name">x-tenantid</stringProp>
                    <stringProp name="Header.value">ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_02_LogIN" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_01_Launch/actions/Account.action-42" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="signonForm" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">signonForm</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_sourcePage1" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_sourcePage1</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;input type=&quot;hidden&quot; name=&quot;_sourcePage&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;input </stringProp>
                <stringProp name="BoundaryExtractor.default">COR_sourcePage1_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">2</stringProp>
                <stringProp name="TestPlan.comments">&lt;input type=&quot;hidden&quot; name=&quot;_sourcePage&quot; value=&quot;psDH_1n5swGDi2YpkE_zGesCdedpBEXjcWCX8_QxKwuSc7mPGKsb0tKYMRzC21tK8BHfyf-76veDRM-QhH31eoYgwlL3H9FLBbaqdnbfJDY=&quot; /&gt;&lt;input </stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_fp1" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_fp1</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;input type=&quot;hidden&quot; name=&quot;__fp&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_fp1_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">2</stringProp>
                <stringProp name="TestPlan.comments">&lt;input type=&quot;hidden&quot; name=&quot;__fp&quot; value=&quot;HyFrxhHjjAX-XtySQX9KeiSOrslQNVumXxYLRHC_NJ4KPWBZdfZDAqHEHCTylNjr&quot; /&gt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-43" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type,x-correlationid</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-44" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;payload&quot;:{},&quot;payloadSchema&quot;:{&quot;category&quot;:1,&quot;schema&quot;:{&quot;name&quot;:&quot;HealthCheckRequest&quot;}},&quot;requestedSchema&quot;:{&quot;category&quot;:1,&quot;schema&quot;:{&quot;name&quot;:&quot;HealthCheckResponse&quot;}},&quot;clientMetadata&quot;:{&quot;appName&quot;:&quot;Teams&quot;,&quot;appPlatform&quot;:&quot;Win32&quot;,&quot;releaseAudienceGroup&quot;:&quot;Production&quot;,&quot;releaseChannel&quot;:&quot;general&quot;,&quot;sessionId&quot;:&quot;d17a2403-6c2d-4591-ba67-5cf8dfd3a54e&quot;,&quot;uiLanguage&quot;:&quot;en-us&quot;,&quot;flights&quot;:&quot;Wac-WordEditorServiceSuggestionDescriptionsNoReferenceInformation-Treatment;Wac-WordEditorServiceMultipleGrammarCritiquesPerSentence-Treatment;mc-officeEditorTonalEnabled;mc-officeEditorDNNGrammarEnabled;mc-enable-override-critiques:true;mc-editor-oa;mc-editor-oa-forward-slash;mc-graphIntentDetection-workflow;mc-graphIntentDetection-model-flight04;mc-graphIntentDetection-model-flight11;mc-graphIntentDetection-model-flight12;mc-graphIntentDetection-model-flight13;mc-graphIntentDetection-model-flight15;mc-graphIntentDetection-allowlist-flight02;mc-graphIntentDetection-allowlist-flight05;mc-graphIntentDetection-goldenset-flight05;mc-graphIntentDetection-confidenceLevel;mc-smartComposeIntent-exp-flight01;mc-smartComposeIntent-exp-flight02;mc-smartComposeIntent-exp-flight03;mc-smartComposeIntent-exp-flight04;mc-smartComposeIntent-exp-flight05;mc-editor-oa-topics-flags;oaFluid;vivatopics;mc-editor-oa-document-context;mc-editor-oa-nudge;mc-editor-oa-mid-tile-predictions;mc-editor-oa-predictions;mc-editor-oa-flags;mc-editor-oa-address-detection;mc-editor-oa-entity-detection-counter;mc-editor-oa-local-business-detection;mc-editor-oa-satori-entity-detection;mc-editor-oa-new-loop-suggestions;oa-graph-bestmatch;enable-scope-suggestions;enable-userconfig-connector-suggestion;scd-suggestions-toplevel;enable-meapp-suggestion;mc-editor-oa-settings;mc-unified-text-prediction-timezone-perspectives;mc-editor-oa-ecc-annotation;mc-editor-oa-files-flag;mc-editor-oa-connectors-subgrouping;mc-editor-oa-event-ecc;mc-editor-oa-experimental-prediction-timeout;mc-editor-oa-new-tag;mc-editor-multilingual-proofing;mc-unified-text-prediction-nas-oa;turingEmailFlight;TextPrediction100;mc-editor-oa-email-ecc;mc-editor-oa-teams-entities-ecc;mc-editor-oa-scd-pim;mc-editor-oa-pim-multi-predict;mc-editor-expanded-ecc-responsive;mc-editor-enable-files-new-tidbits;mc-editor-enable-meeting-banner;_acceptsClaimsChallengeMessages;_acceptsSeedingStatusChangeMessages&quot;,&quot;runtimeVersion&quot;:&quot;2.35.2213&quot;,&quot;docSessionId&quot;:&quot;9a8895b7-4891-46d4-8aae-87a0bf66fb71&quot;,&quot;userSystemTimezone&quot;:&quot;Asia/Calcutta&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="x-correlationid" elementType="Header">
                    <stringProp name="Header.name">x-correlationid</stringProp>
                    <stringProp name="Header.value"></stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-45" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Upgrade" elementType="Header">
                    <stringProp name="Header.name">Upgrade</stringProp>
                    <stringProp name="Header.value">websocket</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                    <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Version" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                    <stringProp name="Header.value">13</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Key" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                    <stringProp name="Header.value">xH16/FLr+f+VrPEc8qqYwQ==</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-46" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;payload&quot;:{},&quot;payloadSchema&quot;:{&quot;category&quot;:1,&quot;schema&quot;:{&quot;name&quot;:&quot;HealthCheckRequest&quot;}},&quot;requestedSchema&quot;:{&quot;category&quot;:1,&quot;schema&quot;:{&quot;name&quot;:&quot;HealthCheckResponse&quot;}},&quot;clientMetadata&quot;:{&quot;appName&quot;:&quot;Teams&quot;,&quot;appPlatform&quot;:&quot;Win32&quot;,&quot;releaseAudienceGroup&quot;:&quot;Production&quot;,&quot;releaseChannel&quot;:&quot;general&quot;,&quot;sessionId&quot;:&quot;d17a2403-6c2d-4591-ba67-5cf8dfd3a54e&quot;,&quot;uiLanguage&quot;:&quot;en-us&quot;,&quot;flights&quot;:&quot;Wac-WordEditorServiceSuggestionDescriptionsNoReferenceInformation-Treatment;Wac-WordEditorServiceMultipleGrammarCritiquesPerSentence-Treatment;mc-officeEditorTonalEnabled;mc-officeEditorDNNGrammarEnabled;mc-enable-override-critiques:true;mc-editor-oa;mc-editor-oa-forward-slash;mc-graphIntentDetection-workflow;mc-graphIntentDetection-model-flight04;mc-graphIntentDetection-model-flight11;mc-graphIntentDetection-model-flight12;mc-graphIntentDetection-model-flight13;mc-graphIntentDetection-model-flight15;mc-graphIntentDetection-allowlist-flight02;mc-graphIntentDetection-allowlist-flight05;mc-graphIntentDetection-goldenset-flight05;mc-graphIntentDetection-confidenceLevel;mc-smartComposeIntent-exp-flight01;mc-smartComposeIntent-exp-flight02;mc-smartComposeIntent-exp-flight03;mc-smartComposeIntent-exp-flight04;mc-smartComposeIntent-exp-flight05;mc-editor-oa-topics-flags;oaFluid;vivatopics;mc-editor-oa-document-context;mc-editor-oa-nudge;mc-editor-oa-mid-tile-predictions;mc-editor-oa-predictions;mc-editor-oa-flags;mc-editor-oa-address-detection;mc-editor-oa-entity-detection-counter;mc-editor-oa-local-business-detection;mc-editor-oa-satori-entity-detection;mc-editor-oa-new-loop-suggestions;oa-graph-bestmatch;enable-scope-suggestions;enable-userconfig-connector-suggestion;scd-suggestions-toplevel;enable-meapp-suggestion;mc-editor-oa-settings;mc-unified-text-prediction-timezone-perspectives;mc-editor-oa-ecc-annotation;mc-editor-oa-files-flag;mc-editor-oa-connectors-subgrouping;mc-editor-oa-event-ecc;mc-editor-oa-experimental-prediction-timeout;mc-editor-oa-new-tag;mc-editor-multilingual-proofing;mc-unified-text-prediction-nas-oa;turingEmailFlight;TextPrediction100;mc-editor-oa-email-ecc;mc-editor-oa-teams-entities-ecc;mc-editor-oa-scd-pim;mc-editor-oa-pim-multi-predict;mc-editor-expanded-ecc-responsive;mc-editor-enable-files-new-tidbits;mc-editor-enable-meeting-banner;_acceptsClaimsChallengeMessages;_acceptsSeedingStatusChangeMessages&quot;,&quot;runtimeVersion&quot;:&quot;2.35.2213&quot;,&quot;docSessionId&quot;:&quot;9a8895b7-4891-46d4-8aae-87a0bf66fb71&quot;,&quot;userSystemTimezone&quot;:&quot;Asia/Calcutta&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="x-correlationid" elementType="Header">
                    <stringProp name="Header.name">x-correlationid</stringProp>
                    <stringProp name="Header.value"></stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/actions/Account.action-54" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="username" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                    <stringProp name="Argument.value">${Pr_Username}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">password</stringProp>
                    <stringProp name="Argument.value">${Pr_Password}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="signon" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">signon</stringProp>
                    <stringProp name="Argument.value">Login</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="_sourcePage" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">_sourcePage</stringProp>
                    <stringProp name="Argument.value">${COR_sourcePage1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="__fp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__fp</stringProp>
                    <stringProp name="Argument.value">${COR_fp1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Account.action?signonForm=</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/actions/Catalog.action-55" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Account.action?signonForm=</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_02_LogIN" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-48" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Upgrade" elementType="Header">
                    <stringProp name="Header.name">Upgrade</stringProp>
                    <stringProp name="Header.value">websocket</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                    <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Version" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                    <stringProp name="Header.value">13</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Key" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                    <stringProp name="Header.value">F2/J0jqEF14UyeYh3Di1Vw==</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-49" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type,x-correlationid</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-50" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;payload&quot;:{},&quot;payloadSchema&quot;:{&quot;category&quot;:1,&quot;schema&quot;:{&quot;name&quot;:&quot;HealthCheckRequest&quot;}},&quot;requestedSchema&quot;:{&quot;category&quot;:1,&quot;schema&quot;:{&quot;name&quot;:&quot;HealthCheckResponse&quot;}},&quot;clientMetadata&quot;:{&quot;appName&quot;:&quot;Teams&quot;,&quot;appPlatform&quot;:&quot;Win32&quot;,&quot;releaseAudienceGroup&quot;:&quot;Production&quot;,&quot;releaseChannel&quot;:&quot;general&quot;,&quot;sessionId&quot;:&quot;d17a2403-6c2d-4591-ba67-5cf8dfd3a54e&quot;,&quot;uiLanguage&quot;:&quot;en-us&quot;,&quot;flights&quot;:&quot;Wac-WordEditorServiceSuggestionDescriptionsNoReferenceInformation-Treatment;Wac-WordEditorServiceMultipleGrammarCritiquesPerSentence-Treatment;mc-officeEditorTonalEnabled;mc-officeEditorDNNGrammarEnabled;mc-enable-override-critiques:true;mc-editor-oa;mc-editor-oa-forward-slash;mc-graphIntentDetection-workflow;mc-graphIntentDetection-model-flight04;mc-graphIntentDetection-model-flight11;mc-graphIntentDetection-model-flight12;mc-graphIntentDetection-model-flight13;mc-graphIntentDetection-model-flight15;mc-graphIntentDetection-allowlist-flight02;mc-graphIntentDetection-allowlist-flight05;mc-graphIntentDetection-goldenset-flight05;mc-graphIntentDetection-confidenceLevel;mc-smartComposeIntent-exp-flight01;mc-smartComposeIntent-exp-flight02;mc-smartComposeIntent-exp-flight03;mc-smartComposeIntent-exp-flight04;mc-smartComposeIntent-exp-flight05;mc-editor-oa-topics-flags;oaFluid;vivatopics;mc-editor-oa-document-context;mc-editor-oa-nudge;mc-editor-oa-mid-tile-predictions;mc-editor-oa-predictions;mc-editor-oa-flags;mc-editor-oa-address-detection;mc-editor-oa-entity-detection-counter;mc-editor-oa-local-business-detection;mc-editor-oa-satori-entity-detection;mc-editor-oa-new-loop-suggestions;oa-graph-bestmatch;enable-scope-suggestions;enable-userconfig-connector-suggestion;scd-suggestions-toplevel;enable-meapp-suggestion;mc-editor-oa-settings;mc-unified-text-prediction-timezone-perspectives;mc-editor-oa-ecc-annotation;mc-editor-oa-files-flag;mc-editor-oa-connectors-subgrouping;mc-editor-oa-event-ecc;mc-editor-oa-experimental-prediction-timeout;mc-editor-oa-new-tag;mc-editor-multilingual-proofing;mc-unified-text-prediction-nas-oa;turingEmailFlight;TextPrediction100;mc-editor-oa-email-ecc;mc-editor-oa-teams-entities-ecc;mc-editor-oa-scd-pim;mc-editor-oa-pim-multi-predict;mc-editor-expanded-ecc-responsive;mc-editor-enable-files-new-tidbits;mc-editor-enable-meeting-banner;_acceptsClaimsChallengeMessages;_acceptsSeedingStatusChangeMessages&quot;,&quot;runtimeVersion&quot;:&quot;2.35.2213&quot;,&quot;docSessionId&quot;:&quot;9a8895b7-4891-46d4-8aae-87a0bf66fb71&quot;,&quot;userSystemTimezone&quot;:&quot;Asia/Calcutta&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="x-correlationid" elementType="Header">
                    <stringProp name="Header.name">x-correlationid</stringProp>
                    <stringProp name="Header.value"></stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/v1/ohttp/hpkekeyconfig-51" enabled="false">
              <stringProp name="HTTPSampler.domain">safebrowsingohttpgateway.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/ohttp/hpkekeyconfig</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">key</stringProp>
                    <stringProp name="Argument.value">AIzaSyA2KlwBX3mkFo30om9LUFYQhpqLoa_BNhE</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="X-OhttpPublickey-Fst" elementType="Header">
                    <stringProp name="Header.name">X-OhttpPublickey-Fst</stringProp>
                    <stringProp name="Header.value">true</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-52" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Upgrade" elementType="Header">
                    <stringProp name="Header.name">Upgrade</stringProp>
                    <stringProp name="Header.value">websocket</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                    <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Version" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                    <stringProp name="Header.value">13</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Key" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                    <stringProp name="Header.value">eMTVFIDVcSv+KGjp3b47Eg==</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-53" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;payload&quot;:{},&quot;payloadSchema&quot;:{&quot;category&quot;:1,&quot;schema&quot;:{&quot;name&quot;:&quot;HealthCheckRequest&quot;}},&quot;requestedSchema&quot;:{&quot;category&quot;:1,&quot;schema&quot;:{&quot;name&quot;:&quot;HealthCheckResponse&quot;}},&quot;clientMetadata&quot;:{&quot;appName&quot;:&quot;Teams&quot;,&quot;appPlatform&quot;:&quot;Win32&quot;,&quot;releaseAudienceGroup&quot;:&quot;Production&quot;,&quot;releaseChannel&quot;:&quot;general&quot;,&quot;sessionId&quot;:&quot;d17a2403-6c2d-4591-ba67-5cf8dfd3a54e&quot;,&quot;uiLanguage&quot;:&quot;en-us&quot;,&quot;flights&quot;:&quot;Wac-WordEditorServiceSuggestionDescriptionsNoReferenceInformation-Treatment;Wac-WordEditorServiceMultipleGrammarCritiquesPerSentence-Treatment;mc-officeEditorTonalEnabled;mc-officeEditorDNNGrammarEnabled;mc-enable-override-critiques:true;mc-editor-oa;mc-editor-oa-forward-slash;mc-graphIntentDetection-workflow;mc-graphIntentDetection-model-flight04;mc-graphIntentDetection-model-flight11;mc-graphIntentDetection-model-flight12;mc-graphIntentDetection-model-flight13;mc-graphIntentDetection-model-flight15;mc-graphIntentDetection-allowlist-flight02;mc-graphIntentDetection-allowlist-flight05;mc-graphIntentDetection-goldenset-flight05;mc-graphIntentDetection-confidenceLevel;mc-smartComposeIntent-exp-flight01;mc-smartComposeIntent-exp-flight02;mc-smartComposeIntent-exp-flight03;mc-smartComposeIntent-exp-flight04;mc-smartComposeIntent-exp-flight05;mc-editor-oa-topics-flags;oaFluid;vivatopics;mc-editor-oa-document-context;mc-editor-oa-nudge;mc-editor-oa-mid-tile-predictions;mc-editor-oa-predictions;mc-editor-oa-flags;mc-editor-oa-address-detection;mc-editor-oa-entity-detection-counter;mc-editor-oa-local-business-detection;mc-editor-oa-satori-entity-detection;mc-editor-oa-new-loop-suggestions;oa-graph-bestmatch;enable-scope-suggestions;enable-userconfig-connector-suggestion;scd-suggestions-toplevel;enable-meapp-suggestion;mc-editor-oa-settings;mc-unified-text-prediction-timezone-perspectives;mc-editor-oa-ecc-annotation;mc-editor-oa-files-flag;mc-editor-oa-connectors-subgrouping;mc-editor-oa-event-ecc;mc-editor-oa-experimental-prediction-timeout;mc-editor-oa-new-tag;mc-editor-multilingual-proofing;mc-unified-text-prediction-nas-oa;turingEmailFlight;TextPrediction100;mc-editor-oa-email-ecc;mc-editor-oa-teams-entities-ecc;mc-editor-oa-scd-pim;mc-editor-oa-pim-multi-predict;mc-editor-expanded-ecc-responsive;mc-editor-enable-files-new-tidbits;mc-editor-enable-meeting-banner;_acceptsClaimsChallengeMessages;_acceptsSeedingStatusChangeMessages&quot;,&quot;runtimeVersion&quot;:&quot;2.35.2213&quot;,&quot;docSessionId&quot;:&quot;9a8895b7-4891-46d4-8aae-87a0bf66fb71&quot;,&quot;userSystemTimezone&quot;:&quot;Asia/Calcutta&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="x-correlationid" elementType="Header">
                    <stringProp name="Header.name">x-correlationid</stringProp>
                    <stringProp name="Header.value"></stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/v1/leaks:lookupSingle-56" enabled="false">
              <stringProp name="HTTPSampler.domain">passwordsleakcheck-pa.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/leaks:lookupSingle</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#xd;
&#x4;8B!�&#x10;&#x1a;&#x1a;!&#x2;�⋶�&#x15;�&#x378;1��$�&#x1f;�d$��)&gt;@�?KE�G�߶ &#x5;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="x-goog-ext-174067345-bin" elementType="Header">
                    <stringProp name="Header.name">x-goog-ext-174067345-bin</stringProp>
                    <stringProp name="Header.value">CgIIAg==</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer YOUR_TOKEN_HERE</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-protobuf</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-57" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Upgrade" elementType="Header">
                    <stringProp name="Header.name">Upgrade</stringProp>
                    <stringProp name="Header.value">websocket</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                    <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Version" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                    <stringProp name="Header.value">13</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Key" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                    <stringProp name="Header.value">EjvBR2vGbnG+vV4RhjvWuw==</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-58" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type,x-correlationid</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-59" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;payload&quot;:{},&quot;payloadSchema&quot;:{&quot;category&quot;:1,&quot;schema&quot;:{&quot;name&quot;:&quot;HealthCheckRequest&quot;}},&quot;requestedSchema&quot;:{&quot;category&quot;:1,&quot;schema&quot;:{&quot;name&quot;:&quot;HealthCheckResponse&quot;}},&quot;clientMetadata&quot;:{&quot;appName&quot;:&quot;Teams&quot;,&quot;appPlatform&quot;:&quot;Win32&quot;,&quot;releaseAudienceGroup&quot;:&quot;Production&quot;,&quot;releaseChannel&quot;:&quot;general&quot;,&quot;sessionId&quot;:&quot;d17a2403-6c2d-4591-ba67-5cf8dfd3a54e&quot;,&quot;uiLanguage&quot;:&quot;en-us&quot;,&quot;flights&quot;:&quot;Wac-WordEditorServiceSuggestionDescriptionsNoReferenceInformation-Treatment;Wac-WordEditorServiceMultipleGrammarCritiquesPerSentence-Treatment;mc-officeEditorTonalEnabled;mc-officeEditorDNNGrammarEnabled;mc-enable-override-critiques:true;mc-editor-oa;mc-editor-oa-forward-slash;mc-graphIntentDetection-workflow;mc-graphIntentDetection-model-flight04;mc-graphIntentDetection-model-flight11;mc-graphIntentDetection-model-flight12;mc-graphIntentDetection-model-flight13;mc-graphIntentDetection-model-flight15;mc-graphIntentDetection-allowlist-flight02;mc-graphIntentDetection-allowlist-flight05;mc-graphIntentDetection-goldenset-flight05;mc-graphIntentDetection-confidenceLevel;mc-smartComposeIntent-exp-flight01;mc-smartComposeIntent-exp-flight02;mc-smartComposeIntent-exp-flight03;mc-smartComposeIntent-exp-flight04;mc-smartComposeIntent-exp-flight05;mc-editor-oa-topics-flags;oaFluid;vivatopics;mc-editor-oa-document-context;mc-editor-oa-nudge;mc-editor-oa-mid-tile-predictions;mc-editor-oa-predictions;mc-editor-oa-flags;mc-editor-oa-address-detection;mc-editor-oa-entity-detection-counter;mc-editor-oa-local-business-detection;mc-editor-oa-satori-entity-detection;mc-editor-oa-new-loop-suggestions;oa-graph-bestmatch;enable-scope-suggestions;enable-userconfig-connector-suggestion;scd-suggestions-toplevel;enable-meapp-suggestion;mc-editor-oa-settings;mc-unified-text-prediction-timezone-perspectives;mc-editor-oa-ecc-annotation;mc-editor-oa-files-flag;mc-editor-oa-connectors-subgrouping;mc-editor-oa-event-ecc;mc-editor-oa-experimental-prediction-timeout;mc-editor-oa-new-tag;mc-editor-multilingual-proofing;mc-unified-text-prediction-nas-oa;turingEmailFlight;TextPrediction100;mc-editor-oa-email-ecc;mc-editor-oa-teams-entities-ecc;mc-editor-oa-scd-pim;mc-editor-oa-pim-multi-predict;mc-editor-expanded-ecc-responsive;mc-editor-enable-files-new-tidbits;mc-editor-enable-meeting-banner;_acceptsClaimsChallengeMessages;_acceptsSeedingStatusChangeMessages&quot;,&quot;runtimeVersion&quot;:&quot;2.35.2213&quot;,&quot;docSessionId&quot;:&quot;9a8895b7-4891-46d4-8aae-87a0bf66fb71&quot;,&quot;userSystemTimezone&quot;:&quot;Asia/Calcutta&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="x-correlationid" elementType="Header">
                    <stringProp name="Header.name">x-correlationid</stringProp>
                    <stringProp name="Header.value"></stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/OneCollector/1.0/-60" enabled="false">
              <stringProp name="HTTPSampler.domain">self.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">UR�j�0&#x18;�i�4�ll�?&#x18;[7�A��I�,[a7q~ PZ��si&#x1c;G�D&#x12;;��t}�&lt;J�c7�o0��v&#x74b;=&#x94;�n��蜣��#&#x1d;��&#x16;��L&#x5;�&#xd;
U6��������?&#x1f;-ަ5���&#x1e;��(�#*8�$�.�E�^=AI��4d�u|r~2/x��&#x2;�OM&#x3;��L��&gt;�a&#x14;�n(8D]�A*H&#x4;��.�cۋ�m�&#x11;ŋ�&#x17;2�W��&#x14;�@�c�?7��-��e&#x17;&#x1f;0���9���V8�1&#x1a;O�5�&#x6;S1&#x14;a&amp;��	b&#x10;S�@��4&#x16;f[&#xe;E#�_���b�`�&#x10;=&#x1;&#x11;j9˽;&quot;�_��d$����,�%�$�J@�o&#x1a;�/[�p&#x1b;&#x7;6�Ux�Bۢ&#x16;q��;&#x7;&gt;i��&#x16;oC�9&#x18;R�=�3�&#xd;=��&#x1b;�בlo�j~���8�Ղ&#x1e;�6��قu��:\�	��&#x14;Q��Y5ZEN�F &#x7f;��\~��:y�4`�|�۽V&quot;�&#x5;�&#x19;&#x2;kyC�bĸ&#xb;*��`&#x14;~�6��{�L�KmPZq�h&amp;&#xd;w��DI&#x3;��nv��y&#x8;��@�\�Ҥ�ʤ&#xf;���ֵ��q���B&gt;���H*�)��r�@i&lt;�&#x7;a4X��+���&#x1e;�i+&lt;Uj��P���\�m9&#x13;Y&#x16;(9&#x12;��]��6�&#x19;�&#x1e;�J&#x12;��(&#x1e;&amp;&#x1e;%&#x1e;w��+��`D��e&#x0;��</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Upload-Time" elementType="Header">
                    <stringProp name="Header.name">Upload-Time</stringProp>
                    <stringProp name="Header.value">1752812846910</stringProp>
                  </elementProp>
                  <elementProp name="APIKey" elementType="Header">
                    <stringProp name="Header.name">APIKey</stringProp>
                    <stringProp name="Header.value">4bb4d6f7cafc4e9292f972dca2dcde42-bd019ee8-e59c-4b0f-a02c-84e72157a3ef-7485</stringProp>
                  </elementProp>
                  <elementProp name="Content-Encoding" elementType="Header">
                    <stringProp name="Header.name">Content-Encoding</stringProp>
                    <stringProp name="Header.value">deflate</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Expect" elementType="Header">
                    <stringProp name="Header.name">Expect</stringProp>
                    <stringProp name="Header.value">100-continue</stringProp>
                  </elementProp>
                  <elementProp name="SDK-Version" elementType="Header">
                    <stringProp name="Header.name">SDK-Version</stringProp>
                    <stringProp name="Header.value">EVT-Windows-C++-No-3.4.276.1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/bond-compact-binary</stringProp>
                  </elementProp>
                  <elementProp name="Client-Id" elementType="Header">
                    <stringProp name="Header.name">Client-Id</stringProp>
                    <stringProp name="Header.value">NO_AUTH</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-61" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Upgrade" elementType="Header">
                    <stringProp name="Header.name">Upgrade</stringProp>
                    <stringProp name="Header.value">websocket</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                    <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Version" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                    <stringProp name="Header.value">13</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Key" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                    <stringProp name="Header.value">xmmQ7TPp8l/KUwMEzbRnBQ==</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-62" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type,x-correlationid</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/-63" enabled="false">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;payload&quot;:{},&quot;payloadSchema&quot;:{&quot;category&quot;:1,&quot;schema&quot;:{&quot;name&quot;:&quot;HealthCheckRequest&quot;}},&quot;requestedSchema&quot;:{&quot;category&quot;:1,&quot;schema&quot;:{&quot;name&quot;:&quot;HealthCheckResponse&quot;}},&quot;clientMetadata&quot;:{&quot;appName&quot;:&quot;Teams&quot;,&quot;appPlatform&quot;:&quot;Win32&quot;,&quot;releaseAudienceGroup&quot;:&quot;Production&quot;,&quot;releaseChannel&quot;:&quot;general&quot;,&quot;sessionId&quot;:&quot;d17a2403-6c2d-4591-ba67-5cf8dfd3a54e&quot;,&quot;uiLanguage&quot;:&quot;en-us&quot;,&quot;flights&quot;:&quot;Wac-WordEditorServiceSuggestionDescriptionsNoReferenceInformation-Treatment;Wac-WordEditorServiceMultipleGrammarCritiquesPerSentence-Treatment;mc-officeEditorTonalEnabled;mc-officeEditorDNNGrammarEnabled;mc-enable-override-critiques:true;mc-editor-oa;mc-editor-oa-forward-slash;mc-graphIntentDetection-workflow;mc-graphIntentDetection-model-flight04;mc-graphIntentDetection-model-flight11;mc-graphIntentDetection-model-flight12;mc-graphIntentDetection-model-flight13;mc-graphIntentDetection-model-flight15;mc-graphIntentDetection-allowlist-flight02;mc-graphIntentDetection-allowlist-flight05;mc-graphIntentDetection-goldenset-flight05;mc-graphIntentDetection-confidenceLevel;mc-smartComposeIntent-exp-flight01;mc-smartComposeIntent-exp-flight02;mc-smartComposeIntent-exp-flight03;mc-smartComposeIntent-exp-flight04;mc-smartComposeIntent-exp-flight05;mc-editor-oa-topics-flags;oaFluid;vivatopics;mc-editor-oa-document-context;mc-editor-oa-nudge;mc-editor-oa-mid-tile-predictions;mc-editor-oa-predictions;mc-editor-oa-flags;mc-editor-oa-address-detection;mc-editor-oa-entity-detection-counter;mc-editor-oa-local-business-detection;mc-editor-oa-satori-entity-detection;mc-editor-oa-new-loop-suggestions;oa-graph-bestmatch;enable-scope-suggestions;enable-userconfig-connector-suggestion;scd-suggestions-toplevel;enable-meapp-suggestion;mc-editor-oa-settings;mc-unified-text-prediction-timezone-perspectives;mc-editor-oa-ecc-annotation;mc-editor-oa-files-flag;mc-editor-oa-connectors-subgrouping;mc-editor-oa-event-ecc;mc-editor-oa-experimental-prediction-timeout;mc-editor-oa-new-tag;mc-editor-multilingual-proofing;mc-unified-text-prediction-nas-oa;turingEmailFlight;TextPrediction100;mc-editor-oa-email-ecc;mc-editor-oa-teams-entities-ecc;mc-editor-oa-scd-pim;mc-editor-oa-pim-multi-predict;mc-editor-expanded-ecc-responsive;mc-editor-enable-files-new-tidbits;mc-editor-enable-meeting-banner;_acceptsClaimsChallengeMessages;_acceptsSeedingStatusChangeMessages&quot;,&quot;runtimeVersion&quot;:&quot;2.35.2213&quot;,&quot;docSessionId&quot;:&quot;9a8895b7-4891-46d4-8aae-87a0bf66fb71&quot;,&quot;userSystemTimezone&quot;:&quot;Asia/Calcutta&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="x-correlationid" elementType="Header">
                    <stringProp name="Header.name">x-correlationid</stringProp>
                    <stringProp name="Header.value"></stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_03_" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_/-64" enabled="true">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Upgrade" elementType="Header">
                    <stringProp name="Header.name">Upgrade</stringProp>
                    <stringProp name="Header.value">websocket</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                    <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Version" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                    <stringProp name="Header.value">13</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Sec-WebSocket-Key" elementType="Header">
                    <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                    <stringProp name="Header.value">oCIPv9FU6N2BOn4HAhnblw==</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_/sessioninit-65" enabled="true">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/sessioninit</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">content-type</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_/sessioninit-66" enabled="true">
              <stringProp name="HTTPSampler.domain">augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/sessioninit</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;protocolVersion&quot;:2,&quot;clientMetadata&quot;:{&quot;appName&quot;:&quot;Teams&quot;,&quot;appPlatform&quot;:&quot;Win32&quot;,&quot;releaseAudienceGroup&quot;:&quot;Production&quot;,&quot;releaseChannel&quot;:&quot;general&quot;,&quot;sessionId&quot;:&quot;d17a2403-6c2d-4591-ba67-5cf8dfd3a54e&quot;,&quot;uiLanguage&quot;:&quot;en-us&quot;,&quot;flights&quot;:&quot;Wac-WordEditorServiceSuggestionDescriptionsNoReferenceInformation-Treatment;Wac-WordEditorServiceMultipleGrammarCritiquesPerSentence-Treatment;mc-officeEditorTonalEnabled;mc-officeEditorDNNGrammarEnabled;mc-enable-override-critiques:true;mc-editor-oa;mc-editor-oa-forward-slash;mc-graphIntentDetection-workflow;mc-graphIntentDetection-model-flight04;mc-graphIntentDetection-model-flight11;mc-graphIntentDetection-model-flight12;mc-graphIntentDetection-model-flight13;mc-graphIntentDetection-model-flight15;mc-graphIntentDetection-allowlist-flight02;mc-graphIntentDetection-allowlist-flight05;mc-graphIntentDetection-goldenset-flight05;mc-graphIntentDetection-confidenceLevel;mc-smartComposeIntent-exp-flight01;mc-smartComposeIntent-exp-flight02;mc-smartComposeIntent-exp-flight03;mc-smartComposeIntent-exp-flight04;mc-smartComposeIntent-exp-flight05;mc-editor-oa-topics-flags;oaFluid;vivatopics;mc-editor-oa-document-context;mc-editor-oa-nudge;mc-editor-oa-mid-tile-predictions;mc-editor-oa-predictions;mc-editor-oa-flags;mc-editor-oa-address-detection;mc-editor-oa-entity-detection-counter;mc-editor-oa-local-business-detection;mc-editor-oa-satori-entity-detection;mc-editor-oa-new-loop-suggestions;oa-graph-bestmatch;enable-scope-suggestions;enable-userconfig-connector-suggestion;scd-suggestions-toplevel;enable-meapp-suggestion;mc-editor-oa-settings;mc-unified-text-prediction-timezone-perspectives;mc-editor-oa-ecc-annotation;mc-editor-oa-files-flag;mc-editor-oa-connectors-subgrouping;mc-editor-oa-event-ecc;mc-editor-oa-experimental-prediction-timeout;mc-editor-oa-new-tag;mc-editor-multilingual-proofing;mc-unified-text-prediction-nas-oa;turingEmailFlight;TextPrediction100;mc-editor-oa-email-ecc;mc-editor-oa-teams-entities-ecc;mc-editor-oa-scd-pim;mc-editor-oa-pim-multi-predict;mc-editor-expanded-ecc-responsive;mc-editor-enable-files-new-tidbits;mc-editor-enable-meeting-banner;_acceptsClaimsChallengeMessages;_acceptsSeedingStatusChangeMessages&quot;,&quot;runtimeVersion&quot;:&quot;2.35.2213&quot;,&quot;docSessionId&quot;:&quot;9a8895b7-4891-46d4-8aae-87a0bf66fb71&quot;,&quot;userSystemTimezone&quot;:&quot;Asia/Calcutta&quot;},&quot;extensionConfigs&quot;:[],&quot;returnWorkflowInputTypes&quot;:true,&quot;enableRemoteExecutionNotification&quot;:false,&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Session_Protocol_SessionInitMessage&quot;,&quot;B_&quot;:[&quot;AugLoop_Session_Protocol_Message&quot;]},&quot;cv&quot;:&quot;aTetbsCMf6tfzdHdvUo7Pa.13&quot;,&quot;messageId&quot;:&quot;c13&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-68" enabled="true">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,content-type,x-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-67" enabled="true">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,content-type,x-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-69" enabled="true">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;annotationType&quot;:&quot;AugLoop_ProofingSettings_ProofingSettingsAnnotation&quot;,&quot;token&quot;:&quot;AugLoop_ProofingSettings_ProofingSettingsAnnotation-32&quot;,&quot;ignoreExistingAnnotations&quot;:false,&quot;sendStateUpdates&quot;:false,&quot;returnAnnotationDoesNotExist&quot;:false,&quot;sendApologies&quot;:false,&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Session_Protocol_AnnotationActivationMessage&quot;,&quot;B_&quot;:[&quot;AugLoop_Session_Protocol_Message&quot;]},&quot;cv&quot;:&quot;aTetbsCMf6tfzdHdvUo7Pa.14&quot;,&quot;messageId&quot;:&quot;c14&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ3NTQ4OGQyMmNhOTQ2YWNhZTc3NTVhZTFlZWUyODY1In0.eyJhcHBpZCI6IjQzNTRlMjI1LTUwYzktNDQyMy05ZWNlLTJkNWFmZDkwNDg3MCIsImlzcyI6Imh0dHBzOi8vYXVnbG9vcC5vZmZpY2UuY29tL2Fub255bW91c1Rva2VuIiwiYXVkIjoiaHR0cHM6Ly9hdWdsb29wLm9mZmljZS5jb20vYW5vbnltb3VzVG9rZW4iLCJpYXQiOjE3NTI4MTI4NTUsIm5iZiI6MTc1MjgxMjU1NSwiZXhwIjoxNzUyODk5MjU1LCJvaWQiOiJiNFgyVTNoY201d3hWU2xBR2tzSnBncDY3d1k4UVhPbXR2YitHc1ZzZGdjPSIsInNpZCI6ImMyYjY0ZDM5LTJmYzctNDFhYy1hOGRmLWJjOTJhZDM2MTg4ZSJ9.N1K1WPMt0WRqOwfsT2B4zG2nerF5C1_K3vAkI1Nvv-B7TUwZ6N3GCuO1twd17bLnwXb5oJvIhn8abGaPXtXw2vAmfp0cysqpCnlZw3ZgVkQyTTwSdXYAIbnb347vVYWcikN4NIQ3_FDyPtaebetd0n45-LrGllORuxzKPq7OUP3u3-Q8H12zZOkLLtuH8BefndHSxPoXgAfvCQS9JQ-8KOzH_NKfLgZAbMySBU6xpdbdHErG5XWX1xmWLXqXoxVWJIki_2Vx0POFfcBsxxu7JTOW23Ffisc90X2DAbdGot-dOX4hFSljBbdcK0kXb08WJUfY2WwlSuflJcGkUe0KEA</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="x-origin" elementType="Header">
                    <stringProp name="Header.name">x-origin</stringProp>
                    <stringProp name="Header.value">5D4D43FCF51AA4709870F2023FFFBE7C7D83B8305BDCD592F4597B8106E37CAC</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-71" enabled="true">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;cv&quot;:&quot;aTetbsCMf6tfzdHdvUo7Pa.15&quot;,&quot;seq&quot;:0,&quot;ops&quot;:[{&quot;parentPath&quot;:[&quot;session&quot;],&quot;items&quot;:[{&quot;id&quot;:&quot;documentRoot&quot;,&quot;body&quot;:{&quot;isReadonly&quot;:false,&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Core_Document&quot;,&quot;B_&quot;:[&quot;AugLoop_Core_TileGroup&quot;]}}}],&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Core_AddOperation&quot;,&quot;B_&quot;:[&quot;AugLoop_Core_OperationWithSiblingContext&quot;,&quot;AugLoop_Core_Operation&quot;]}}],&quot;groupId&quot;:&quot;Seed&quot;,&quot;groupSize&quot;:1,&quot;groupComplete&quot;:true,&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Session_Protocol_SyncMessage&quot;,&quot;B_&quot;:[&quot;AugLoop_Session_Protocol_Message&quot;]},&quot;messageId&quot;:&quot;c15&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ3NTQ4OGQyMmNhOTQ2YWNhZTc3NTVhZTFlZWUyODY1In0.eyJhcHBpZCI6IjQzNTRlMjI1LTUwYzktNDQyMy05ZWNlLTJkNWFmZDkwNDg3MCIsImlzcyI6Imh0dHBzOi8vYXVnbG9vcC5vZmZpY2UuY29tL2Fub255bW91c1Rva2VuIiwiYXVkIjoiaHR0cHM6Ly9hdWdsb29wLm9mZmljZS5jb20vYW5vbnltb3VzVG9rZW4iLCJpYXQiOjE3NTI4MTI4NTUsIm5iZiI6MTc1MjgxMjU1NSwiZXhwIjoxNzUyODk5MjU1LCJvaWQiOiJiNFgyVTNoY201d3hWU2xBR2tzSnBncDY3d1k4UVhPbXR2YitHc1ZzZGdjPSIsInNpZCI6ImMyYjY0ZDM5LTJmYzctNDFhYy1hOGRmLWJjOTJhZDM2MTg4ZSJ9.N1K1WPMt0WRqOwfsT2B4zG2nerF5C1_K3vAkI1Nvv-B7TUwZ6N3GCuO1twd17bLnwXb5oJvIhn8abGaPXtXw2vAmfp0cysqpCnlZw3ZgVkQyTTwSdXYAIbnb347vVYWcikN4NIQ3_FDyPtaebetd0n45-LrGllORuxzKPq7OUP3u3-Q8H12zZOkLLtuH8BefndHSxPoXgAfvCQS9JQ-8KOzH_NKfLgZAbMySBU6xpdbdHErG5XWX1xmWLXqXoxVWJIki_2Vx0POFfcBsxxu7JTOW23Ffisc90X2DAbdGot-dOX4hFSljBbdcK0kXb08WJUfY2WwlSuflJcGkUe0KEA</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="x-origin" elementType="Header">
                    <stringProp name="Header.name">x-origin</stringProp>
                    <stringProp name="Header.value">5D4D43FCF51AA4709870F2023FFFBE7C7D83B8305BDCD592F4597B8106E37CAC</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-70" enabled="true">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;longPollTimeoutHint&quot;:15000,&quot;type&quot;:1,&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Session_Protocol_SessionLongPollMessage&quot;,&quot;B_&quot;:[&quot;AugLoop_Session_Protocol_Message&quot;]},&quot;cv&quot;:&quot;aTetbsCMf6tfzdHdvUo7Pa.16&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ3NTQ4OGQyMmNhOTQ2YWNhZTc3NTVhZTFlZWUyODY1In0.eyJhcHBpZCI6IjQzNTRlMjI1LTUwYzktNDQyMy05ZWNlLTJkNWFmZDkwNDg3MCIsImlzcyI6Imh0dHBzOi8vYXVnbG9vcC5vZmZpY2UuY29tL2Fub255bW91c1Rva2VuIiwiYXVkIjoiaHR0cHM6Ly9hdWdsb29wLm9mZmljZS5jb20vYW5vbnltb3VzVG9rZW4iLCJpYXQiOjE3NTI4MTI4NTUsIm5iZiI6MTc1MjgxMjU1NSwiZXhwIjoxNzUyODk5MjU1LCJvaWQiOiJiNFgyVTNoY201d3hWU2xBR2tzSnBncDY3d1k4UVhPbXR2YitHc1ZzZGdjPSIsInNpZCI6ImMyYjY0ZDM5LTJmYzctNDFhYy1hOGRmLWJjOTJhZDM2MTg4ZSJ9.N1K1WPMt0WRqOwfsT2B4zG2nerF5C1_K3vAkI1Nvv-B7TUwZ6N3GCuO1twd17bLnwXb5oJvIhn8abGaPXtXw2vAmfp0cysqpCnlZw3ZgVkQyTTwSdXYAIbnb347vVYWcikN4NIQ3_FDyPtaebetd0n45-LrGllORuxzKPq7OUP3u3-Q8H12zZOkLLtuH8BefndHSxPoXgAfvCQS9JQ-8KOzH_NKfLgZAbMySBU6xpdbdHErG5XWX1xmWLXqXoxVWJIki_2Vx0POFfcBsxxu7JTOW23Ffisc90X2DAbdGot-dOX4hFSljBbdcK0kXb08WJUfY2WwlSuflJcGkUe0KEA</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="x-origin" elementType="Header">
                    <stringProp name="Header.name">x-origin</stringProp>
                    <stringProp name="Header.value">5D4D43FCF51AA4709870F2023FFFBE7C7D83B8305BDCD592F4597B8106E37CAC</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-72" enabled="true">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;annotationType&quot;:&quot;AugLoop_ProofingSettings_ProofingSettingsAnnotation&quot;,&quot;token&quot;:&quot;AugLoop_ProofingSettings_ProofingSettingsAnnotation-33&quot;,&quot;ignoreExistingAnnotations&quot;:false,&quot;sendStateUpdates&quot;:false,&quot;returnAnnotationDoesNotExist&quot;:false,&quot;sendApologies&quot;:false,&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Session_Protocol_AnnotationActivationMessage&quot;,&quot;B_&quot;:[&quot;AugLoop_Session_Protocol_Message&quot;]},&quot;cv&quot;:&quot;aTetbsCMf6tfzdHdvUo7Pa.17&quot;,&quot;messageId&quot;:&quot;c16&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ3NTQ4OGQyMmNhOTQ2YWNhZTc3NTVhZTFlZWUyODY1In0.eyJhcHBpZCI6IjQzNTRlMjI1LTUwYzktNDQyMy05ZWNlLTJkNWFmZDkwNDg3MCIsImlzcyI6Imh0dHBzOi8vYXVnbG9vcC5vZmZpY2UuY29tL2Fub255bW91c1Rva2VuIiwiYXVkIjoiaHR0cHM6Ly9hdWdsb29wLm9mZmljZS5jb20vYW5vbnltb3VzVG9rZW4iLCJpYXQiOjE3NTI4MTI4NTUsIm5iZiI6MTc1MjgxMjU1NSwiZXhwIjoxNzUyODk5MjU1LCJvaWQiOiJiNFgyVTNoY201d3hWU2xBR2tzSnBncDY3d1k4UVhPbXR2YitHc1ZzZGdjPSIsInNpZCI6ImMyYjY0ZDM5LTJmYzctNDFhYy1hOGRmLWJjOTJhZDM2MTg4ZSJ9.N1K1WPMt0WRqOwfsT2B4zG2nerF5C1_K3vAkI1Nvv-B7TUwZ6N3GCuO1twd17bLnwXb5oJvIhn8abGaPXtXw2vAmfp0cysqpCnlZw3ZgVkQyTTwSdXYAIbnb347vVYWcikN4NIQ3_FDyPtaebetd0n45-LrGllORuxzKPq7OUP3u3-Q8H12zZOkLLtuH8BefndHSxPoXgAfvCQS9JQ-8KOzH_NKfLgZAbMySBU6xpdbdHErG5XWX1xmWLXqXoxVWJIki_2Vx0POFfcBsxxu7JTOW23Ffisc90X2DAbdGot-dOX4hFSljBbdcK0kXb08WJUfY2WwlSuflJcGkUe0KEA</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="x-origin" elementType="Header">
                    <stringProp name="Header.name">x-origin</stringProp>
                    <stringProp name="Header.value">5D4D43FCF51AA4709870F2023FFFBE7C7D83B8305BDCD592F4597B8106E37CAC</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-74" enabled="true">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;authToken&quot;:&quot;eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2Q0JDLUhTNTEyIiwia2lkIjoiQnlDaS1OU3ZsTmhtOE1iZVlGQmZwQm56eHhkZUgxaEhDbFFzbk1xQ2ZFZyIsInhtc19oZF91dGkiOiJOWVZDSmY5c0MwdXFSUzI2dGd0U0FBIiwieG1zX2hkX2lhdCI6IjE3NTI4MTA0NzAifQ..Dyd1JL1J8d36nYdsnEa4nQ.7TW315aEyHGYboOxN0Q6z63Rntcn6fDLHNo2sI10XXcIAZlcrsXquq-TKTozgYG-ZKIvgYep-tIFm5kxgfj4RvdSAVvdydH77BPbEFlB7nDzBTvAhU3xQ89EOaCIqavIjyFawPAHIvPF7pSkauvPlToUvIBvPLS9sS6WSdtxHtIivQqyhYVwpChII032kSMijRQVVY10KNgph7kWm5ZvZofPOAYK7whTk839wrkeT1F6vE5BTEfnS27ObEh11hdQszARIN4h_PrDOwK-b5jcI3jMV30VREkA-AiO7lz4dPvGHaZ8Y1Q2KOkjbS80wdAqWBI0XcHIDiGw3gwZZjtMYVF-d3Lzt1Rs3CNxci24fQJx6bTAD0IhuOPfpsx6ANHLNBo6rh3S6xC1CoQyQgWOlooVbR7CZ2w-ki8cHh3XNFhT7lIjnYm0Hz2vr979W3pF8ibFEhrJZWwlLJ-91n7WeCO3nwqNsS5QB5uL_MpVnR6X9N7EZdqLc2LoL-wpQAubYYKX0fnF7B7qDyedw70HzZBCReS2qTLEGnEd3OIkI1hYcJqpsRYREFWzRe2hXUMiJdnRq8X2tbYmLwb3EPgbBKKXRFMrHJ2u6Dh5XrvFaEw34DiaA1Xi3-HGKtqBDTvUSkv5uvshD9y9hFLBhuRilrmBmu8x3dqqnGDvMl2aDOA6Gd5QNpsTOeifSbd7DRK3fDIhaENJRyC4C66JtDLext7HhDhv9RiU5iQWWtre-_aHm00EPX2pvTCQHBhlTEAgSKv3OzVKSB59MTuvxetiwvOqcQ7EDTMoAYyGVQOf7xw3phuarXwRGis8L-6cJtsoGyjdvIXIvKoS0yZKfEzRm6Qwijxm_uxMVtfsMBmPWVkmympsXP8h-zCNc7lbiz_GBBYHxU7jfn7HxGgFV0_YQYYLQIjZfHikS05RNZfLB0phte1ujeWHjqTD66g9wMpaj4t5_VazN7mz_nbyCYukTjDtjbggK9RwOt1-PXybykvW4xgUD6bjvPKbzKdadhJrqAEjobzT8yh-M3htGD0dVeezQQBaXwnCpaCtfyrxt-sH0hxX-nHwOd6zbavVvZmTpELOT_UxrxaQZAaTqJMYdXXgrmhXiep3mv6ialySlmRMpj3FNW35wjdYh7o0WAKqyb8_lA2v3hf1E8ksuz4ZN6o5Od8vGs7kMDyTwjRyZBoX3bXChfQA3nXvHTU41aPZk4RMcDuKu4OZ6O09uk_6rHboO0HWT0jH6jjEt6ZoIR7tcDunlyfmGB9izAHNDlYva85YEdFyFMcBMIBU6ZxWE5UCP0fFk8Fta1A0hvIawke9Cz4rFbO1X0RC6HxC55VL_x8tO55aat1gC7CmzOvtir-Ggioibfzxu_60x5tAP6PvQqg0iZ0pYKK_J63UQC-qOiSqEdLrJqwbOjspu1I687m4xNyXf0Km93BLJqwmcIRS7E8rJiESUgQWynkOjLONQ4v_XypjEVKtBouC2XylQ5jwCHBQgRgoRySY-fgDSB2jDP-R2mqZOOPycUm_GuUvHzLP5LC0ADPHDBhB9IXoxqalu9jo_r7vNZsOLZr2IydQ2dQFbnKsTE4Cwqm1NFM-HBvJUntdnzafUundLtgcNvo7EiZZSwkJZFt0PScd4tg5db7DXhpLHx-GygBncU73uucsnjEG69aJsIM694xV4zi_R3oozRf7eBxJMsyqqshl0zTtWIMF0O_JhdB8cpOfTce1vcMPItwnf5J1E3omLrXcZy-mDV-aE4TqH4e08_atIO_q1Fgc0e9V4oqPzsTEILP1e6QreZ5d5Mlz5HzWq9VlLjs4U1ax82euV2Mi7ahoYLMlxQZISgeK1hD8KhbaOZfnCOLRi91UtO2JIFhTjxdFAkmpSFjz56nYU0lTpD3PX10z059eudTwpCwO6Zs5x5mF7FAlHTnrRvqe1pjwAtxu5vd3VTidVoH8A2VIvqSqE0ZQZhMirfjiGAEClwzS6AOGYd4YW9Y80pbKvIKWXBuDwlXjtLc6huvzyqHlTWsbjr0i4iMkXjfQ4_a3WDoC7P5s5aGwk0IsPIjH5YY0UAYBkK2lqUxWf-AVGxgc4p62OR94FPpgj-E1xF7MUIliasSvbyOJpz04wTloOLolzJp0Z14GZJMOCDYb-EWN-apWuHIl_gdIRJ4m0L5y1NQ8dYJRKZ3pVHJZNmRHDKZZGY3NSOAQ0SO5Q6695tyGm21Uh101UpJ0OWsQ__BujRG5_lxfYfqWZcva0ipGSVapYsGB5JDgA_zTgGVxZlM8LJlardgMihtAp4eFqylGPKR8gkg7HCY-SzZAsSku-6GfJ71quDnx0Oq95mbtrXRcjZ-49yPCtBNUjnnCBSFmZ6Ex_gIWzg3vAKiis8iWB6wJ5yKPoF0vpZ4orllyh29_-UeWuqZK_KvD3bcig_5PGk5-UWGjXPoNoHpWVBYP5QcuraPWAtOFH_E2P9UlpwGfQS7eapjsiWBIA4yD71GuY6RcTUbiBVB_p48KSUHiQ5NFOPUYN4ahSAqrmcrE0TaQax7B8uvsg-Yi1CCGpPB87s1xd14QVSI0Mb76_PFt6mTazg.LoQrOUPFj-wR1dVEdGBSgnX47gTSeLlKxF4d3cjbomw&quot;,&quot;version&quot;:1,&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Session_Protocol_TokenProvisionMessage&quot;,&quot;B_&quot;:[&quot;AugLoop_Session_Protocol_Message&quot;]},&quot;cv&quot;:&quot;aTetbsCMf6tfzdHdvUo7Pa.18&quot;,&quot;messageId&quot;:&quot;c17&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ3NTQ4OGQyMmNhOTQ2YWNhZTc3NTVhZTFlZWUyODY1In0.eyJhcHBpZCI6IjQzNTRlMjI1LTUwYzktNDQyMy05ZWNlLTJkNWFmZDkwNDg3MCIsImlzcyI6Imh0dHBzOi8vYXVnbG9vcC5vZmZpY2UuY29tL2Fub255bW91c1Rva2VuIiwiYXVkIjoiaHR0cHM6Ly9hdWdsb29wLm9mZmljZS5jb20vYW5vbnltb3VzVG9rZW4iLCJpYXQiOjE3NTI4MTI4NTUsIm5iZiI6MTc1MjgxMjU1NSwiZXhwIjoxNzUyODk5MjU1LCJvaWQiOiJiNFgyVTNoY201d3hWU2xBR2tzSnBncDY3d1k4UVhPbXR2YitHc1ZzZGdjPSIsInNpZCI6ImMyYjY0ZDM5LTJmYzctNDFhYy1hOGRmLWJjOTJhZDM2MTg4ZSJ9.N1K1WPMt0WRqOwfsT2B4zG2nerF5C1_K3vAkI1Nvv-B7TUwZ6N3GCuO1twd17bLnwXb5oJvIhn8abGaPXtXw2vAmfp0cysqpCnlZw3ZgVkQyTTwSdXYAIbnb347vVYWcikN4NIQ3_FDyPtaebetd0n45-LrGllORuxzKPq7OUP3u3-Q8H12zZOkLLtuH8BefndHSxPoXgAfvCQS9JQ-8KOzH_NKfLgZAbMySBU6xpdbdHErG5XWX1xmWLXqXoxVWJIki_2Vx0POFfcBsxxu7JTOW23Ffisc90X2DAbdGot-dOX4hFSljBbdcK0kXb08WJUfY2WwlSuflJcGkUe0KEA</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="x-origin" elementType="Header">
                    <stringProp name="Header.name">x-origin</stringProp>
                    <stringProp name="Header.value">5D4D43FCF51AA4709870F2023FFFBE7C7D83B8305BDCD592F4597B8106E37CAC</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-75" enabled="true">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;annotationType&quot;:&quot;AugLoop_Text_Critique&quot;,&quot;token&quot;:&quot;AugLoop_Text_Critique-34&quot;,&quot;config&quot;:{&quot;LicenseType&quot;:&quot;Subscription&quot;,&quot;OverriddenCritiqueTypeOptions&quot;:[],&quot;ProofingLanguages&quot;:[&quot;en-in&quot;],&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Text_ProofingAnnotationActivationConfig&quot;,&quot;B_&quot;:[]}},&quot;ignoreExistingAnnotations&quot;:false,&quot;sendStateUpdates&quot;:false,&quot;returnAnnotationDoesNotExist&quot;:false,&quot;sendApologies&quot;:false,&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Session_Protocol_AnnotationActivationMessage&quot;,&quot;B_&quot;:[&quot;AugLoop_Session_Protocol_Message&quot;]},&quot;cv&quot;:&quot;aTetbsCMf6tfzdHdvUo7Pa.19&quot;,&quot;messageId&quot;:&quot;c18&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ3NTQ4OGQyMmNhOTQ2YWNhZTc3NTVhZTFlZWUyODY1In0.eyJhcHBpZCI6IjQzNTRlMjI1LTUwYzktNDQyMy05ZWNlLTJkNWFmZDkwNDg3MCIsImlzcyI6Imh0dHBzOi8vYXVnbG9vcC5vZmZpY2UuY29tL2Fub255bW91c1Rva2VuIiwiYXVkIjoiaHR0cHM6Ly9hdWdsb29wLm9mZmljZS5jb20vYW5vbnltb3VzVG9rZW4iLCJpYXQiOjE3NTI4MTI4NTUsIm5iZiI6MTc1MjgxMjU1NSwiZXhwIjoxNzUyODk5MjU1LCJvaWQiOiJiNFgyVTNoY201d3hWU2xBR2tzSnBncDY3d1k4UVhPbXR2YitHc1ZzZGdjPSIsInNpZCI6ImMyYjY0ZDM5LTJmYzctNDFhYy1hOGRmLWJjOTJhZDM2MTg4ZSJ9.N1K1WPMt0WRqOwfsT2B4zG2nerF5C1_K3vAkI1Nvv-B7TUwZ6N3GCuO1twd17bLnwXb5oJvIhn8abGaPXtXw2vAmfp0cysqpCnlZw3ZgVkQyTTwSdXYAIbnb347vVYWcikN4NIQ3_FDyPtaebetd0n45-LrGllORuxzKPq7OUP3u3-Q8H12zZOkLLtuH8BefndHSxPoXgAfvCQS9JQ-8KOzH_NKfLgZAbMySBU6xpdbdHErG5XWX1xmWLXqXoxVWJIki_2Vx0POFfcBsxxu7JTOW23Ffisc90X2DAbdGot-dOX4hFSljBbdcK0kXb08WJUfY2WwlSuflJcGkUe0KEA</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="x-origin" elementType="Header">
                    <stringProp name="Header.name">x-origin</stringProp>
                    <stringProp name="Header.value">5D4D43FCF51AA4709870F2023FFFBE7C7D83B8305BDCD592F4597B8106E37CAC</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-76" enabled="true">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Session_Protocol_Response&quot;,&quot;B_&quot;:[]},&quot;messageId&quot;:&quot;s1&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ3NTQ4OGQyMmNhOTQ2YWNhZTc3NTVhZTFlZWUyODY1In0.eyJhcHBpZCI6IjQzNTRlMjI1LTUwYzktNDQyMy05ZWNlLTJkNWFmZDkwNDg3MCIsImlzcyI6Imh0dHBzOi8vYXVnbG9vcC5vZmZpY2UuY29tL2Fub255bW91c1Rva2VuIiwiYXVkIjoiaHR0cHM6Ly9hdWdsb29wLm9mZmljZS5jb20vYW5vbnltb3VzVG9rZW4iLCJpYXQiOjE3NTI4MTI4NTUsIm5iZiI6MTc1MjgxMjU1NSwiZXhwIjoxNzUyODk5MjU1LCJvaWQiOiJiNFgyVTNoY201d3hWU2xBR2tzSnBncDY3d1k4UVhPbXR2YitHc1ZzZGdjPSIsInNpZCI6ImMyYjY0ZDM5LTJmYzctNDFhYy1hOGRmLWJjOTJhZDM2MTg4ZSJ9.N1K1WPMt0WRqOwfsT2B4zG2nerF5C1_K3vAkI1Nvv-B7TUwZ6N3GCuO1twd17bLnwXb5oJvIhn8abGaPXtXw2vAmfp0cysqpCnlZw3ZgVkQyTTwSdXYAIbnb347vVYWcikN4NIQ3_FDyPtaebetd0n45-LrGllORuxzKPq7OUP3u3-Q8H12zZOkLLtuH8BefndHSxPoXgAfvCQS9JQ-8KOzH_NKfLgZAbMySBU6xpdbdHErG5XWX1xmWLXqXoxVWJIki_2Vx0POFfcBsxxu7JTOW23Ffisc90X2DAbdGot-dOX4hFSljBbdcK0kXb08WJUfY2WwlSuflJcGkUe0KEA</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="x-origin" elementType="Header">
                    <stringProp name="Header.name">x-origin</stringProp>
                    <stringProp name="Header.value">5D4D43FCF51AA4709870F2023FFFBE7C7D83B8305BDCD592F4597B8106E37CAC</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-77" enabled="true">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;cv&quot;:&quot;aTetbsCMf6tfzdHdvUo7Pa.21&quot;,&quot;seq&quot;:1,&quot;ops&quot;:[{&quot;parentPath&quot;:[&quot;session&quot;,&quot;documentRoot&quot;,&quot;a365f0cd-bdf4-42d5-bbb2-57e8fd590d80&quot;],&quot;prevId&quot;:&quot;&quot;,&quot;nextId&quot;:&quot;&quot;,&quot;items&quot;:[{&quot;id&quot;:&quot;b3c01eb3-33a9-495c-a55a-e3f379dff661&quot;,&quot;body&quot;:{&quot;content&quot;:&quot;\n&quot;,&quot;formattedRanges&quot;:[{&quot;start&quot;:0,&quot;length&quot;:1,&quot;languageId&quot;:&quot;en-in&quot;}],&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Text_FormattedTextTile&quot;,&quot;B_&quot;:[&quot;AugLoop_Text_TextTile&quot;]}},&quot;revId&quot;:&quot;0&quot;,&quot;sourceTimestamp&quot;:1752812858080,&quot;contextId&quot;:&quot;C1&quot;}],&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Core_AddOperation&quot;,&quot;B_&quot;:[&quot;AugLoop_Core_OperationWithSiblingContext&quot;,&quot;AugLoop_Core_Operation&quot;]}}],&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Session_Protocol_SyncMessage&quot;,&quot;B_&quot;:[&quot;AugLoop_Session_Protocol_Message&quot;]},&quot;messageId&quot;:&quot;c19&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ3NTQ4OGQyMmNhOTQ2YWNhZTc3NTVhZTFlZWUyODY1In0.eyJhcHBpZCI6IjQzNTRlMjI1LTUwYzktNDQyMy05ZWNlLTJkNWFmZDkwNDg3MCIsImlzcyI6Imh0dHBzOi8vYXVnbG9vcC5vZmZpY2UuY29tL2Fub255bW91c1Rva2VuIiwiYXVkIjoiaHR0cHM6Ly9hdWdsb29wLm9mZmljZS5jb20vYW5vbnltb3VzVG9rZW4iLCJpYXQiOjE3NTI4MTI4NTUsIm5iZiI6MTc1MjgxMjU1NSwiZXhwIjoxNzUyODk5MjU1LCJvaWQiOiJiNFgyVTNoY201d3hWU2xBR2tzSnBncDY3d1k4UVhPbXR2YitHc1ZzZGdjPSIsInNpZCI6ImMyYjY0ZDM5LTJmYzctNDFhYy1hOGRmLWJjOTJhZDM2MTg4ZSJ9.N1K1WPMt0WRqOwfsT2B4zG2nerF5C1_K3vAkI1Nvv-B7TUwZ6N3GCuO1twd17bLnwXb5oJvIhn8abGaPXtXw2vAmfp0cysqpCnlZw3ZgVkQyTTwSdXYAIbnb347vVYWcikN4NIQ3_FDyPtaebetd0n45-LrGllORuxzKPq7OUP3u3-Q8H12zZOkLLtuH8BefndHSxPoXgAfvCQS9JQ-8KOzH_NKfLgZAbMySBU6xpdbdHErG5XWX1xmWLXqXoxVWJIki_2Vx0POFfcBsxxu7JTOW23Ffisc90X2DAbdGot-dOX4hFSljBbdcK0kXb08WJUfY2WwlSuflJcGkUe0KEA</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="x-origin" elementType="Header">
                    <stringProp name="Header.name">x-origin</stringProp>
                    <stringProp name="Header.value">5D4D43FCF51AA4709870F2023FFFBE7C7D83B8305BDCD592F4597B8106E37CAC</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_03_Select_" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_S/organizations/oauth2/v2.0/token?client-request-id=9da41fd5-f479-e316-65f0-36115d34c88d-78" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/organizations/oauth2/v2.0/token?client-request-id=9da41fd5-f479-e316-65f0-36115d34c88d</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">9199bf20-a13f-4107-85dc-02114787ef48</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://outlook.office.com/mail/oauthRedirect.html</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://api.office.net/.default openid profile offline_access</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                    <stringProp name="Argument.value">refresh_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">msal.js.browser</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-VER" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-VER</stringProp>
                    <stringProp name="Argument.value">4.12.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-lib-capability" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-ms-lib-capability</stringProp>
                    <stringProp name="Argument.value">retry-after, h429</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-current-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-current-telemetry</stringProp>
                    <stringProp name="Argument.value">5|61,0,,,|,</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-last-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-last-telemetry</stringProp>
                    <stringProp name="Argument.value">5|66|||0,0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="refresh_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">refresh_token</stringProp>
                    <stringProp name="Argument.value">1.ASoApUY86s-8mkihuOOHGwjnwCC_mZE_oQdBhdwCEUeH70gpAd8qAA.AgABAwEAAABVrSpeuWamRam2jAF1XRQEAwDs_wUA9P8FumqeIYdGvHgw0Ne2JtNIsacugrUp5-choQ52Py8ZWqBK8CbyAmzlp_BxGO2c4nvDIFYfosv42Or6ahD3Evrrk4x98alEjI6OZcUoD8SmRB0MhpLdaUFW61keA9bg7h5NM7nWedXD8zEA632oMt7-LzcpiL81H2oXrF3Gxx0jTFfWBxMQZ36xhCI3EoW-HJde9wCTJFHzIwirFghy_TGoo6dku9zVGF_7uD_0gxAjJV38-YWojEfEKX87dSYOqJTK-Z3g2J94Q1dYsINP3mRQcsxcutXG5rwmivlg5MCGYVB67czGnK00S_zQqFELxXRVeorMFC94lAK72OWoAuKUrl4ha23Z_AMrdNaw7nLbGUCQ1MLVV_y5tsb3aewoxYljkL5C0Ymi9IDl3B1XAggBrCWbPxjZrsKXnN6_MIXdCcavnxBGSOU_EGthWmgfQds8UqgjC09d0rTP92W0ypvMQE63JME_AaI3iB_A7ovZADwSrJak33klkVuW78BXDrl7sU3maAKAqCDTgnfAEJ37Q5QTx5S90nWw83JVbUUiVi4udRhwvReWavuC6v54vXquwAQkAKIiMRY_zh2PAUupzNB8h6Ff-T59h0VMsfC74pvNwylqv4mgtmyrSYia5-gJC_1h_ABauwH-uN2Gvqf57gRd-QVbfE9pkWPnnI-iZXKeO9fVWanYiiJnTJgERYRQZcBsQJiUinKkl4oG74ycrXyXx_bxZiaY6E0q9GtzF8QNqL8Vuql4jUkj2U7oT_2lGrSXw3bFxZl5qJJ8Zkw8fS8iF8e3hywqYA4yvcXh3cCZWH3QYOtvVB-Lc2rTOPr2WQrWWLdYN3pTMXxmuaiZfu1qb2J1DDZrbYzUOmFUc5KYFvWxhtIV0gbuFTQhoKgrW_jBgrnFXC5oWfPil_giY1r9yNhabyi-SYNPm0QcOZsDtj6X1tcGPDHGaCxNBWpy</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="claims" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">claims</stringProp>
                    <stringProp name="Argument.value">{&quot;access_token&quot;:{&quot;xms_cc&quot;:{&quot;values&quot;:[&quot;CP1&quot;]}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Argument.value">Oid:a295562e-aeb0-4d51-b54a-54595d8c20ec@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_03_Select_Fish" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_Select/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;client-id=NO_AUTH&amp;client-version=1DS-Web-JS-4.3.6&amp;apikey=d634483c08244c1ca09af2b2d952c92e-ab2bba03-2ba3-49d8-a82c-ef6da750d8ab-7725&amp;upload-time=1752812867966&amp;w=0&amp;NoResponseBody=true-79" enabled="false">
              <stringProp name="HTTPSampler.domain">browser.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;client-id=NO_AUTH&amp;client-version=1DS-Web-JS-4.3.6&amp;apikey=d634483c08244c1ca09af2b2d952c92e-ab2bba03-2ba3-49d8-a82c-ef6da750d8ab-7725&amp;upload-time=1752812867966&amp;w=0&amp;NoResponseBody=true</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;name&quot;:&quot;acquireTokenSilent&quot;,&quot;time&quot;:&quot;2025-07-18T04:27:47.964Z&quot;,&quot;ver&quot;:&quot;4.0&quot;,&quot;iKey&quot;:&quot;o:d634483c08244c1ca09af2b2d952c92e&quot;,&quot;ext&quot;:{&quot;sdk&quot;:{&quot;ver&quot;:&quot;1DS-Web-JS-4.3.6&quot;,&quot;seq&quot;:8,&quot;epoch&quot;:&quot;2401622023&quot;},&quot;app&quot;:{&quot;sesId&quot;:&quot;K+hZa2651drgKGS52flIgx&quot;},&quot;user&quot;:{&quot;locale&quot;:&quot;en-US&quot;},&quot;web&quot;:{&quot;domain&quot;:&quot;outlook.office.com&quot;,&quot;screenRes&quot;:&quot;1280X720&quot;,&quot;userConsent&quot;:false,&quot;consentDetails&quot;:&quot;{\&quot;GPC_DataSharingOptIn\&quot;:false}&quot;},&quot;intweb&quot;:{},&quot;utc&quot;:{&quot;popSample&quot;:100},&quot;loc&quot;:{&quot;tz&quot;:&quot;+05:30&quot;},&quot;metadata&quot;:{&quot;f&quot;:{&quot;status&quot;:{&quot;t&quot;:6},&quot;startTimeMs&quot;:{&quot;t&quot;:6},&quot;cacheLookupPolicy&quot;:{&quot;t&quot;:6},&quot;acquireTokenSilentAsyncCallCount&quot;:{&quot;t&quot;:6},&quot;visibilityChangeCount&quot;:{&quot;t&quot;:6},&quot;initializeSilentRequestCallCount&quot;:{&quot;t&quot;:6},&quot;initializeBaseRequestCallCount&quot;:{&quot;t&quot;:6},&quot;initializeBaseRequestDurationMs&quot;:{&quot;t&quot;:6},&quot;initializeSilentRequestDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenFromCacheCallCount&quot;:{&quot;t&quot;:6},&quot;silentCacheClientAcquireTokenCallCount&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetClientConfigurationCallCount&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetDiscoveredAuthorityCallCount&quot;:{&quot;t&quot;:6},&quot;authorityFactoryCreateDiscoveredInstanceCallCount&quot;:{&quot;t&quot;:6},&quot;authorityResolveEndpointsAsyncCallCount&quot;:{&quot;t&quot;:6},&quot;authorityUpdateCloudDiscoveryMetadataCallCount&quot;:{&quot;t&quot;:6},&quot;authorityUpdateCloudDiscoveryMetadataDurationMs&quot;:{&quot;t&quot;:6},&quot;authorityUpdateEndpointMetadataCallCount&quot;:{&quot;t&quot;:6},&quot;authorityUpdateEndpointMetadataDurationMs&quot;:{&quot;t&quot;:6},&quot;authorityResolveEndpointsAsyncDurationMs&quot;:{&quot;t&quot;:6},&quot;authorityFactoryCreateDiscoveredInstanceDurationMs&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetDiscoveredAuthorityDurationMs&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetClientConfigurationDurationMs&quot;:{&quot;t&quot;:6},&quot;silentFlowClientAcquireCachedTokenCallCount&quot;:{&quot;t&quot;:6},&quot;silentFlowClientAcquireCachedTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;silentCacheClientAcquireTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenFromCacheDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenByRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;silentRefreshClientAcquireTokenCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenByRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;cacheManagerGetRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;cacheManagerGetRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecuteTokenRequestCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientCreateTokenRequestBodyCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientCreateTokenRequestBodyDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecutePostToTokenEndpointCallCount&quot;:{&quot;t&quot;:6},&quot;networkClientSendPostRequestAsyncCallCount&quot;:{&quot;t&quot;:6},&quot;networkClientSendPostRequestAsyncDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenSize&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecutePostToTokenEndpointDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecuteTokenRequestDurationMs&quot;:{&quot;t&quot;:6},&quot;handleServerTokenResponseCallCount&quot;:{&quot;t&quot;:6},&quot;encryptCallCount&quot;:{&quot;t&quot;:6},&quot;encryptDurationMs&quot;:{&quot;t&quot;:6},&quot;handleServerTokenResponseDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenByRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;silentRefreshClientAcquireTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenByRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenSilentAsyncDurationMs&quot;:{&quot;t&quot;:6},&quot;accessTokenSize&quot;:{&quot;t&quot;:6},&quot;idTokenSize&quot;:{&quot;t&quot;:6},&quot;durationMs&quot;:{&quot;t&quot;:6},&quot;queuedTimeMs&quot;:{&quot;t&quot;:6},&quot;queuedCount&quot;:{&quot;t&quot;:6},&quot;queuedManuallyCompletedCount&quot;:{&quot;t&quot;:6},&quot;incompleteSubsCount&quot;:{&quot;t&quot;:6}}}},&quot;data&quot;:{&quot;baseData&quot;:{&quot;properties&quot;:{&quot;version&quot;:&quot;PostChannel=4.3.6;SystemPropertiesCollector=4.3.6&quot;}},&quot;eventId&quot;:&quot;01981bc9-c7be-7918-8729-e603cc54027b&quot;,&quot;status&quot;:2,&quot;authority&quot;:&quot;${scheme}://login.microsoftonline.com/common/&quot;,&quot;libraryName&quot;:&quot;@azure/msal-browser&quot;,&quot;libraryVersion&quot;:&quot;4.12.0&quot;,&quot;clientId&quot;:&quot;9199bf20-a13f-4107-85dc-02114787ef48&quot;,&quot;name&quot;:&quot;acquireTokenSilent&quot;,&quot;startTimeMs&quot;:1752812865470,&quot;correlationId&quot;:&quot;9da41fd5-f479-e316-65f0-36115d34c88d&quot;,&quot;appName&quot;:&quot;OWA&quot;,&quot;appVersion&quot;:&quot;20250704003.08&quot;,&quot;cacheLookupPolicy&quot;:0,&quot;accountType&quot;:&quot;AAD&quot;,&quot;deduped&quot;:false,&quot;acquireTokenSilentAsyncCallCount&quot;:1,&quot;visibilityChangeCount&quot;:0,&quot;initializeSilentRequestCallCount&quot;:1,&quot;initializeBaseRequestCallCount&quot;:2,&quot;initializeBaseRequestDurationMs&quot;:0,&quot;initializeSilentRequestDurationMs&quot;:0,&quot;acquireTokenFromCacheCallCount&quot;:1,&quot;silentCacheClientAcquireTokenCallCount&quot;:1,&quot;standardInteractionClientGetClientConfigurationCallCount&quot;:2,&quot;standardInteractionClientGetDiscoveredAuthorityCallCount&quot;:2,&quot;authorityFactoryCreateDiscoveredInstanceCallCount&quot;:2,&quot;authorityResolveEndpointsAsyncCallCount&quot;:2,&quot;authorityUpdateCloudDiscoveryMetadataCallCount&quot;:2,&quot;authorityUpdateCloudDiscoveryMetadataDurationMs&quot;:0,&quot;authorityUpdateEndpointMetadataCallCount&quot;:2,&quot;authorityUpdateEndpointMetadataDurationMs&quot;:0,&quot;cloudDiscoverySource&quot;:&quot;hardcoded_values&quot;,&quot;authorityEndpointSource&quot;:&quot;hardcoded_values&quot;,&quot;authorityResolveEndpointsAsyncDurationMs&quot;:0,&quot;authorityFactoryCreateDiscoveredInstanceDurationMs&quot;:0,&quot;standardInteractionClientGetDiscoveredAuthorityDurationMs&quot;:0,&quot;standardInteractionClientGetClientConfigurationDurationMs&quot;:1,&quot;silentFlowClientAcquireCachedTokenCallCount&quot;:1,&quot;cacheOutcome&quot;:&quot;2&quot;,&quot;silentFlowClientAcquireCachedTokenDurationMs&quot;:1,&quot;silentCacheClientAcquireTokenDurationMs&quot;:1,&quot;acquireTokenFromCacheDurationMs&quot;:1,&quot;acquireTokenByRefreshTokenCallCount&quot;:1,&quot;silentRefreshClientAcquireTokenCallCount&quot;:1,&quot;refreshTokenClientAcquireTokenByRefreshTokenCallCount&quot;:1,&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenCallCount&quot;:1,&quot;cacheManagerGetRefreshTokenCallCount&quot;:1,&quot;cacheManagerGetRefreshTokenDurationMs&quot;:0,&quot;refreshTokenClientAcquireTokenCallCount&quot;:1,&quot;refreshTokenClientExecuteTokenRequestCallCount&quot;:1,&quot;refreshTokenClientCreateTokenRequestBodyCallCount&quot;:1,&quot;refreshTokenClientCreateTokenRequestBodyDurationMs&quot;:1,&quot;refreshTokenClientExecutePostToTokenEndpointCallCount&quot;:1,&quot;networkClientSendPostRequestAsyncCallCount&quot;:1,&quot;networkClientSendPostRequestAsyncDurationMs&quot;:2481,&quot;refreshTokenSize&quot;:1077,&quot;requestId&quot;:&quot;d7acfb6c-ef9a-4f6f-ac89-31d64c5e2c00&quot;,&quot;refreshTokenClientExecutePostToTokenEndpointDurationMs&quot;:2482,&quot;refreshTokenClientExecuteTokenRequestDurationMs&quot;:2484,&quot;handleServerTokenResponseCallCount&quot;:1,&quot;encryptCallCount&quot;:4,&quot;encryptDurationMs&quot;:0,&quot;handleServerTokenResponseDurationMs&quot;:5,&quot;refreshTokenClientAcquireTokenDurationMs&quot;:2489,&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenDurationMs&quot;:2490,&quot;refreshTokenClientAcquireTokenByRefreshTokenDurationMs&quot;:2490,&quot;silentRefreshClientAcquireTokenDurationMs&quot;:2491,&quot;acquireTokenByRefreshTokenDurationMs&quot;:2491,&quot;fromCache&quot;:false,&quot;isNativeBroker&quot;:false,&quot;acquireTokenSilentAsyncDurationMs&quot;:2493,&quot;success&quot;:true,&quot;accessTokenSize&quot;:2162,&quot;idTokenSize&quot;:1816,&quot;startPageVisibility&quot;:&quot;hidden&quot;,&quot;endPageVisibility&quot;:&quot;hidden&quot;,&quot;durationMs&quot;:2493,&quot;queuedTimeMs&quot;:0,&quot;queuedCount&quot;:32,&quot;queuedManuallyCompletedCount&quot;:5,&quot;incompleteSubsCount&quot;:0,&quot;synthetic&quot;:false,&quot;profileTelemetryId&quot;:&quot;019816fe-1b5c-7fd6-b8fb-13cdfb63bfa5&quot;,&quot;sessionId&quot;:&quot;01981bb3-a1ac-761c-942f-f02e6408b994&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_Select/rs/v1/settings?rs=en-IN-81" enabled="false">
              <stringProp name="HTTPSampler.domain">roaming.officeapps.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/rs/v1/settings?rs=en-IN</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,content-type,x-correlationid,x-office-application,x-office-platform,x-office-version</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_Select_Fish/actions/Catalog.action-80" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="viewCategory" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">viewCategory</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="categoryId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">categoryId</stringProp>
                    <stringProp name="Argument.value">FISH</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_productId" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_productId</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">productId=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_productId_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">0</stringProp>
                <stringProp name="TestPlan.comments">productId=FI-SW-01&quot;&gt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-73" enabled="false">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;longPollTimeoutHint&quot;:15000,&quot;type&quot;:2,&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Session_Protocol_SessionLongPollMessage&quot;,&quot;B_&quot;:[&quot;AugLoop_Session_Protocol_Message&quot;]},&quot;cv&quot;:&quot;aTetbsCMf6tfzdHdvUo7Pa.20&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ3NTQ4OGQyMmNhOTQ2YWNhZTc3NTVhZTFlZWUyODY1In0.eyJhcHBpZCI6IjQzNTRlMjI1LTUwYzktNDQyMy05ZWNlLTJkNWFmZDkwNDg3MCIsImlzcyI6Imh0dHBzOi8vYXVnbG9vcC5vZmZpY2UuY29tL2Fub255bW91c1Rva2VuIiwiYXVkIjoiaHR0cHM6Ly9hdWdsb29wLm9mZmljZS5jb20vYW5vbnltb3VzVG9rZW4iLCJpYXQiOjE3NTI4MTI4NTUsIm5iZiI6MTc1MjgxMjU1NSwiZXhwIjoxNzUyODk5MjU1LCJvaWQiOiJiNFgyVTNoY201d3hWU2xBR2tzSnBncDY3d1k4UVhPbXR2YitHc1ZzZGdjPSIsInNpZCI6ImMyYjY0ZDM5LTJmYzctNDFhYy1hOGRmLWJjOTJhZDM2MTg4ZSJ9.N1K1WPMt0WRqOwfsT2B4zG2nerF5C1_K3vAkI1Nvv-B7TUwZ6N3GCuO1twd17bLnwXb5oJvIhn8abGaPXtXw2vAmfp0cysqpCnlZw3ZgVkQyTTwSdXYAIbnb347vVYWcikN4NIQ3_FDyPtaebetd0n45-LrGllORuxzKPq7OUP3u3-Q8H12zZOkLLtuH8BefndHSxPoXgAfvCQS9JQ-8KOzH_NKfLgZAbMySBU6xpdbdHErG5XWX1xmWLXqXoxVWJIki_2Vx0POFfcBsxxu7JTOW23Ffisc90X2DAbdGot-dOX4hFSljBbdcK0kXb08WJUfY2WwlSuflJcGkUe0KEA</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="x-origin" elementType="Header">
                    <stringProp name="Header.name">x-origin</stringProp>
                    <stringProp name="Header.value">5D4D43FCF51AA4709870F2023FFFBE7C7D83B8305BDCD592F4597B8106E37CAC</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_Select_Fish/rs/v1/settings?rs=en-IN-82" enabled="false">
              <stringProp name="HTTPSampler.domain">roaming.officeapps.live.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/rs/v1/settings?rs=en-IN</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[1375]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="X-Office-Application" elementType="Header">
                    <stringProp name="Header.name">X-Office-Application</stringProp>
                    <stringProp name="Header.value">122</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="X-Office-Platform" elementType="Header">
                    <stringProp name="Header.name">X-Office-Platform</stringProp>
                    <stringProp name="Header.value">Web</stringProp>
                  </elementProp>
                  <elementProp name="X-Office-Version" elementType="Header">
                    <stringProp name="Header.name">X-Office-Version</stringProp>
                    <stringProp name="Header.value">20250704003.08</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationId" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationId</stringProp>
                    <stringProp name="Header.value">7d9a667b-61c1-f512-3308-0aab87269a16</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_Select_Fish/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-83" enabled="false">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,content-type,x-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_Select_Fish/owa/notificationchannel/negotiate-85" enabled="false">
              <stringProp name="HTTPSampler.domain">outlook.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/owa/notificationchannel/negotiate</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="clientProtocol" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientProtocol</stringProp>
                    <stringProp name="Argument.value">1.5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="UA" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">UA</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="cid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cid</stringProp>
                    <stringProp name="Argument.value">c46bc416-76a7-a660-63ad-519ae3a66f67</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="app" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">app</stringProp>
                    <stringProp name="Argument.value">Mail</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="connectionToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">connectionToken</stringProp>
                    <stringProp name="Argument.value">TcIThZc1aKj6wZiV/iQ6LqOXrrw4eCplOBzON5VMmuS/hcqYoBe+OalV9n0qP9YkbDypT2jYZ/VPXjcH6S6C7KcRwDjSx6yaco21W276U/ZvGlbFsRPBNDjCU6rqbvKSU3f+tUdbvh2D8qFFrwtKqxMdUnrEDkrX79C7Id7BF6LEA5XcLGper3jMXQU/NuIOkJXMiGVJ9AGYyIPSgOXU/pnyHbr5SJ+nUY9dGFAqGl80S5ACRfefyIdI9rIBW/UAM2NlAB27QWKzL/RjNE3xbdchIBwzhlAwcpN67rS70fkXAj/m4HB90olXurIovajwQhSpmK1WBw3uEFfRWdHgcw==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdDelRCbnU4eCt4K2FTT3hoMXpNY2ZyQU42Yz0iLCJ4NXQiOiJHQ3pUQm51OHgreCthU094aDF6TWNmckFONmM9Iiwibm9uY2UiOiJxb0lZdlg4UHU1QzFKSWN3WW1qRmpXb1hhZzl4R2ppX1dJZ3Y3YmY4N0lKeXRLTWZSN2ZndVFNUDZaU3ZCc0xmV1ZLREd4MUplcUZZTFpreEN4OTVGTmE0bnpIUnk2Y1B2aGhIbmRWUndYRlMwcGlwTHJwZU96b3lTSlRsRnRmb0EwZjFsdkFRZVdVM0tGbGxzdWowWkpPMEpOMkxFSThxVkhsa0pDUlRqYlEiLCJpc3Nsb2MiOiJNQVpQUjAxTUI1Nzc4Iiwic3JzbiI6NjM4ODgyNjc0MzgwNzQwMDU2fQ.eyJzYXAtdmVyc2lvbiI6IjMyIiwiYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJpc3NyaW5nIjoiV1ciLCJhcHBpZGFjciI6IjIiLCJhcHBfZGlzcGxheW5hbWUiOiIiLCJ1dGkiOiJhNDExODIzNy1hOGIzLTRmMTctOTM4Ni1mMDhhYjBjZGEwMTEiLCJpYXQiOjE3NTI4MTE0MzIsInZlciI6IlNUSS5Vc2VyLkNhbGxiYWNrVG9rZW4uVjEiLCJ0aWQiOiJlYTNjNDZhNWJjY2Y0ODlhYTFiOGUzODcxYjA4ZTdjMCIsInRydXN0ZWRmb3JkZWxlZ2F0aW9uIjoiZmFsc2UiLCJ0b3BvbG9neSI6IntcIlR5cGVcIjpcIk1hY2hpbmVcIixcIlZhbHVlXCI6XCJNQVpQUjAxTUI1Nzc4LklORFBSRDAxLlBST0QuT1VUTE9PSy5DT01cIn0iLCJyZXF1ZXN0b3JfYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJyZXF1ZXN0b3JfYXBwX2Rpc3BsYXluYW1lIjoiT2ZmaWNlIDM2NSBFeGNoYW5nZSBNaWNyb3NlcnZpY2UiLCJzY3AiOiJPd2EuTm90aWZpY2F0aW9ucy5BbGwiLCJvaWQiOiJhMjk1NTYyZS1hZWIwLTRkNTEtYjU0YS01NDU5NWQ4YzIwZWMiLCJwdWlkIjoiMTAwMzIwMDFFNjlCMTM5NiIsInNtdHAiOiJOYXptdWxsYWguc0B5ZXRoaS5pbiIsInVwbiI6Ik5hem11bGxhaC5zQHlldGhpLmluIiwiZXBrIjoie1wia3R5XCI6XCJSU0FcIixcIm5cIjpcInJtT0YtUUZ0a0RRWi1ROVQ3OXdnTThFTXgwZXhwTGNJWWtIUzBFWS00MDJERUh6cVNScS16UFFNSzd1Qk03VFVMR0NjaW5GdWc0emRtTDNIMEw5ZVVrM0V6WVc2NE95RGM1NHBCdUhMR2toNktvQjUtZjVJa1R0WEdxUXpxb2VzV1lGamgyZHJCSGZtRkRqbnFCMkNnZzVNUlA3UkdjbXpoTXRrY053RU1HU242dDhoSzZleEtXSFJzYWdaNHlibkZTUjNkcUdQOUZ0Zk1tOEpwTF9mREdhb0xVRW83YWMxZXhqT1d4ek9FMVc3QzFDaWNaU3d2SzVPTFhZMjRVX1pmcExmTlVOdHJxMHAtX1pHM3dKYlJKY1gzNjJONEpiSFBNS3kyVUJIQ3pjVUtIRjFRNGhLWE1PbWh1eEpsd1NjUFhvWl9aNUNveXcyUHZMUmdleW1wUVwiLFwiZVwiOlwiQVFBQlwiLFwiYWxnXCI6XCJSUzI1NlwiLFwiZXhwXCI6XCIxNzUyOTAxMDcwXCIsXCJleHBfZGlmZlwiOlwiODY0MDBcIixcImtpZFwiOlwiUDdLSWZIQ0NPWTQ4dkZGTC12b1NpTWp0ZFd3XCJ9LnVyREtUQ2ZyTjZaR21PMVpoZGxsV2szTVhwNmVVdlVKSVFjR0pxWWhUYmZvcFpPYWdVRFZhdmZKbDhWd3VFWUw1Q1pVZGR2Z1M0cmJibEQySU5tcnFHVnA5Z0JaLzlpaFU0M3BwWDQ2ZEdBb2lwR3JLQmlSWXRINjhVM3NJcGllb1BBeDFVd3kweGtzTFFLQ3dHeWh0ZEVoRXRXQ2g5NFVtaTZpTFlBNVVyNUc1d2YxcWtrWm8vSUZZR0NVLy85dmoxL0U5T3Btd3hRS241N2ptUWZtVDZESUJxM3VHNExDM1ZiVnFtVlVzS2tJYklJVS94S3d3bmhROW9DV215VVRwZnVSU3lCbkgrbnJTQU13MG5NTGNPY20wZUJvWGJIeGx1TVozZEdlaURxcDgzN0FWSmlrU2VxVXd1Ukx2THM4a1FkWXFrdHdJOTNlaDNZM3RRejRsUT09IiwibmJmIjoxNzUyODExNDMyLCJleHAiOjE3NTI4MTUwMzIsImlzcyI6Imh0dHBzOi8vc3Vic3RyYXRlLm9mZmljZS5jb20vc3RzLyIsImF1ZCI6Imh0dHBzOi8vb3V0bG9vay5vZmZpY2UuY29tIiwic3NlYyI6IkU3ZDVZa2hFaTY0TWh4M2giLCJlc3NlYyI6ImFydGlmYWN0LWF1dG8tcHJvZHxNMzY1MjAyNS0wNS0xOVQyMDo1Mjo1NC42NDUyODgzWnxGSmdKQTdkendhVDJ4TiJ9.b5at2dGZip-khsC7SxEfXHsNZt9xcApmDZwCr37NVqoUcO5HLM5ss6YjcrUNprjTcRs_TuMKdz52IAaRXKFP2MduANF4tiysN3LjtxdQYow9x21ypiP9S9NBwlJcHlyoymUvakTjvCkdRns_VSocNGIVNh0Vf2k1vDDPHxog5O6PeKaVUMzPK8E6DqKayBmhc8BVkGZorZYaMjJEnMRLvA1fAuUge9WmS7E1kk94mr0m04tDj_PDKXB61o0JCtDiBj3cmI6J4ct-tRFtb9rYIGXhNSvHGvPeSGrnj2gq7y2lWVv8LSwvQma1TLLCoZ4Umcy_FeJoZfCTGg3OuW12yw</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="Header">
                    <stringProp name="Header.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Header.value">PUID:10032001E69B1396@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_Select_Fish/actions/Catalog.action-90" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="viewProduct" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">viewProduct</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="productId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">productId</stringProp>
                    <stringProp name="Argument.value">${COR_productId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action?viewCategory=&amp;categoryId=FISH</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_itemId" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_itemId</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">itemId=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_itemId_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">0</stringProp>
                <stringProp name="TestPlan.comments">itemId=EST-1&quot;&gt;E</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_04_Select_ProductID" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_Select_Fish/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-84" enabled="false">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;longPollTimeoutHint&quot;:15000,&quot;type&quot;:2,&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Session_Protocol_SessionLongPollMessage&quot;,&quot;B_&quot;:[&quot;AugLoop_Session_Protocol_Message&quot;]},&quot;cv&quot;:&quot;aTetbsCMf6tfzdHdvUo7Pa.22&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ3NTQ4OGQyMmNhOTQ2YWNhZTc3NTVhZTFlZWUyODY1In0.eyJhcHBpZCI6IjQzNTRlMjI1LTUwYzktNDQyMy05ZWNlLTJkNWFmZDkwNDg3MCIsImlzcyI6Imh0dHBzOi8vYXVnbG9vcC5vZmZpY2UuY29tL2Fub255bW91c1Rva2VuIiwiYXVkIjoiaHR0cHM6Ly9hdWdsb29wLm9mZmljZS5jb20vYW5vbnltb3VzVG9rZW4iLCJpYXQiOjE3NTI4MTI4NTUsIm5iZiI6MTc1MjgxMjU1NSwiZXhwIjoxNzUyODk5MjU1LCJvaWQiOiJiNFgyVTNoY201d3hWU2xBR2tzSnBncDY3d1k4UVhPbXR2YitHc1ZzZGdjPSIsInNpZCI6ImMyYjY0ZDM5LTJmYzctNDFhYy1hOGRmLWJjOTJhZDM2MTg4ZSJ9.N1K1WPMt0WRqOwfsT2B4zG2nerF5C1_K3vAkI1Nvv-B7TUwZ6N3GCuO1twd17bLnwXb5oJvIhn8abGaPXtXw2vAmfp0cysqpCnlZw3ZgVkQyTTwSdXYAIbnb347vVYWcikN4NIQ3_FDyPtaebetd0n45-LrGllORuxzKPq7OUP3u3-Q8H12zZOkLLtuH8BefndHSxPoXgAfvCQS9JQ-8KOzH_NKfLgZAbMySBU6xpdbdHErG5XWX1xmWLXqXoxVWJIki_2Vx0POFfcBsxxu7JTOW23Ffisc90X2DAbdGot-dOX4hFSljBbdcK0kXb08WJUfY2WwlSuflJcGkUe0KEA</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="x-origin" elementType="Header">
                    <stringProp name="Header.name">x-origin</stringProp>
                    <stringProp name="Header.value">5D4D43FCF51AA4709870F2023FFFBE7C7D83B8305BDCD592F4597B8106E37CAC</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_04_Select_ProductID/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-88" enabled="false">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,content-type,x-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_04_Select_ProductID/actions/Catalog.action-91" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="viewItem" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">viewItem</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="itemId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">itemId</stringProp>
                    <stringProp name="Argument.value">${COR_itemId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action?viewProduct=&amp;productId=${COR_productId}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_04_Se" enabled="false">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_Select_Fish/owa/notificationchannel/connect-86" enabled="true">
                <stringProp name="HTTPSampler.domain">outlook.office.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/owa/notificationchannel/connect</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="transport" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">transport</stringProp>
                      <stringProp name="Argument.value">serverSentEvents</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="clientProtocol" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">clientProtocol</stringProp>
                      <stringProp name="Argument.value">1.5</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="UA" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">UA</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="cid" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">cid</stringProp>
                      <stringProp name="Argument.value">c46bc416-76a7-a660-63ad-519ae3a66f67</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="app" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">app</stringProp>
                      <stringProp name="Argument.value">Mail</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="connectionToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">connectionToken</stringProp>
                      <stringProp name="Argument.value">jbC+ZierKyrOGggJ1lAwKfXPi28vHheWybPptdwDAJT55KwTcwcXo5ad5CInx9uXwLfgda3bMsvKcdxtxTa5wB6Ai4j6L1yCyYQa18kL0UlZ2KiAdf1eQqUaBUqmHM08u4yq18jSqR88L7LqQiAKDTfwfzaziCaU89BmyfUNkjMqgz96/OkBODJb23LqgcTxuNhxwLmctwlZb5FLCnTkil8/7IbZZRxS+V56aB99u+HusP/vkFeeg8Ev9jMmRl4hP2+PLMT9xI30VMBZpTupM19Y4AzV9xvoluhu6NFF4JKpy26+RIjZU0Qnkf4HRWc+ejROM0NlUtLvoXIv0tznBg==</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="tid" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">tid</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Sec-Fetch-Mode" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                      <stringProp name="Header.value">cors</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Site" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                      <stringProp name="Header.value">same-origin</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">text/event-stream</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdDelRCbnU4eCt4K2FTT3hoMXpNY2ZyQU42Yz0iLCJ4NXQiOiJHQ3pUQm51OHgreCthU094aDF6TWNmckFONmM9Iiwibm9uY2UiOiJxb0lZdlg4UHU1QzFKSWN3WW1qRmpXb1hhZzl4R2ppX1dJZ3Y3YmY4N0lKeXRLTWZSN2ZndVFNUDZaU3ZCc0xmV1ZLREd4MUplcUZZTFpreEN4OTVGTmE0bnpIUnk2Y1B2aGhIbmRWUndYRlMwcGlwTHJwZU96b3lTSlRsRnRmb0EwZjFsdkFRZVdVM0tGbGxzdWowWkpPMEpOMkxFSThxVkhsa0pDUlRqYlEiLCJpc3Nsb2MiOiJNQVpQUjAxTUI1Nzc4Iiwic3JzbiI6NjM4ODgyNjc0MzgwNzQwMDU2fQ.eyJzYXAtdmVyc2lvbiI6IjMyIiwiYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJpc3NyaW5nIjoiV1ciLCJhcHBpZGFjciI6IjIiLCJhcHBfZGlzcGxheW5hbWUiOiIiLCJ1dGkiOiJhNDExODIzNy1hOGIzLTRmMTctOTM4Ni1mMDhhYjBjZGEwMTEiLCJpYXQiOjE3NTI4MTE0MzIsInZlciI6IlNUSS5Vc2VyLkNhbGxiYWNrVG9rZW4uVjEiLCJ0aWQiOiJlYTNjNDZhNWJjY2Y0ODlhYTFiOGUzODcxYjA4ZTdjMCIsInRydXN0ZWRmb3JkZWxlZ2F0aW9uIjoiZmFsc2UiLCJ0b3BvbG9neSI6IntcIlR5cGVcIjpcIk1hY2hpbmVcIixcIlZhbHVlXCI6XCJNQVpQUjAxTUI1Nzc4LklORFBSRDAxLlBST0QuT1VUTE9PSy5DT01cIn0iLCJyZXF1ZXN0b3JfYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJyZXF1ZXN0b3JfYXBwX2Rpc3BsYXluYW1lIjoiT2ZmaWNlIDM2NSBFeGNoYW5nZSBNaWNyb3NlcnZpY2UiLCJzY3AiOiJPd2EuTm90aWZpY2F0aW9ucy5BbGwiLCJvaWQiOiJhMjk1NTYyZS1hZWIwLTRkNTEtYjU0YS01NDU5NWQ4YzIwZWMiLCJwdWlkIjoiMTAwMzIwMDFFNjlCMTM5NiIsInNtdHAiOiJOYXptdWxsYWguc0B5ZXRoaS5pbiIsInVwbiI6Ik5hem11bGxhaC5zQHlldGhpLmluIiwiZXBrIjoie1wia3R5XCI6XCJSU0FcIixcIm5cIjpcInJtT0YtUUZ0a0RRWi1ROVQ3OXdnTThFTXgwZXhwTGNJWWtIUzBFWS00MDJERUh6cVNScS16UFFNSzd1Qk03VFVMR0NjaW5GdWc0emRtTDNIMEw5ZVVrM0V6WVc2NE95RGM1NHBCdUhMR2toNktvQjUtZjVJa1R0WEdxUXpxb2VzV1lGamgyZHJCSGZtRkRqbnFCMkNnZzVNUlA3UkdjbXpoTXRrY053RU1HU242dDhoSzZleEtXSFJzYWdaNHlibkZTUjNkcUdQOUZ0Zk1tOEpwTF9mREdhb0xVRW83YWMxZXhqT1d4ek9FMVc3QzFDaWNaU3d2SzVPTFhZMjRVX1pmcExmTlVOdHJxMHAtX1pHM3dKYlJKY1gzNjJONEpiSFBNS3kyVUJIQ3pjVUtIRjFRNGhLWE1PbWh1eEpsd1NjUFhvWl9aNUNveXcyUHZMUmdleW1wUVwiLFwiZVwiOlwiQVFBQlwiLFwiYWxnXCI6XCJSUzI1NlwiLFwiZXhwXCI6XCIxNzUyOTAxMDcwXCIsXCJleHBfZGlmZlwiOlwiODY0MDBcIixcImtpZFwiOlwiUDdLSWZIQ0NPWTQ4dkZGTC12b1NpTWp0ZFd3XCJ9LnVyREtUQ2ZyTjZaR21PMVpoZGxsV2szTVhwNmVVdlVKSVFjR0pxWWhUYmZvcFpPYWdVRFZhdmZKbDhWd3VFWUw1Q1pVZGR2Z1M0cmJibEQySU5tcnFHVnA5Z0JaLzlpaFU0M3BwWDQ2ZEdBb2lwR3JLQmlSWXRINjhVM3NJcGllb1BBeDFVd3kweGtzTFFLQ3dHeWh0ZEVoRXRXQ2g5NFVtaTZpTFlBNVVyNUc1d2YxcWtrWm8vSUZZR0NVLy85dmoxL0U5T3Btd3hRS241N2ptUWZtVDZESUJxM3VHNExDM1ZiVnFtVlVzS2tJYklJVS94S3d3bmhROW9DV215VVRwZnVSU3lCbkgrbnJTQU13MG5NTGNPY20wZUJvWGJIeGx1TVozZEdlaURxcDgzN0FWSmlrU2VxVXd1Ukx2THM4a1FkWXFrdHdJOTNlaDNZM3RRejRsUT09IiwibmJmIjoxNzUyODExNDMyLCJleHAiOjE3NTI4MTUwMzIsImlzcyI6Imh0dHBzOi8vc3Vic3RyYXRlLm9mZmljZS5jb20vc3RzLyIsImF1ZCI6Imh0dHBzOi8vb3V0bG9vay5vZmZpY2UuY29tIiwic3NlYyI6IkU3ZDVZa2hFaTY0TWh4M2giLCJlc3NlYyI6ImFydGlmYWN0LWF1dG8tcHJvZHxNMzY1MjAyNS0wNS0xOVQyMDo1Mjo1NC42NDUyODgzWnxGSmdKQTdkendhVDJ4TiJ9.b5at2dGZip-khsC7SxEfXHsNZt9xcApmDZwCr37NVqoUcO5HLM5ss6YjcrUNprjTcRs_TuMKdz52IAaRXKFP2MduANF4tiysN3LjtxdQYow9x21ypiP9S9NBwlJcHlyoymUvakTjvCkdRns_VSocNGIVNh0Vf2k1vDDPHxog5O6PeKaVUMzPK8E6DqKayBmhc8BVkGZorZYaMjJEnMRLvA1fAuUge9WmS7E1kk94mr0m04tDj_PDKXB61o0JCtDiBj3cmI6J4ct-tRFtb9rYIGXhNSvHGvPeSGrnj2gq7y2lWVv8LSwvQma1TLLCoZ4Umcy_FeJoZfCTGg3OuW12yw</stringProp>
                    </elementProp>
                    <elementProp name="Last-Event-ID" elementType="Header">
                      <stringProp name="Header.name">Last-Event-ID</stringProp>
                      <stringProp name="Header.value">null</stringProp>
                    </elementProp>
                    <elementProp name="sec-ch-ua" elementType="Header">
                      <stringProp name="Header.name">sec-ch-ua</stringProp>
                      <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                    </elementProp>
                    <elementProp name="sec-ch-ua-mobile" elementType="Header">
                      <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                      <stringProp name="Header.value">?0</stringProp>
                    </elementProp>
                    <elementProp name="sec-ch-ua-platform" elementType="Header">
                      <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                      <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                    </elementProp>
                    <elementProp name="X-AnchorMailbox" elementType="Header">
                      <stringProp name="Header.name">X-AnchorMailbox</stringProp>
                      <stringProp name="Header.value">PUID:10032001E69B1396@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                    </elementProp>
                    <elementProp name="Cache-Control" elementType="Header">
                      <stringProp name="Header.name">Cache-Control</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Dest" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                      <stringProp name="Header.value">empty</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_04_Se/owa/notificationchannel/abort?transport=foreverFrame&amp;clientProtocol=1.5&amp;UA=0&amp;cid=c46bc416-76a7-a660-63ad-519ae3a66f67&amp;app=Mail&amp;connectionToken=jbC%2BZierKyrOGggJ1lAwKfXPi28vHheWybPptdwDAJT55KwTcwcXo5ad5CInx9uXwLfgda3bMsvKcdxtxTa5wB6Ai4j6L1yCyYQa18kL0UlZ2KiAdf1eQqUaBUqmHM08u4yq18jSqR88L7LqQiAKDTfwfzaziCaU89BmyfUNkjMqgz96%2FOkBODJb23LqgcTxuNhxwLmctwlZb5FLCnTkil8%2F7IbZZRxS%2BV56aB99u%2BHusP%2FvkFeeg8Ev9jMmRl4hP2%2BPLMT9xI30VMBZpTupM19Y4AzV9xvoluhu6NFF4JKpy26%2BRIjZU0Qnkf4HRWc%2BejROM0NlUtLvoXIv0tznBg%3D%3D-87" enabled="true">
                <stringProp name="HTTPSampler.domain">outlook.office.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/owa/notificationchannel/abort?transport=foreverFrame&amp;clientProtocol=1.5&amp;UA=0&amp;cid=c46bc416-76a7-a660-63ad-519ae3a66f67&amp;app=Mail&amp;connectionToken=jbC%2BZierKyrOGggJ1lAwKfXPi28vHheWybPptdwDAJT55KwTcwcXo5ad5CInx9uXwLfgda3bMsvKcdxtxTa5wB6Ai4j6L1yCyYQa18kL0UlZ2KiAdf1eQqUaBUqmHM08u4yq18jSqR88L7LqQiAKDTfwfzaziCaU89BmyfUNkjMqgz96%2FOkBODJb23LqgcTxuNhxwLmctwlZb5FLCnTkil8%2F7IbZZRxS%2BV56aB99u%2BHusP%2FvkFeeg8Ev9jMmRl4hP2%2BPLMT9xI30VMBZpTupM19Y4AzV9xvoluhu6NFF4JKpy26%2BRIjZU0Qnkf4HRWc%2BejROM0NlUtLvoXIv0tznBg%3D%3D</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Sec-Fetch-Mode" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                      <stringProp name="Header.value">cors</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Site" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                      <stringProp name="Header.value">same-origin</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdDelRCbnU4eCt4K2FTT3hoMXpNY2ZyQU42Yz0iLCJ4NXQiOiJHQ3pUQm51OHgreCthU094aDF6TWNmckFONmM9Iiwibm9uY2UiOiJxb0lZdlg4UHU1QzFKSWN3WW1qRmpXb1hhZzl4R2ppX1dJZ3Y3YmY4N0lKeXRLTWZSN2ZndVFNUDZaU3ZCc0xmV1ZLREd4MUplcUZZTFpreEN4OTVGTmE0bnpIUnk2Y1B2aGhIbmRWUndYRlMwcGlwTHJwZU96b3lTSlRsRnRmb0EwZjFsdkFRZVdVM0tGbGxzdWowWkpPMEpOMkxFSThxVkhsa0pDUlRqYlEiLCJpc3Nsb2MiOiJNQVpQUjAxTUI1Nzc4Iiwic3JzbiI6NjM4ODgyNjc0MzgwNzQwMDU2fQ.eyJzYXAtdmVyc2lvbiI6IjMyIiwiYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJpc3NyaW5nIjoiV1ciLCJhcHBpZGFjciI6IjIiLCJhcHBfZGlzcGxheW5hbWUiOiIiLCJ1dGkiOiJhNDExODIzNy1hOGIzLTRmMTctOTM4Ni1mMDhhYjBjZGEwMTEiLCJpYXQiOjE3NTI4MTE0MzIsInZlciI6IlNUSS5Vc2VyLkNhbGxiYWNrVG9rZW4uVjEiLCJ0aWQiOiJlYTNjNDZhNWJjY2Y0ODlhYTFiOGUzODcxYjA4ZTdjMCIsInRydXN0ZWRmb3JkZWxlZ2F0aW9uIjoiZmFsc2UiLCJ0b3BvbG9neSI6IntcIlR5cGVcIjpcIk1hY2hpbmVcIixcIlZhbHVlXCI6XCJNQVpQUjAxTUI1Nzc4LklORFBSRDAxLlBST0QuT1VUTE9PSy5DT01cIn0iLCJyZXF1ZXN0b3JfYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJyZXF1ZXN0b3JfYXBwX2Rpc3BsYXluYW1lIjoiT2ZmaWNlIDM2NSBFeGNoYW5nZSBNaWNyb3NlcnZpY2UiLCJzY3AiOiJPd2EuTm90aWZpY2F0aW9ucy5BbGwiLCJvaWQiOiJhMjk1NTYyZS1hZWIwLTRkNTEtYjU0YS01NDU5NWQ4YzIwZWMiLCJwdWlkIjoiMTAwMzIwMDFFNjlCMTM5NiIsInNtdHAiOiJOYXptdWxsYWguc0B5ZXRoaS5pbiIsInVwbiI6Ik5hem11bGxhaC5zQHlldGhpLmluIiwiZXBrIjoie1wia3R5XCI6XCJSU0FcIixcIm5cIjpcInJtT0YtUUZ0a0RRWi1ROVQ3OXdnTThFTXgwZXhwTGNJWWtIUzBFWS00MDJERUh6cVNScS16UFFNSzd1Qk03VFVMR0NjaW5GdWc0emRtTDNIMEw5ZVVrM0V6WVc2NE95RGM1NHBCdUhMR2toNktvQjUtZjVJa1R0WEdxUXpxb2VzV1lGamgyZHJCSGZtRkRqbnFCMkNnZzVNUlA3UkdjbXpoTXRrY053RU1HU242dDhoSzZleEtXSFJzYWdaNHlibkZTUjNkcUdQOUZ0Zk1tOEpwTF9mREdhb0xVRW83YWMxZXhqT1d4ek9FMVc3QzFDaWNaU3d2SzVPTFhZMjRVX1pmcExmTlVOdHJxMHAtX1pHM3dKYlJKY1gzNjJONEpiSFBNS3kyVUJIQ3pjVUtIRjFRNGhLWE1PbWh1eEpsd1NjUFhvWl9aNUNveXcyUHZMUmdleW1wUVwiLFwiZVwiOlwiQVFBQlwiLFwiYWxnXCI6XCJSUzI1NlwiLFwiZXhwXCI6XCIxNzUyOTAxMDcwXCIsXCJleHBfZGlmZlwiOlwiODY0MDBcIixcImtpZFwiOlwiUDdLSWZIQ0NPWTQ4dkZGTC12b1NpTWp0ZFd3XCJ9LnVyREtUQ2ZyTjZaR21PMVpoZGxsV2szTVhwNmVVdlVKSVFjR0pxWWhUYmZvcFpPYWdVRFZhdmZKbDhWd3VFWUw1Q1pVZGR2Z1M0cmJibEQySU5tcnFHVnA5Z0JaLzlpaFU0M3BwWDQ2ZEdBb2lwR3JLQmlSWXRINjhVM3NJcGllb1BBeDFVd3kweGtzTFFLQ3dHeWh0ZEVoRXRXQ2g5NFVtaTZpTFlBNVVyNUc1d2YxcWtrWm8vSUZZR0NVLy85dmoxL0U5T3Btd3hRS241N2ptUWZtVDZESUJxM3VHNExDM1ZiVnFtVlVzS2tJYklJVS94S3d3bmhROW9DV215VVRwZnVSU3lCbkgrbnJTQU13MG5NTGNPY20wZUJvWGJIeGx1TVozZEdlaURxcDgzN0FWSmlrU2VxVXd1Ukx2THM4a1FkWXFrdHdJOTNlaDNZM3RRejRsUT09IiwibmJmIjoxNzUyODExNDMyLCJleHAiOjE3NTI4MTUwMzIsImlzcyI6Imh0dHBzOi8vc3Vic3RyYXRlLm9mZmljZS5jb20vc3RzLyIsImF1ZCI6Imh0dHBzOi8vb3V0bG9vay5vZmZpY2UuY29tIiwic3NlYyI6IkU3ZDVZa2hFaTY0TWh4M2giLCJlc3NlYyI6ImFydGlmYWN0LWF1dG8tcHJvZHxNMzY1MjAyNS0wNS0xOVQyMDo1Mjo1NC42NDUyODgzWnxGSmdKQTdkendhVDJ4TiJ9.b5at2dGZip-khsC7SxEfXHsNZt9xcApmDZwCr37NVqoUcO5HLM5ss6YjcrUNprjTcRs_TuMKdz52IAaRXKFP2MduANF4tiysN3LjtxdQYow9x21ypiP9S9NBwlJcHlyoymUvakTjvCkdRns_VSocNGIVNh0Vf2k1vDDPHxog5O6PeKaVUMzPK8E6DqKayBmhc8BVkGZorZYaMjJEnMRLvA1fAuUge9WmS7E1kk94mr0m04tDj_PDKXB61o0JCtDiBj3cmI6J4ct-tRFtb9rYIGXhNSvHGvPeSGrnj2gq7y2lWVv8LSwvQma1TLLCoZ4Umcy_FeJoZfCTGg3OuW12yw</stringProp>
                    </elementProp>
                    <elementProp name="sec-ch-ua" elementType="Header">
                      <stringProp name="Header.name">sec-ch-ua</stringProp>
                      <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                    </elementProp>
                    <elementProp name="sec-ch-ua-mobile" elementType="Header">
                      <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                      <stringProp name="Header.value">?0</stringProp>
                    </elementProp>
                    <elementProp name="sec-ch-ua-platform" elementType="Header">
                      <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                      <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="X-AnchorMailbox" elementType="Header">
                      <stringProp name="Header.name">X-AnchorMailbox</stringProp>
                      <stringProp name="Header.value">PUID:10032001E69B1396@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Dest" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                      <stringProp name="Header.value">empty</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_04_Select_ItemID" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_04_Select_ProductID/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-89" enabled="false">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;longPollTimeoutHint&quot;:15000,&quot;type&quot;:2,&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Session_Protocol_SessionLongPollMessage&quot;,&quot;B_&quot;:[&quot;AugLoop_Session_Protocol_Message&quot;]},&quot;cv&quot;:&quot;aTetbsCMf6tfzdHdvUo7Pa.23&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ3NTQ4OGQyMmNhOTQ2YWNhZTc3NTVhZTFlZWUyODY1In0.eyJhcHBpZCI6IjQzNTRlMjI1LTUwYzktNDQyMy05ZWNlLTJkNWFmZDkwNDg3MCIsImlzcyI6Imh0dHBzOi8vYXVnbG9vcC5vZmZpY2UuY29tL2Fub255bW91c1Rva2VuIiwiYXVkIjoiaHR0cHM6Ly9hdWdsb29wLm9mZmljZS5jb20vYW5vbnltb3VzVG9rZW4iLCJpYXQiOjE3NTI4MTI4NTUsIm5iZiI6MTc1MjgxMjU1NSwiZXhwIjoxNzUyODk5MjU1LCJvaWQiOiJiNFgyVTNoY201d3hWU2xBR2tzSnBncDY3d1k4UVhPbXR2YitHc1ZzZGdjPSIsInNpZCI6ImMyYjY0ZDM5LTJmYzctNDFhYy1hOGRmLWJjOTJhZDM2MTg4ZSJ9.N1K1WPMt0WRqOwfsT2B4zG2nerF5C1_K3vAkI1Nvv-B7TUwZ6N3GCuO1twd17bLnwXb5oJvIhn8abGaPXtXw2vAmfp0cysqpCnlZw3ZgVkQyTTwSdXYAIbnb347vVYWcikN4NIQ3_FDyPtaebetd0n45-LrGllORuxzKPq7OUP3u3-Q8H12zZOkLLtuH8BefndHSxPoXgAfvCQS9JQ-8KOzH_NKfLgZAbMySBU6xpdbdHErG5XWX1xmWLXqXoxVWJIki_2Vx0POFfcBsxxu7JTOW23Ffisc90X2DAbdGot-dOX4hFSljBbdcK0kXb08WJUfY2WwlSuflJcGkUe0KEA</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="x-origin" elementType="Header">
                    <stringProp name="Header.name">x-origin</stringProp>
                    <stringProp name="Header.value">5D4D43FCF51AA4709870F2023FFFBE7C7D83B8305BDCD592F4597B8106E37CAC</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_04_Select_ItemID/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-93" enabled="false">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,content-type,x-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_05_Add_To_Cart" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_05_Add_To_Cart/actions/Cart.action-95" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Cart.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="addItemToCart" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">addItemToCart</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="workingItemId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">workingItemId</stringProp>
                    <stringProp name="Argument.value">${COR_itemId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action?viewItem=&amp;itemId=${COR_itemId}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_05_Add_To_Cart/v1/pages/ChVDaHJvbWUvMTM4LjAuNzIwNC4xMDESGQnfh7zKjxssDxIFDQKP-2gh3cZDcNVS_yMSGQkjZ-_jGnPyeBIFDXK71t8h3cZDcNVS_yM=-96" enabled="false">
              <stringProp name="HTTPSampler.domain">content-autofill.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v1/pages/ChVDaHJvbWUvMTM4LjAuNzIwNC4xMDESGQnfh7zKjxssDxIFDQKP-2gh3cZDcNVS_yMSGQkjZ-_jGnPyeBIFDXK71t8h3cZDcNVS_yM=</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="alt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">alt</stringProp>
                    <stringProp name="Argument.value">proto</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Encode-Response-If-Executable" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Encode-Response-If-Executable</stringProp>
                    <stringProp name="Header.value">base64</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="X-Goog-Api-Key" elementType="Header">
                    <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                    <stringProp name="Header.value">AIzaSyA2KlwBX3mkFo30om9LUFYQhpqLoa_BNhE</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Data" elementType="Header">
                    <stringProp name="Header.name">X-Client-Data</stringProp>
                    <stringProp name="Header.value">CI+2yQEIorbJAQipncoBCMvhygEIlaHLAQijo8sBCIWgzQEI/qXOAQjh8M4BCKP7zgEI3/vOAQiL/M4BCOj8zgEIhv3OAQiJ/c4BGOHizgEYq/POARjP+s4BGL/7zgE=</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_06" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_04_Select_ItemID/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-94" enabled="true">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;longPollTimeoutHint&quot;:15000,&quot;type&quot;:2,&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Session_Protocol_SessionLongPollMessage&quot;,&quot;B_&quot;:[&quot;AugLoop_Session_Protocol_Message&quot;]},&quot;cv&quot;:&quot;aTetbsCMf6tfzdHdvUo7Pa.24&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ3NTQ4OGQyMmNhOTQ2YWNhZTc3NTVhZTFlZWUyODY1In0.eyJhcHBpZCI6IjQzNTRlMjI1LTUwYzktNDQyMy05ZWNlLTJkNWFmZDkwNDg3MCIsImlzcyI6Imh0dHBzOi8vYXVnbG9vcC5vZmZpY2UuY29tL2Fub255bW91c1Rva2VuIiwiYXVkIjoiaHR0cHM6Ly9hdWdsb29wLm9mZmljZS5jb20vYW5vbnltb3VzVG9rZW4iLCJpYXQiOjE3NTI4MTI4NTUsIm5iZiI6MTc1MjgxMjU1NSwiZXhwIjoxNzUyODk5MjU1LCJvaWQiOiJiNFgyVTNoY201d3hWU2xBR2tzSnBncDY3d1k4UVhPbXR2YitHc1ZzZGdjPSIsInNpZCI6ImMyYjY0ZDM5LTJmYzctNDFhYy1hOGRmLWJjOTJhZDM2MTg4ZSJ9.N1K1WPMt0WRqOwfsT2B4zG2nerF5C1_K3vAkI1Nvv-B7TUwZ6N3GCuO1twd17bLnwXb5oJvIhn8abGaPXtXw2vAmfp0cysqpCnlZw3ZgVkQyTTwSdXYAIbnb347vVYWcikN4NIQ3_FDyPtaebetd0n45-LrGllORuxzKPq7OUP3u3-Q8H12zZOkLLtuH8BefndHSxPoXgAfvCQS9JQ-8KOzH_NKfLgZAbMySBU6xpdbdHErG5XWX1xmWLXqXoxVWJIki_2Vx0POFfcBsxxu7JTOW23Ffisc90X2DAbdGot-dOX4hFSljBbdcK0kXb08WJUfY2WwlSuflJcGkUe0KEA</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="x-origin" elementType="Header">
                    <stringProp name="Header.name">x-origin</stringProp>
                    <stringProp name="Header.value">5D4D43FCF51AA4709870F2023FFFBE7C7D83B8305BDCD592F4597B8106E37CAC</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_06_Proceed" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_05_Add_To_Cart/actions/Order.action-97" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="newOrderForm" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">newOrderForm</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Cart.action?addItemToCart=&amp;workingItemId=${COR_itemId}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_sourcePage2" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_sourcePage2</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;input type=&quot;hidden&quot; name=&quot;_sourcePage&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;input</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_sourcePage2_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">2</stringProp>
                <stringProp name="TestPlan.comments">&lt;input type=&quot;hidden&quot; name=&quot;_sourcePage&quot; value=&quot;HUfUyHfgE0V7I8k4HI_PA17-DEfb46sHPZZHzcna-XK8UvDivuiosohfK_XoPMPlAelPjIs6JPFNaj3IKMfiIXdhh1C9lkw9VUTqG5N3j0E=&quot; /&gt;&lt;input</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_fp2" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_fp2</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;input type=&quot;hidden&quot; name=&quot;__fp&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_fp2_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">2</stringProp>
                <stringProp name="TestPlan.comments">&lt;input type=&quot;hidden&quot; name=&quot;__fp&quot; value=&quot;H9hPML0zYbWFZm595U42tlkRQ29YR-UKJZ4BBMfkLPsIV6QPJNn7X9kRd6gBnS-HczibpXfT6kWToLBjrG4Mt2FzjfwIF6PLWd2_smqE_Z97odqmRY7WbQ==&quot; /&gt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_06_Proceed/owamail/hashed-v1/resources/locale/en/owa.90584.m.f8df3020.json-100" enabled="false">
              <stringProp name="HTTPSampler.domain">res.public.onecdn.static.microsoft</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/owamail/hashed-v1/resources/locale/en/owa.90584.m.f8df3020.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_07_" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_06_Proceed/config/v1/Fluid/0.0.0.1-111" enabled="true">
              <stringProp name="HTTPSampler.domain">ecs.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/config/v1/Fluid/0.0.0.1</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="agents" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">agents</stringProp>
                    <stringProp name="Argument.value">FluidExperiences,HostExperiences,Segmentation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="audience" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">audience</stringProp>
                    <stringProp name="Argument.value">Production</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="userId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">userId</stringProp>
                    <stringProp name="Argument.value">10032001E69B1396</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="tenantId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">tenantId</stringProp>
                    <stringProp name="Argument.value">ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="hostName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hostName</stringProp>
                    <stringProp name="Argument.value">Outlook_Web_App</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_07_/config/v1/Fluid/0.0.0.1-112" enabled="true">
              <stringProp name="HTTPSampler.domain">ecs.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/config/v1/Fluid/0.0.0.1</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="agents" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">agents</stringProp>
                    <stringProp name="Argument.value">FluidExperiences,HostExperiences,Segmentation</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="audience" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">audience</stringProp>
                    <stringProp name="Argument.value">Production</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="userId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">userId</stringProp>
                    <stringProp name="Argument.value">10032001E69B1396</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="tenantId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">tenantId</stringProp>
                    <stringProp name="Argument.value">ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="hostName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">hostName</stringProp>
                    <stringProp name="Argument.value">Outlook_Web_App</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_07_C" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_06_Proceed/fluid/prod/generic-loader/versionless/manifest.en-us.json-113" enabled="true">
              <stringProp name="HTTPSampler.domain">res.cdn.office.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/fluid/prod/generic-loader/versionless/manifest.en-us.json</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_07_Clickon_Continue" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_07_Clickon_Continue/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;w=0-114" enabled="false">
              <stringProp name="HTTPSampler.domain">browser.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;w=0</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x3;�UmS�8&#x10;�/�z�#���܇4&#x4;��&#x2;&#x13;�rw�LF��D�#��\&#x8;&#xc;��Vv&#x1c;R��;&gt;&#x0;�}���G�&apos;&quot;�&#x6;Ș\�����T�(܋�TJݹ� A&#xb;�.�{&#xb;�!GĈ&#xe;=��С��%K&#x1a;�G�8�n��� �&#x7;h&#x4;&#x4;.���&#x17;��&#x7;5�X��Ҝ�&lt;*�&#x0;���K&#x0;?&#x1d;�����Xx0d�D���&#x3;���&#x1b;�yǙs&#xd;��9s&#x2;�w#&#xb;�&#x15;_��&#xf;�Ћ&quot;?&#x8;��&#x11;aum��(�$�i@���&#x4;c&#x1a;h�&#x5;:b&#x1f;KGq�$e�:A	����sr&#x16;&#x5;&lt;�&#x8;b6�����y&quot;�⬲c�t�2빇�:r��;&#xc;���Bf�&#x6;ӷ�o�+�5�\@�&#x16;����&amp;�*ـęKV5�9UcS��q-d���|zԖ&#x15;���ms�[|��mj۞G)ڱYk7�&#x18;�&#x7;&#xd;�~&#x17;�&#x1;�T&#x1b;f]��5����e�ND�q��ޘ�mK&gt;8&#x2;t&#x1c;c��V��8H���&#xc;�� :&#x1a;@�a�m^[�V3#����Ì�Mm�f�9&quot;C�9k`��-!�m��X��v���Zՠ��f��&#x6;k �&#x12;;����P��	�C�m���&#x1e;?UU&#x5;�(����~����&#x1e;v��V�.j	��lo_����f�&#x1b;L�P�&lt;&#x8;)M��&apos;E�B�K�,&#x14;&#xe;ˋ4�c��t=Ls��r/��0��&#x17;&#x18;/��&#x13;k֝r�?�ԛE�G&#xf;e�&#xb;tV�~&#x2;};/.qh�M�zOG���xY1S*��BE=��o{��&lt;�&#x5;T�ks&apos;m!윧Z��ݓVE˭0�&#x1;���C�K��4&#x1d;)�|&#x1e;D,tr�K&apos;HR�0/O&#x1c;���i&#x2;1�o�SW����&#x2;w仞���@�S�5T�@�&#xd;
&lt;a����	l^&#x6;�:&gt;&#x1d;a�&#x8;�Fa&lt;�&#x13;N�y&#x14;;��&#x14;+V�`vj�&#x1f;A&#x7f;eR����G��a��&#x4;���&#x15;��^��7Gwn&#xc;�&#xf;���ϗxh�a��t�&#xe;b��7���y�O��[��&#x7f;y&#x10;�&#x13;��w���9�.�jS+��f`�&#x4;/�9�{��8ќ&#x8;ɪ�p&#x13;�n��]A)�sS�8�&#x7;�x�e�Q������&#x6;&#x1f;8@��&lt;L�J�Cq&quot;�*��1&gt;&quot;�c�W�����W&amp;*�P&#x8;v+�(��y&#x7f;�!�8&#xf;�&#x1b;2�!&#x13;�ek=���̛E+���s9�C�9�&apos;���G�k&#xd;��&#x13;�O��^Χ���b�e�X-?-f��&gt;���ݻ�&#x7f;�&#x1d;�&#x4;&#x5;0&#x4;%�?�&#x13;� w&#x12;VzN�&#x2;?O&#x3;(C�L�~W&#xf;&#x17;�Q��f݂�J��t:˲&#xe;6�E��{�JW�O�&#x8;n�3&#x1e;�&#x7f;&#x1;��ï{&#x8;&#x0;&#x0;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="upload-time" elementType="Header">
                    <stringProp name="Header.name">upload-time</stringProp>
                    <stringProp name="Header.value">1752812936730</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="apikey" elementType="Header">
                    <stringProp name="Header.name">apikey</stringProp>
                    <stringProp name="Header.value">6a8929bcfc6d44e9b13fee392ada9cf0-4dea6a88-32c5-404b-8af1-4a43b94ef559-7393</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Content-Encoding" elementType="Header">
                    <stringProp name="Header.name">Content-Encoding</stringProp>
                    <stringProp name="Header.value">gzip</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="client-version" elementType="Header">
                    <stringProp name="Header.name">client-version</stringProp>
                    <stringProp name="Header.value">1DS-Web-JS-4.3.6</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="time-delta-to-apply-millis" elementType="Header">
                    <stringProp name="Header.name">time-delta-to-apply-millis</stringProp>
                    <stringProp name="Header.value">use-collector-delta</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-json-stream</stringProp>
                  </elementProp>
                  <elementProp name="cache-control" elementType="Header">
                    <stringProp name="Header.name">cache-control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store</stringProp>
                  </elementProp>
                  <elementProp name="Client-Id" elementType="Header">
                    <stringProp name="Header.name">Client-Id</stringProp>
                    <stringProp name="Header.value">NO_AUTH</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_06_Proceed/actions/Order.action-115" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="order.cardType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.cardType</stringProp>
                    <stringProp name="Argument.value">Visa</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.creditCard" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">order.creditCard</stringProp>
                    <stringProp name="Argument.value">${COR_creditCard}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.expiryDate" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">order.expiryDate</stringProp>
                    <stringProp name="Argument.value">${COR_expiryDate}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billToFirstName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billToFirstName</stringProp>
                    <stringProp name="Argument.value">${COR_FirstName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billToLastName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billToLastName</stringProp>
                    <stringProp name="Argument.value">${COR_LastName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billAddress1" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billAddress1</stringProp>
                    <stringProp name="Argument.value">${COR_billAddress1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billAddress2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billAddress2</stringProp>
                    <stringProp name="Argument.value">${COR_billAddress2}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billCity" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billCity</stringProp>
                    <stringProp name="Argument.value">${COR_billCity}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billState" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billState</stringProp>
                    <stringProp name="Argument.value">TN</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billZip" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billZip</stringProp>
                    <stringProp name="Argument.value">${COR_billZip}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billCountry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billCountry</stringProp>
                    <stringProp name="Argument.value">${COR_billCountry}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="newOrder" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">newOrder</stringProp>
                    <stringProp name="Argument.value">Continue</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="_sourcePage" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">_sourcePage</stringProp>
                    <stringProp name="Argument.value">${COR_sourcePage2}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="__fp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">__fp</stringProp>
                    <stringProp name="Argument.value">${COR_fp2}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Order.action?newOrderForm=</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_08_Clickon_" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_08_Clickon_/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-116" enabled="true">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Method" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Access-Control-Request-Headers" elementType="Header">
                    <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                    <stringProp name="Header.value">authorization,content-type,x-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_08_Clickon_/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e-117" enabled="true">
              <stringProp name="HTTPSampler.domain">centralindia-pa00.augloop.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/v2/session/c2b64d39-2fc7-41ac-a8df-bc92ad36188e</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;H_&quot;:{&quot;T_&quot;:&quot;AugLoop_Session_Protocol_SessionCloseMessage&quot;,&quot;B_&quot;:[&quot;AugLoop_Session_Protocol_Message&quot;]},&quot;cv&quot;:&quot;aTetbsCMf6tfzdHdvUo7Pa.25&quot;,&quot;messageId&quot;:&quot;c20&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImQ3NTQ4OGQyMmNhOTQ2YWNhZTc3NTVhZTFlZWUyODY1In0.eyJhcHBpZCI6IjQzNTRlMjI1LTUwYzktNDQyMy05ZWNlLTJkNWFmZDkwNDg3MCIsImlzcyI6Imh0dHBzOi8vYXVnbG9vcC5vZmZpY2UuY29tL2Fub255bW91c1Rva2VuIiwiYXVkIjoiaHR0cHM6Ly9hdWdsb29wLm9mZmljZS5jb20vYW5vbnltb3VzVG9rZW4iLCJpYXQiOjE3NTI4MTI4NTUsIm5iZiI6MTc1MjgxMjU1NSwiZXhwIjoxNzUyODk5MjU1LCJvaWQiOiJiNFgyVTNoY201d3hWU2xBR2tzSnBncDY3d1k4UVhPbXR2YitHc1ZzZGdjPSIsInNpZCI6ImMyYjY0ZDM5LTJmYzctNDFhYy1hOGRmLWJjOTJhZDM2MTg4ZSJ9.N1K1WPMt0WRqOwfsT2B4zG2nerF5C1_K3vAkI1Nvv-B7TUwZ6N3GCuO1twd17bLnwXb5oJvIhn8abGaPXtXw2vAmfp0cysqpCnlZw3ZgVkQyTTwSdXYAIbnb347vVYWcikN4NIQ3_FDyPtaebetd0n45-LrGllORuxzKPq7OUP3u3-Q8H12zZOkLLtuH8BefndHSxPoXgAfvCQS9JQ-8KOzH_NKfLgZAbMySBU6xpdbdHErG5XWX1xmWLXqXoxVWJIki_2Vx0POFfcBsxxu7JTOW23Ffisc90X2DAbdGot-dOX4hFSljBbdcK0kXb08WJUfY2WwlSuflJcGkUe0KEA</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;138&quot;, &quot;Microsoft Edge&quot;;v=&quot;138&quot;, &quot;Microsoft Edge WebView2&quot;;v=&quot;138&quot;, &quot;Not)A;Brand&quot;;v=&quot;8&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="x-origin" elementType="Header">
                    <stringProp name="Header.name">x-origin</stringProp>
                    <stringProp name="Header.value">5D4D43FCF51AA4709870F2023FFFBE7C7D83B8305BDCD592F4597B8106E37CAC</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_08_Clickon_Confirm" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_08_Clickon_Confirm/extensionrevocation/v1/threatListUpdates:fetch-118" enabled="false">
              <stringProp name="HTTPSampler.domain">edge.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/extensionrevocation/v1/threatListUpdates:fetch</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="req" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">req</stringProp>
                    <stringProp name="Argument.value">ChcKBm1zZWRnZRINMTM4LjAuMzM1MS44MxobCAEQCBoNMTc1Mjc1NjAxOTg1OSIEIAEgAigEIgIIAQ==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ct" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ct</stringProp>
                    <stringProp name="Argument.value">application/x-protobuf</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">key</stringProp>
                    <stringProp name="Argument.value">d414dd4f9db345fa8003e32adc81b362</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Mesh-Client-Arch" elementType="Header">
                    <stringProp name="Header.name">Sec-Mesh-Client-Arch</stringProp>
                    <stringProp name="Header.value">x86_64</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Mesh-Client-OS" elementType="Header">
                    <stringProp name="Header.name">Sec-Mesh-Client-OS</stringProp>
                    <stringProp name="Header.value">Windows</stringProp>
                  </elementProp>
                  <elementProp name="X-HTTP-Method-Override" elementType="Header">
                    <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Mesh-Client-Edge-Version" elementType="Header">
                    <stringProp name="Header.name">Sec-Mesh-Client-Edge-Version</stringProp>
                    <stringProp name="Header.value">138.0.3351.83</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Mesh-Client-Edge-Channel" elementType="Header">
                    <stringProp name="Header.name">Sec-Mesh-Client-Edge-Channel</stringProp>
                    <stringProp name="Header.value">stable</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Mesh-Client-OS-Version" elementType="Header">
                    <stringProp name="Header.name">Sec-Mesh-Client-OS-Version</stringProp>
                    <stringProp name="Header.value">10.0.19045</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Mesh-Client-WebView" elementType="Header">
                    <stringProp name="Header.name">Sec-Mesh-Client-WebView</stringProp>
                    <stringProp name="Header.value">0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_07_Clickon_Continue/actions/Order.action-119" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="newOrder" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">newOrder</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="confirmed" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">confirmed</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Order.action</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_09" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_08_Clickon_Confirm/v4/threatListUpdates:fetch-120" enabled="true">
              <stringProp name="HTTPSampler.domain">safebrowsing.googleapis.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/v4/threatListUpdates:fetch</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="$req" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">$req</stringProp>
                    <stringProp name="Argument.value">Ch4KDGdvb2dsZWNocm9tZRIOMTM4LjAuNzIwNC4xMDEaKQgFEAEaGwoNCAUQBhgBIgMwMDEwARChnBwaAhgH3Ob9XSIEIAEgAigBGigIEBABGhoKDQgQEAYYASIDMDAxMAEQ3DIaAhgHXMqgOiIEIAEgAigBGikIARABGhsKDQgBEAYYASIDMDAxMAEQoMQRGgIYBxlh73MiBCABIAIoARopCAMQARobCg0IAxAGGAEiAzAwMTABENy7ERoCGAdCKdFOIgQgASACKAEaKQgOEAEaGwoNCA4QBhgBIgMwMDEwARC17wcaAhgHQRAnxCIEIAEgAigBGikIBxABGhsKDQgHEAYYASIDMDAxMAEQlPIRGgIYB2QCL98iBCABIAIoARooCAEQCBoaCg0IARAIGAEiAzAwMTAEEKU9GgIYBwnRNp4iBCABIAIoBBopCA8QARobCg0IDxAGGAEiAzAwMTABEPuBBhoCGAfPn-d4IgQgASACKAEaJwgJEAEaGQoNCAkQBhgBIgMwMDEwARAjGgIYB_cDXZQiBCABIAIoARooCAgQARoaCg0ICBAGGAEiAzAwMTABEMYZGgIYBxAzQX0iBCABIAIoARopCA0QARobCg0IDRAGGAEiAzAwMTABEIbMAhoCGAeXY04MIgQgASACKAEiAggB</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="$ct" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">$ct</stringProp>
                    <stringProp name="Argument.value">application/x-protobuf</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="key" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">key</stringProp>
                    <stringProp name="Argument.value">AIzaSyA2KlwBX3mkFo30om9LUFYQhpqLoa_BNhE</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="X-HTTP-Method-Override" elementType="Header">
                    <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                    <stringProp name="Header.value">POST</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_09_Clickon_Lo" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Lo/owa/notificationchannel/negotiate-121" enabled="true">
              <stringProp name="HTTPSampler.domain">outlook.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/owa/notificationchannel/negotiate</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="clientProtocol" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientProtocol</stringProp>
                    <stringProp name="Argument.value">1.5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="UA" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">UA</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="cid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cid</stringProp>
                    <stringProp name="Argument.value">c46bc416-76a7-a660-63ad-519ae3a66f67</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="app" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">app</stringProp>
                    <stringProp name="Argument.value">Mail</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="connectionToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">connectionToken</stringProp>
                    <stringProp name="Argument.value">jbC+ZierKyrOGggJ1lAwKfXPi28vHheWybPptdwDAJT55KwTcwcXo5ad5CInx9uXwLfgda3bMsvKcdxtxTa5wB6Ai4j6L1yCyYQa18kL0UlZ2KiAdf1eQqUaBUqmHM08u4yq18jSqR88L7LqQiAKDTfwfzaziCaU89BmyfUNkjMqgz96/OkBODJb23LqgcTxuNhxwLmctwlZb5FLCnTkil8/7IbZZRxS+V56aB99u+HusP/vkFeeg8Ev9jMmRl4hP2+PLMT9xI30VMBZpTupM19Y4AzV9xvoluhu6NFF4JKpy26+RIjZU0Qnkf4HRWc+ejROM0NlUtLvoXIv0tznBg==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdDelRCbnU4eCt4K2FTT3hoMXpNY2ZyQU42Yz0iLCJ4NXQiOiJHQ3pUQm51OHgreCthU094aDF6TWNmckFONmM9Iiwibm9uY2UiOiJxb0lZdlg4UHU1QzFKSWN3WW1qRmpXb1hhZzl4R2ppX1dJZ3Y3YmY4N0lKeXRLTWZSN2ZndVFNUDZaU3ZCc0xmV1ZLREd4MUplcUZZTFpreEN4OTVGTmE0bnpIUnk2Y1B2aGhIbmRWUndYRlMwcGlwTHJwZU96b3lTSlRsRnRmb0EwZjFsdkFRZVdVM0tGbGxzdWowWkpPMEpOMkxFSThxVkhsa0pDUlRqYlEiLCJpc3Nsb2MiOiJNQVpQUjAxTUI1Nzc4Iiwic3JzbiI6NjM4ODgyNjc0MzgwNzQwMDU2fQ.eyJzYXAtdmVyc2lvbiI6IjMyIiwiYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJpc3NyaW5nIjoiV1ciLCJhcHBpZGFjciI6IjIiLCJhcHBfZGlzcGxheW5hbWUiOiIiLCJ1dGkiOiJhNDExODIzNy1hOGIzLTRmMTctOTM4Ni1mMDhhYjBjZGEwMTEiLCJpYXQiOjE3NTI4MTE0MzIsInZlciI6IlNUSS5Vc2VyLkNhbGxiYWNrVG9rZW4uVjEiLCJ0aWQiOiJlYTNjNDZhNWJjY2Y0ODlhYTFiOGUzODcxYjA4ZTdjMCIsInRydXN0ZWRmb3JkZWxlZ2F0aW9uIjoiZmFsc2UiLCJ0b3BvbG9neSI6IntcIlR5cGVcIjpcIk1hY2hpbmVcIixcIlZhbHVlXCI6XCJNQVpQUjAxTUI1Nzc4LklORFBSRDAxLlBST0QuT1VUTE9PSy5DT01cIn0iLCJyZXF1ZXN0b3JfYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJyZXF1ZXN0b3JfYXBwX2Rpc3BsYXluYW1lIjoiT2ZmaWNlIDM2NSBFeGNoYW5nZSBNaWNyb3NlcnZpY2UiLCJzY3AiOiJPd2EuTm90aWZpY2F0aW9ucy5BbGwiLCJvaWQiOiJhMjk1NTYyZS1hZWIwLTRkNTEtYjU0YS01NDU5NWQ4YzIwZWMiLCJwdWlkIjoiMTAwMzIwMDFFNjlCMTM5NiIsInNtdHAiOiJOYXptdWxsYWguc0B5ZXRoaS5pbiIsInVwbiI6Ik5hem11bGxhaC5zQHlldGhpLmluIiwiZXBrIjoie1wia3R5XCI6XCJSU0FcIixcIm5cIjpcInJtT0YtUUZ0a0RRWi1ROVQ3OXdnTThFTXgwZXhwTGNJWWtIUzBFWS00MDJERUh6cVNScS16UFFNSzd1Qk03VFVMR0NjaW5GdWc0emRtTDNIMEw5ZVVrM0V6WVc2NE95RGM1NHBCdUhMR2toNktvQjUtZjVJa1R0WEdxUXpxb2VzV1lGamgyZHJCSGZtRkRqbnFCMkNnZzVNUlA3UkdjbXpoTXRrY053RU1HU242dDhoSzZleEtXSFJzYWdaNHlibkZTUjNkcUdQOUZ0Zk1tOEpwTF9mREdhb0xVRW83YWMxZXhqT1d4ek9FMVc3QzFDaWNaU3d2SzVPTFhZMjRVX1pmcExmTlVOdHJxMHAtX1pHM3dKYlJKY1gzNjJONEpiSFBNS3kyVUJIQ3pjVUtIRjFRNGhLWE1PbWh1eEpsd1NjUFhvWl9aNUNveXcyUHZMUmdleW1wUVwiLFwiZVwiOlwiQVFBQlwiLFwiYWxnXCI6XCJSUzI1NlwiLFwiZXhwXCI6XCIxNzUyOTAxMDcwXCIsXCJleHBfZGlmZlwiOlwiODY0MDBcIixcImtpZFwiOlwiUDdLSWZIQ0NPWTQ4dkZGTC12b1NpTWp0ZFd3XCJ9LnVyREtUQ2ZyTjZaR21PMVpoZGxsV2szTVhwNmVVdlVKSVFjR0pxWWhUYmZvcFpPYWdVRFZhdmZKbDhWd3VFWUw1Q1pVZGR2Z1M0cmJibEQySU5tcnFHVnA5Z0JaLzlpaFU0M3BwWDQ2ZEdBb2lwR3JLQmlSWXRINjhVM3NJcGllb1BBeDFVd3kweGtzTFFLQ3dHeWh0ZEVoRXRXQ2g5NFVtaTZpTFlBNVVyNUc1d2YxcWtrWm8vSUZZR0NVLy85dmoxL0U5T3Btd3hRS241N2ptUWZtVDZESUJxM3VHNExDM1ZiVnFtVlVzS2tJYklJVS94S3d3bmhROW9DV215VVRwZnVSU3lCbkgrbnJTQU13MG5NTGNPY20wZUJvWGJIeGx1TVozZEdlaURxcDgzN0FWSmlrU2VxVXd1Ukx2THM4a1FkWXFrdHdJOTNlaDNZM3RRejRsUT09IiwibmJmIjoxNzUyODExNDMyLCJleHAiOjE3NTI4MTUwMzIsImlzcyI6Imh0dHBzOi8vc3Vic3RyYXRlLm9mZmljZS5jb20vc3RzLyIsImF1ZCI6Imh0dHBzOi8vb3V0bG9vay5vZmZpY2UuY29tIiwic3NlYyI6IkU3ZDVZa2hFaTY0TWh4M2giLCJlc3NlYyI6ImFydGlmYWN0LWF1dG8tcHJvZHxNMzY1MjAyNS0wNS0xOVQyMDo1Mjo1NC42NDUyODgzWnxGSmdKQTdkendhVDJ4TiJ9.b5at2dGZip-khsC7SxEfXHsNZt9xcApmDZwCr37NVqoUcO5HLM5ss6YjcrUNprjTcRs_TuMKdz52IAaRXKFP2MduANF4tiysN3LjtxdQYow9x21ypiP9S9NBwlJcHlyoymUvakTjvCkdRns_VSocNGIVNh0Vf2k1vDDPHxog5O6PeKaVUMzPK8E6DqKayBmhc8BVkGZorZYaMjJEnMRLvA1fAuUge9WmS7E1kk94mr0m04tDj_PDKXB61o0JCtDiBj3cmI6J4ct-tRFtb9rYIGXhNSvHGvPeSGrnj2gq7y2lWVv8LSwvQma1TLLCoZ4Umcy_FeJoZfCTGg3OuW12yw</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="Header">
                    <stringProp name="Header.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Header.value">PUID:10032001E69B1396@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_09_Clickon_Logout" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Lo/owa/notificationchannel/connect-122" enabled="false">
              <stringProp name="HTTPSampler.domain">outlook.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/owa/notificationchannel/connect</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="transport" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">transport</stringProp>
                    <stringProp name="Argument.value">serverSentEvents</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="clientProtocol" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientProtocol</stringProp>
                    <stringProp name="Argument.value">1.5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="UA" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">UA</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="cid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cid</stringProp>
                    <stringProp name="Argument.value">c46bc416-76a7-a660-63ad-519ae3a66f67</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="app" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">app</stringProp>
                    <stringProp name="Argument.value">Mail</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="connectionToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">connectionToken</stringProp>
                    <stringProp name="Argument.value">LpPTBqAZosdX4SJbg1xZ6xwBkHXe53s9wE4zX94GfU41Dxms6Jbpe38tSokBtf7rFe8SwvcUYU2no6/49EM0d/fNvroTPbk470bqWdCXax7gEAegGE5KX8iC2j82SSZDdVKinBSOoiuN09RE1Y5UvNJ/NxhYg711SXZy71kSnarExNLbAoenqdWty2vxls56RzdjWRffYrVpi7wNvupHcMqUTi9ipAbSvHTf3LBlM4kWVXTjepg6b0+/nxr0S4hrneFyAbYNk8feeg31cp8KDk4TCIWFOdrAkhU1urtz2Zogsd4GjdHDaj6qBgWbTXgET0qL0xKFazswJ57pFeMf/A==</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="tid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">tid</stringProp>
                    <stringProp name="Argument.value">6</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/event-stream</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdDelRCbnU4eCt4K2FTT3hoMXpNY2ZyQU42Yz0iLCJ4NXQiOiJHQ3pUQm51OHgreCthU094aDF6TWNmckFONmM9Iiwibm9uY2UiOiJxb0lZdlg4UHU1QzFKSWN3WW1qRmpXb1hhZzl4R2ppX1dJZ3Y3YmY4N0lKeXRLTWZSN2ZndVFNUDZaU3ZCc0xmV1ZLREd4MUplcUZZTFpreEN4OTVGTmE0bnpIUnk2Y1B2aGhIbmRWUndYRlMwcGlwTHJwZU96b3lTSlRsRnRmb0EwZjFsdkFRZVdVM0tGbGxzdWowWkpPMEpOMkxFSThxVkhsa0pDUlRqYlEiLCJpc3Nsb2MiOiJNQVpQUjAxTUI1Nzc4Iiwic3JzbiI6NjM4ODgyNjc0MzgwNzQwMDU2fQ.eyJzYXAtdmVyc2lvbiI6IjMyIiwiYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJpc3NyaW5nIjoiV1ciLCJhcHBpZGFjciI6IjIiLCJhcHBfZGlzcGxheW5hbWUiOiIiLCJ1dGkiOiJhNDExODIzNy1hOGIzLTRmMTctOTM4Ni1mMDhhYjBjZGEwMTEiLCJpYXQiOjE3NTI4MTE0MzIsInZlciI6IlNUSS5Vc2VyLkNhbGxiYWNrVG9rZW4uVjEiLCJ0aWQiOiJlYTNjNDZhNWJjY2Y0ODlhYTFiOGUzODcxYjA4ZTdjMCIsInRydXN0ZWRmb3JkZWxlZ2F0aW9uIjoiZmFsc2UiLCJ0b3BvbG9neSI6IntcIlR5cGVcIjpcIk1hY2hpbmVcIixcIlZhbHVlXCI6XCJNQVpQUjAxTUI1Nzc4LklORFBSRDAxLlBST0QuT1VUTE9PSy5DT01cIn0iLCJyZXF1ZXN0b3JfYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJyZXF1ZXN0b3JfYXBwX2Rpc3BsYXluYW1lIjoiT2ZmaWNlIDM2NSBFeGNoYW5nZSBNaWNyb3NlcnZpY2UiLCJzY3AiOiJPd2EuTm90aWZpY2F0aW9ucy5BbGwiLCJvaWQiOiJhMjk1NTYyZS1hZWIwLTRkNTEtYjU0YS01NDU5NWQ4YzIwZWMiLCJwdWlkIjoiMTAwMzIwMDFFNjlCMTM5NiIsInNtdHAiOiJOYXptdWxsYWguc0B5ZXRoaS5pbiIsInVwbiI6Ik5hem11bGxhaC5zQHlldGhpLmluIiwiZXBrIjoie1wia3R5XCI6XCJSU0FcIixcIm5cIjpcInJtT0YtUUZ0a0RRWi1ROVQ3OXdnTThFTXgwZXhwTGNJWWtIUzBFWS00MDJERUh6cVNScS16UFFNSzd1Qk03VFVMR0NjaW5GdWc0emRtTDNIMEw5ZVVrM0V6WVc2NE95RGM1NHBCdUhMR2toNktvQjUtZjVJa1R0WEdxUXpxb2VzV1lGamgyZHJCSGZtRkRqbnFCMkNnZzVNUlA3UkdjbXpoTXRrY053RU1HU242dDhoSzZleEtXSFJzYWdaNHlibkZTUjNkcUdQOUZ0Zk1tOEpwTF9mREdhb0xVRW83YWMxZXhqT1d4ek9FMVc3QzFDaWNaU3d2SzVPTFhZMjRVX1pmcExmTlVOdHJxMHAtX1pHM3dKYlJKY1gzNjJONEpiSFBNS3kyVUJIQ3pjVUtIRjFRNGhLWE1PbWh1eEpsd1NjUFhvWl9aNUNveXcyUHZMUmdleW1wUVwiLFwiZVwiOlwiQVFBQlwiLFwiYWxnXCI6XCJSUzI1NlwiLFwiZXhwXCI6XCIxNzUyOTAxMDcwXCIsXCJleHBfZGlmZlwiOlwiODY0MDBcIixcImtpZFwiOlwiUDdLSWZIQ0NPWTQ4dkZGTC12b1NpTWp0ZFd3XCJ9LnVyREtUQ2ZyTjZaR21PMVpoZGxsV2szTVhwNmVVdlVKSVFjR0pxWWhUYmZvcFpPYWdVRFZhdmZKbDhWd3VFWUw1Q1pVZGR2Z1M0cmJibEQySU5tcnFHVnA5Z0JaLzlpaFU0M3BwWDQ2ZEdBb2lwR3JLQmlSWXRINjhVM3NJcGllb1BBeDFVd3kweGtzTFFLQ3dHeWh0ZEVoRXRXQ2g5NFVtaTZpTFlBNVVyNUc1d2YxcWtrWm8vSUZZR0NVLy85dmoxL0U5T3Btd3hRS241N2ptUWZtVDZESUJxM3VHNExDM1ZiVnFtVlVzS2tJYklJVS94S3d3bmhROW9DV215VVRwZnVSU3lCbkgrbnJTQU13MG5NTGNPY20wZUJvWGJIeGx1TVozZEdlaURxcDgzN0FWSmlrU2VxVXd1Ukx2THM4a1FkWXFrdHdJOTNlaDNZM3RRejRsUT09IiwibmJmIjoxNzUyODExNDMyLCJleHAiOjE3NTI4MTUwMzIsImlzcyI6Imh0dHBzOi8vc3Vic3RyYXRlLm9mZmljZS5jb20vc3RzLyIsImF1ZCI6Imh0dHBzOi8vb3V0bG9vay5vZmZpY2UuY29tIiwic3NlYyI6IkU3ZDVZa2hFaTY0TWh4M2giLCJlc3NlYyI6ImFydGlmYWN0LWF1dG8tcHJvZHxNMzY1MjAyNS0wNS0xOVQyMDo1Mjo1NC42NDUyODgzWnxGSmdKQTdkendhVDJ4TiJ9.b5at2dGZip-khsC7SxEfXHsNZt9xcApmDZwCr37NVqoUcO5HLM5ss6YjcrUNprjTcRs_TuMKdz52IAaRXKFP2MduANF4tiysN3LjtxdQYow9x21ypiP9S9NBwlJcHlyoymUvakTjvCkdRns_VSocNGIVNh0Vf2k1vDDPHxog5O6PeKaVUMzPK8E6DqKayBmhc8BVkGZorZYaMjJEnMRLvA1fAuUge9WmS7E1kk94mr0m04tDj_PDKXB61o0JCtDiBj3cmI6J4ct-tRFtb9rYIGXhNSvHGvPeSGrnj2gq7y2lWVv8LSwvQma1TLLCoZ4Umcy_FeJoZfCTGg3OuW12yw</stringProp>
                  </elementProp>
                  <elementProp name="Last-Event-ID" elementType="Header">
                    <stringProp name="Header.name">Last-Event-ID</stringProp>
                    <stringProp name="Header.value">null</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="Header">
                    <stringProp name="Header.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Header.value">PUID:10032001E69B1396@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Logout/owa/notificationchannel/abort?transport=foreverFrame&amp;clientProtocol=1.5&amp;UA=0&amp;cid=c46bc416-76a7-a660-63ad-519ae3a66f67&amp;app=Mail&amp;connectionToken=LpPTBqAZosdX4SJbg1xZ6xwBkHXe53s9wE4zX94GfU41Dxms6Jbpe38tSokBtf7rFe8SwvcUYU2no6%2F49EM0d%2FfNvroTPbk470bqWdCXax7gEAegGE5KX8iC2j82SSZDdVKinBSOoiuN09RE1Y5UvNJ%2FNxhYg711SXZy71kSnarExNLbAoenqdWty2vxls56RzdjWRffYrVpi7wNvupHcMqUTi9ipAbSvHTf3LBlM4kWVXTjepg6b0%2B%2Fnxr0S4hrneFyAbYNk8feeg31cp8KDk4TCIWFOdrAkhU1urtz2Zogsd4GjdHDaj6qBgWbTXgET0qL0xKFazswJ57pFeMf%2FA%3D%3D-123" enabled="false">
              <stringProp name="HTTPSampler.domain">outlook.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/owa/notificationchannel/abort?transport=foreverFrame&amp;clientProtocol=1.5&amp;UA=0&amp;cid=c46bc416-76a7-a660-63ad-519ae3a66f67&amp;app=Mail&amp;connectionToken=LpPTBqAZosdX4SJbg1xZ6xwBkHXe53s9wE4zX94GfU41Dxms6Jbpe38tSokBtf7rFe8SwvcUYU2no6%2F49EM0d%2FfNvroTPbk470bqWdCXax7gEAegGE5KX8iC2j82SSZDdVKinBSOoiuN09RE1Y5UvNJ%2FNxhYg711SXZy71kSnarExNLbAoenqdWty2vxls56RzdjWRffYrVpi7wNvupHcMqUTi9ipAbSvHTf3LBlM4kWVXTjepg6b0%2B%2Fnxr0S4hrneFyAbYNk8feeg31cp8KDk4TCIWFOdrAkhU1urtz2Zogsd4GjdHDaj6qBgWbTXgET0qL0xKFazswJ57pFeMf%2FA%3D%3D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdDelRCbnU4eCt4K2FTT3hoMXpNY2ZyQU42Yz0iLCJ4NXQiOiJHQ3pUQm51OHgreCthU094aDF6TWNmckFONmM9Iiwibm9uY2UiOiJxb0lZdlg4UHU1QzFKSWN3WW1qRmpXb1hhZzl4R2ppX1dJZ3Y3YmY4N0lKeXRLTWZSN2ZndVFNUDZaU3ZCc0xmV1ZLREd4MUplcUZZTFpreEN4OTVGTmE0bnpIUnk2Y1B2aGhIbmRWUndYRlMwcGlwTHJwZU96b3lTSlRsRnRmb0EwZjFsdkFRZVdVM0tGbGxzdWowWkpPMEpOMkxFSThxVkhsa0pDUlRqYlEiLCJpc3Nsb2MiOiJNQVpQUjAxTUI1Nzc4Iiwic3JzbiI6NjM4ODgyNjc0MzgwNzQwMDU2fQ.eyJzYXAtdmVyc2lvbiI6IjMyIiwiYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJpc3NyaW5nIjoiV1ciLCJhcHBpZGFjciI6IjIiLCJhcHBfZGlzcGxheW5hbWUiOiIiLCJ1dGkiOiJhNDExODIzNy1hOGIzLTRmMTctOTM4Ni1mMDhhYjBjZGEwMTEiLCJpYXQiOjE3NTI4MTE0MzIsInZlciI6IlNUSS5Vc2VyLkNhbGxiYWNrVG9rZW4uVjEiLCJ0aWQiOiJlYTNjNDZhNWJjY2Y0ODlhYTFiOGUzODcxYjA4ZTdjMCIsInRydXN0ZWRmb3JkZWxlZ2F0aW9uIjoiZmFsc2UiLCJ0b3BvbG9neSI6IntcIlR5cGVcIjpcIk1hY2hpbmVcIixcIlZhbHVlXCI6XCJNQVpQUjAxTUI1Nzc4LklORFBSRDAxLlBST0QuT1VUTE9PSy5DT01cIn0iLCJyZXF1ZXN0b3JfYXBwaWQiOiIxNTdjZGZiZi03Mzk4LTRhNTYtOTZjMy1lOTNlOWFiMzA5YjUiLCJyZXF1ZXN0b3JfYXBwX2Rpc3BsYXluYW1lIjoiT2ZmaWNlIDM2NSBFeGNoYW5nZSBNaWNyb3NlcnZpY2UiLCJzY3AiOiJPd2EuTm90aWZpY2F0aW9ucy5BbGwiLCJvaWQiOiJhMjk1NTYyZS1hZWIwLTRkNTEtYjU0YS01NDU5NWQ4YzIwZWMiLCJwdWlkIjoiMTAwMzIwMDFFNjlCMTM5NiIsInNtdHAiOiJOYXptdWxsYWguc0B5ZXRoaS5pbiIsInVwbiI6Ik5hem11bGxhaC5zQHlldGhpLmluIiwiZXBrIjoie1wia3R5XCI6XCJSU0FcIixcIm5cIjpcInJtT0YtUUZ0a0RRWi1ROVQ3OXdnTThFTXgwZXhwTGNJWWtIUzBFWS00MDJERUh6cVNScS16UFFNSzd1Qk03VFVMR0NjaW5GdWc0emRtTDNIMEw5ZVVrM0V6WVc2NE95RGM1NHBCdUhMR2toNktvQjUtZjVJa1R0WEdxUXpxb2VzV1lGamgyZHJCSGZtRkRqbnFCMkNnZzVNUlA3UkdjbXpoTXRrY053RU1HU242dDhoSzZleEtXSFJzYWdaNHlibkZTUjNkcUdQOUZ0Zk1tOEpwTF9mREdhb0xVRW83YWMxZXhqT1d4ek9FMVc3QzFDaWNaU3d2SzVPTFhZMjRVX1pmcExmTlVOdHJxMHAtX1pHM3dKYlJKY1gzNjJONEpiSFBNS3kyVUJIQ3pjVUtIRjFRNGhLWE1PbWh1eEpsd1NjUFhvWl9aNUNveXcyUHZMUmdleW1wUVwiLFwiZVwiOlwiQVFBQlwiLFwiYWxnXCI6XCJSUzI1NlwiLFwiZXhwXCI6XCIxNzUyOTAxMDcwXCIsXCJleHBfZGlmZlwiOlwiODY0MDBcIixcImtpZFwiOlwiUDdLSWZIQ0NPWTQ4dkZGTC12b1NpTWp0ZFd3XCJ9LnVyREtUQ2ZyTjZaR21PMVpoZGxsV2szTVhwNmVVdlVKSVFjR0pxWWhUYmZvcFpPYWdVRFZhdmZKbDhWd3VFWUw1Q1pVZGR2Z1M0cmJibEQySU5tcnFHVnA5Z0JaLzlpaFU0M3BwWDQ2ZEdBb2lwR3JLQmlSWXRINjhVM3NJcGllb1BBeDFVd3kweGtzTFFLQ3dHeWh0ZEVoRXRXQ2g5NFVtaTZpTFlBNVVyNUc1d2YxcWtrWm8vSUZZR0NVLy85dmoxL0U5T3Btd3hRS241N2ptUWZtVDZESUJxM3VHNExDM1ZiVnFtVlVzS2tJYklJVS94S3d3bmhROW9DV215VVRwZnVSU3lCbkgrbnJTQU13MG5NTGNPY20wZUJvWGJIeGx1TVozZEdlaURxcDgzN0FWSmlrU2VxVXd1Ukx2THM4a1FkWXFrdHdJOTNlaDNZM3RRejRsUT09IiwibmJmIjoxNzUyODExNDMyLCJleHAiOjE3NTI4MTUwMzIsImlzcyI6Imh0dHBzOi8vc3Vic3RyYXRlLm9mZmljZS5jb20vc3RzLyIsImF1ZCI6Imh0dHBzOi8vb3V0bG9vay5vZmZpY2UuY29tIiwic3NlYyI6IkU3ZDVZa2hFaTY0TWh4M2giLCJlc3NlYyI6ImFydGlmYWN0LWF1dG8tcHJvZHxNMzY1MjAyNS0wNS0xOVQyMDo1Mjo1NC42NDUyODgzWnxGSmdKQTdkendhVDJ4TiJ9.b5at2dGZip-khsC7SxEfXHsNZt9xcApmDZwCr37NVqoUcO5HLM5ss6YjcrUNprjTcRs_TuMKdz52IAaRXKFP2MduANF4tiysN3LjtxdQYow9x21ypiP9S9NBwlJcHlyoymUvakTjvCkdRns_VSocNGIVNh0Vf2k1vDDPHxog5O6PeKaVUMzPK8E6DqKayBmhc8BVkGZorZYaMjJEnMRLvA1fAuUge9WmS7E1kk94mr0m04tDj_PDKXB61o0JCtDiBj3cmI6J4ct-tRFtb9rYIGXhNSvHGvPeSGrnj2gq7y2lWVv8LSwvQma1TLLCoZ4Umcy_FeJoZfCTGg3OuW12yw</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="Header">
                    <stringProp name="Header.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Header.value">PUID:10032001E69B1396@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_08_Clickon_Confirm/actions/Account.action-124" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="signoff" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">signoff</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Order.action?newOrder=&amp;confirmed=true</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Logout/actions/Catalog.action-125" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Order.action?newOrder=&amp;confirmed=true</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_09_Clickon_Logout" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Logout/ows/beta/elevenbyeleven-131" enabled="true">
              <stringProp name="HTTPSampler.domain">outlook.office.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/ows/beta/elevenbyeleven</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="api-version" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">api-version</stringProp>
                    <stringProp name="Argument.value">2.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="n" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">n</stringProp>
                    <stringProp name="Argument.value">78</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="cri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cri</stringProp>
                    <stringProp name="Argument.value">038b0743-0012-7521-19fc-25118c6177ec</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="cv" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cv</stringProp>
                    <stringProp name="Argument.value">oTYaxIlLSz28XyyNlMSE1t.89</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="x-clientid" elementType="Header">
                    <stringProp name="Header.name">x-clientid</stringProp>
                    <stringProp name="Header.value">A0C46EB5780B4F708A9FFA0FBF98A767</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="prefer" elementType="Header">
                    <stringProp name="Header.name">prefer</stringProp>
                    <stringProp name="Header.value">IdType=&quot;ImmutableId&quot;, exchange.behavior=&quot;IncludeThirdPartyOnlineMeetingProviders&quot;</stringProp>
                  </elementProp>
                  <elementProp name="x-owa-sessionid" elementType="Header">
                    <stringProp name="Header.name">x-owa-sessionid</stringProp>
                    <stringProp name="Header.value">73e39679-8f59-4fe9-a751-ba64cbe6e7a2</stringProp>
                  </elementProp>
                  <elementProp name="ms-cv" elementType="Header">
                    <stringProp name="Header.name">ms-cv</stringProp>
                    <stringProp name="Header.value">oTYaxIlLSz28XyyNlMSE1t.89</stringProp>
                  </elementProp>
                  <elementProp name="x-routingparameter-sessionkey" elementType="Header">
                    <stringProp name="Header.name">x-routingparameter-sessionkey</stringProp>
                    <stringProp name="Header.value">PUID:10032001E69B1396@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">Bearer  YOUR_TOKEN_HERE</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="owaappid" elementType="Header">
                    <stringProp name="Header.name">owaappid</stringProp>
                    <stringProp name="Header.value">9199bf20-a13f-4107-85dc-02114787ef48</stringProp>
                  </elementProp>
                  <elementProp name="x-anchormailbox" elementType="Header">
                    <stringProp name="Header.name">x-anchormailbox</stringProp>
                    <stringProp name="Header.value">PUID:10032001E69B1396@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="x-tenantid" elementType="Header">
                    <stringProp name="Header.name">x-tenantid</stringProp>
                    <stringProp name="Header.value">ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-appname" elementType="Header">
                    <stringProp name="Header.name">x-ms-appname</stringProp>
                    <stringProp name="Header.value">owa-reactmail</stringProp>
                  </elementProp>
                  <elementProp name="client-request-id" elementType="Header">
                    <stringProp name="Header.name">client-request-id</stringProp>
                    <stringProp name="Header.value">038b0743-0012-7521-19fc-25118c6177ec</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Logout/organizations/oauth2/v2.0/token?client-request-id=3d7a361a-9a61-17ed-f113-69757dbd6290-126" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/organizations/oauth2/v2.0/token?client-request-id=3d7a361a-9a61-17ed-f113-69757dbd6290</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">9199bf20-a13f-4107-85dc-02114787ef48</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://outlook.office.com/mail/oauthRedirect.html</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://yethi-my.sharepoint.com/.default openid profile offline_access</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                    <stringProp name="Argument.value">refresh_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">msal.js.browser</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-VER" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-VER</stringProp>
                    <stringProp name="Argument.value">4.12.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-lib-capability" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-ms-lib-capability</stringProp>
                    <stringProp name="Argument.value">retry-after, h429</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-current-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-current-telemetry</stringProp>
                    <stringProp name="Argument.value">5|61,0,,,|,</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-last-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-last-telemetry</stringProp>
                    <stringProp name="Argument.value">5|0|||0,0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="refresh_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">refresh_token</stringProp>
                    <stringProp name="Argument.value">1.ASoApUY86s-8mkihuOOHGwjnwCC_mZE_oQdBhdwCEUeH70gpAd8qAA.AgABAwEAAABVrSpeuWamRam2jAF1XRQEAwDs_wUA9P_GhUN1nWc0jGJAecUA9ay1et0Hg0EJ3vWPjbYtIemyYq8XW0YvO1LEG2UbyiGIID31dci7OTTsdhXaCkcVk5_V74uzqZNLsdGO8bl8DY175Zs7On3WJu-tWngKIEP1tHq7sGcKw7LjPBESjefgx49SV3Jh62YBBzatWWHUFfj-auf0oPXCpc2rlXLn90A1vMNjjvZfgjQXZ_jncmT-HvQQ08P_00ABRBj41EWZT5arewKlQ0FdlEagjpMNmZW2-bNxQRjdcgYBhQMWWI81u9XeNzO-W9olymy4oJpkiY0MjbamBa9zAzEzlpddgMzA7Niv-ykaHk7yKWzeS14DKu8UGhLxZsorfcrWgHtQqXFoHswQWFqk6qZxIBnfYh0Y4AyC0pKEaw43z14RltCMtZYorsq8ozaf4_DbRXd9DwE90ObAjHgisYiNGiLeiBmlf-WinS6UqaHtEwweaV5jdQgUH0SWE9xUNgGsbeA7USnE5vlhQ6ZHiibB3Sg_f-RdbrsJbs1GNBOf0yNlfUAnKHjQtHgTEsffyuvzxw5csE--SA_ifNC-rmfiiGk-TeCGPCxpeBjtokGBGEp6WzqEUC8my3p1foNp-F3LAlUbnBhuWYMYmS85_yydWoQ02mVH48ciORGe0yeP1p04ZZ3UB3XCswh6CuwoE0vPhJr1R1Iritzj4B9FxghxM4itmI4yXIB9xIh2IQBrd8DJYdXKShJNxCJ8hs5USLyB-MO21WuyGOVYyfOVwM6XYum1R2_W7yXZGlipA9n5B9o-tb7ipFIHppytDGvfvTO1ESIN77qIhjMIwUZKcDNoB9hjoRIQu0hsaSKIFmt8SMogbj3hG3IfS5RUXWq-Rtug0RAU3XERdYFew_kkQKzW6lIv9MRmw5o-hE8QySj2UkzIhhQVc0vSJh6xie2LOHrXI46dmiJgcKpP-A0_pdqUQmuVlDuBqOb6Ib4-hvIPO-2q3kSk</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="claims" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">claims</stringProp>
                    <stringProp name="Argument.value">{&quot;access_token&quot;:{&quot;xms_cc&quot;:{&quot;values&quot;:[&quot;CP1&quot;]}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Argument.value">Oid:a295562e-aeb0-4d51-b54a-54595d8c20ec@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Logout/organizations/oauth2/v2.0/token?client-request-id=b10151ca-94e1-6f63-f123-8b5e293af6af-127" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/organizations/oauth2/v2.0/token?client-request-id=b10151ca-94e1-6f63-f123-8b5e293af6af</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">9199bf20-a13f-4107-85dc-02114787ef48</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://outlook.office.com/mail/oauthRedirect.html</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://pushchannel.1drv.ms/.default openid profile offline_access</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                    <stringProp name="Argument.value">refresh_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">msal.js.browser</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-VER" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-VER</stringProp>
                    <stringProp name="Argument.value">4.12.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-lib-capability" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-ms-lib-capability</stringProp>
                    <stringProp name="Argument.value">retry-after, h429</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-current-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-current-telemetry</stringProp>
                    <stringProp name="Argument.value">5|61,0,,,|,</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-last-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-last-telemetry</stringProp>
                    <stringProp name="Argument.value">5|0|||0,0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="refresh_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">refresh_token</stringProp>
                    <stringProp name="Argument.value">1.ASoApUY86s-8mkihuOOHGwjnwCC_mZE_oQdBhdwCEUeH70gpAd8qAA.AgABAwEAAABVrSpeuWamRam2jAF1XRQEAwDs_wUA9P_GhUN1nWc0jGJAecUA9ay1et0Hg0EJ3vWPjbYtIemyYq8XW0YvO1LEG2UbyiGIID31dci7OTTsdhXaCkcVk5_V74uzqZNLsdGO8bl8DY175Zs7On3WJu-tWngKIEP1tHq7sGcKw7LjPBESjefgx49SV3Jh62YBBzatWWHUFfj-auf0oPXCpc2rlXLn90A1vMNjjvZfgjQXZ_jncmT-HvQQ08P_00ABRBj41EWZT5arewKlQ0FdlEagjpMNmZW2-bNxQRjdcgYBhQMWWI81u9XeNzO-W9olymy4oJpkiY0MjbamBa9zAzEzlpddgMzA7Niv-ykaHk7yKWzeS14DKu8UGhLxZsorfcrWgHtQqXFoHswQWFqk6qZxIBnfYh0Y4AyC0pKEaw43z14RltCMtZYorsq8ozaf4_DbRXd9DwE90ObAjHgisYiNGiLeiBmlf-WinS6UqaHtEwweaV5jdQgUH0SWE9xUNgGsbeA7USnE5vlhQ6ZHiibB3Sg_f-RdbrsJbs1GNBOf0yNlfUAnKHjQtHgTEsffyuvzxw5csE--SA_ifNC-rmfiiGk-TeCGPCxpeBjtokGBGEp6WzqEUC8my3p1foNp-F3LAlUbnBhuWYMYmS85_yydWoQ02mVH48ciORGe0yeP1p04ZZ3UB3XCswh6CuwoE0vPhJr1R1Iritzj4B9FxghxM4itmI4yXIB9xIh2IQBrd8DJYdXKShJNxCJ8hs5USLyB-MO21WuyGOVYyfOVwM6XYum1R2_W7yXZGlipA9n5B9o-tb7ipFIHppytDGvfvTO1ESIN77qIhjMIwUZKcDNoB9hjoRIQu0hsaSKIFmt8SMogbj3hG3IfS5RUXWq-Rtug0RAU3XERdYFew_kkQKzW6lIv9MRmw5o-hE8QySj2UkzIhhQVc0vSJh6xie2LOHrXI46dmiJgcKpP-A0_pdqUQmuVlDuBqOb6Ib4-hvIPO-2q3kSk</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="claims" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">claims</stringProp>
                    <stringProp name="Argument.value">{&quot;access_token&quot;:{&quot;xms_cc&quot;:{&quot;values&quot;:[&quot;CP1&quot;]}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Argument.value">Oid:a295562e-aeb0-4d51-b54a-54595d8c20ec@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Logout/organizations/oauth2/v2.0/token?client-request-id=0d62588e-61eb-efd3-b6b2-9a8340f89270-128" enabled="true">
              <stringProp name="HTTPSampler.domain">login.microsoftonline.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/organizations/oauth2/v2.0/token?client-request-id=0d62588e-61eb-efd3-b6b2-9a8340f89270</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="client_id" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_id</stringProp>
                    <stringProp name="Argument.value">9199bf20-a13f-4107-85dc-02114787ef48</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="redirect_uri" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">redirect_uri</stringProp>
                    <stringProp name="Argument.value">${scheme}://outlook.office.com/mail/oauthRedirect.html</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">${scheme}://yethi.sharepoint.com/.default openid profile offline_access</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                    <stringProp name="Argument.value">refresh_token</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="client_info" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">client_info</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-SKU" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-SKU</stringProp>
                    <stringProp name="Argument.value">msal.js.browser</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-VER" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x-client-VER</stringProp>
                    <stringProp name="Argument.value">4.12.0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-ms-lib-capability" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-ms-lib-capability</stringProp>
                    <stringProp name="Argument.value">retry-after, h429</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-current-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-current-telemetry</stringProp>
                    <stringProp name="Argument.value">5|61,0,,,|,</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="x-client-last-telemetry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">x-client-last-telemetry</stringProp>
                    <stringProp name="Argument.value">5|0|||0,0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="refresh_token" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">refresh_token</stringProp>
                    <stringProp name="Argument.value">1.ASoApUY86s-8mkihuOOHGwjnwCC_mZE_oQdBhdwCEUeH70gpAd8qAA.AgABAwEAAABVrSpeuWamRam2jAF1XRQEAwDs_wUA9P_GhUN1nWc0jGJAecUA9ay1et0Hg0EJ3vWPjbYtIemyYq8XW0YvO1LEG2UbyiGIID31dci7OTTsdhXaCkcVk5_V74uzqZNLsdGO8bl8DY175Zs7On3WJu-tWngKIEP1tHq7sGcKw7LjPBESjefgx49SV3Jh62YBBzatWWHUFfj-auf0oPXCpc2rlXLn90A1vMNjjvZfgjQXZ_jncmT-HvQQ08P_00ABRBj41EWZT5arewKlQ0FdlEagjpMNmZW2-bNxQRjdcgYBhQMWWI81u9XeNzO-W9olymy4oJpkiY0MjbamBa9zAzEzlpddgMzA7Niv-ykaHk7yKWzeS14DKu8UGhLxZsorfcrWgHtQqXFoHswQWFqk6qZxIBnfYh0Y4AyC0pKEaw43z14RltCMtZYorsq8ozaf4_DbRXd9DwE90ObAjHgisYiNGiLeiBmlf-WinS6UqaHtEwweaV5jdQgUH0SWE9xUNgGsbeA7USnE5vlhQ6ZHiibB3Sg_f-RdbrsJbs1GNBOf0yNlfUAnKHjQtHgTEsffyuvzxw5csE--SA_ifNC-rmfiiGk-TeCGPCxpeBjtokGBGEp6WzqEUC8my3p1foNp-F3LAlUbnBhuWYMYmS85_yydWoQ02mVH48ciORGe0yeP1p04ZZ3UB3XCswh6CuwoE0vPhJr1R1Iritzj4B9FxghxM4itmI4yXIB9xIh2IQBrd8DJYdXKShJNxCJ8hs5USLyB-MO21WuyGOVYyfOVwM6XYum1R2_W7yXZGlipA9n5B9o-tb7ipFIHppytDGvfvTO1ESIN77qIhjMIwUZKcDNoB9hjoRIQu0hsaSKIFmt8SMogbj3hG3IfS5RUXWq-Rtug0RAU3XERdYFew_kkQKzW6lIv9MRmw5o-hE8QySj2UkzIhhQVc0vSJh6xie2LOHrXI46dmiJgcKpP-A0_pdqUQmuVlDuBqOb6Ib4-hvIPO-2q3kSk</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="claims" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">claims</stringProp>
                    <stringProp name="Argument.value">{&quot;access_token&quot;:{&quot;xms_cc&quot;:{&quot;values&quot;:[&quot;CP1&quot;]}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="X-AnchorMailbox" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">X-AnchorMailbox</stringProp>
                    <stringProp name="Argument.value">Oid:a295562e-aeb0-4d51-b54a-54595d8c20ec@ea3c46a5-bccf-489a-a1b8-e3871b08e7c0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Logout/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;client-id=NO_AUTH&amp;client-version=1DS-Web-JS-4.3.6&amp;apikey=d634483c08244c1ca09af2b2d952c92e-ab2bba03-2ba3-49d8-a82c-ef6da750d8ab-7725&amp;upload-time=1752812985856&amp;w=0&amp;NoResponseBody=true-132" enabled="true">
              <stringProp name="HTTPSampler.domain">browser.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;client-id=NO_AUTH&amp;client-version=1DS-Web-JS-4.3.6&amp;apikey=d634483c08244c1ca09af2b2d952c92e-ab2bba03-2ba3-49d8-a82c-ef6da750d8ab-7725&amp;upload-time=1752812985856&amp;w=0&amp;NoResponseBody=true</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;name&quot;:&quot;acquireTokenSilent&quot;,&quot;time&quot;:&quot;2025-07-18T04:29:45.855Z&quot;,&quot;ver&quot;:&quot;4.0&quot;,&quot;iKey&quot;:&quot;o:d634483c08244c1ca09af2b2d952c92e&quot;,&quot;ext&quot;:{&quot;sdk&quot;:{&quot;ver&quot;:&quot;1DS-Web-JS-4.3.6&quot;,&quot;seq&quot;:9,&quot;epoch&quot;:&quot;2401622023&quot;},&quot;app&quot;:{&quot;sesId&quot;:&quot;K+hZa2651drgKGS52flIgx&quot;},&quot;user&quot;:{&quot;locale&quot;:&quot;en-US&quot;},&quot;web&quot;:{&quot;domain&quot;:&quot;outlook.office.com&quot;,&quot;screenRes&quot;:&quot;1280X720&quot;,&quot;userConsent&quot;:false,&quot;consentDetails&quot;:&quot;{\&quot;GPC_DataSharingOptIn\&quot;:false}&quot;},&quot;intweb&quot;:{},&quot;utc&quot;:{&quot;popSample&quot;:100},&quot;loc&quot;:{&quot;tz&quot;:&quot;+05:30&quot;},&quot;metadata&quot;:{&quot;f&quot;:{&quot;status&quot;:{&quot;t&quot;:6},&quot;startTimeMs&quot;:{&quot;t&quot;:6},&quot;cacheLookupPolicy&quot;:{&quot;t&quot;:6},&quot;acquireTokenSilentAsyncCallCount&quot;:{&quot;t&quot;:6},&quot;visibilityChangeCount&quot;:{&quot;t&quot;:6},&quot;initializeSilentRequestCallCount&quot;:{&quot;t&quot;:6},&quot;initializeBaseRequestCallCount&quot;:{&quot;t&quot;:6},&quot;initializeBaseRequestDurationMs&quot;:{&quot;t&quot;:6},&quot;initializeSilentRequestDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenFromCacheCallCount&quot;:{&quot;t&quot;:6},&quot;silentCacheClientAcquireTokenCallCount&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetClientConfigurationCallCount&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetDiscoveredAuthorityCallCount&quot;:{&quot;t&quot;:6},&quot;authorityFactoryCreateDiscoveredInstanceCallCount&quot;:{&quot;t&quot;:6},&quot;authorityResolveEndpointsAsyncCallCount&quot;:{&quot;t&quot;:6},&quot;authorityUpdateCloudDiscoveryMetadataCallCount&quot;:{&quot;t&quot;:6},&quot;authorityUpdateCloudDiscoveryMetadataDurationMs&quot;:{&quot;t&quot;:6},&quot;authorityUpdateEndpointMetadataCallCount&quot;:{&quot;t&quot;:6},&quot;authorityUpdateEndpointMetadataDurationMs&quot;:{&quot;t&quot;:6},&quot;authorityResolveEndpointsAsyncDurationMs&quot;:{&quot;t&quot;:6},&quot;authorityFactoryCreateDiscoveredInstanceDurationMs&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetDiscoveredAuthorityDurationMs&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetClientConfigurationDurationMs&quot;:{&quot;t&quot;:6},&quot;silentFlowClientAcquireCachedTokenCallCount&quot;:{&quot;t&quot;:6},&quot;silentFlowClientAcquireCachedTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;silentCacheClientAcquireTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenFromCacheDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenByRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;silentRefreshClientAcquireTokenCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenByRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;cacheManagerGetRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;cacheManagerGetRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecuteTokenRequestCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientCreateTokenRequestBodyCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientCreateTokenRequestBodyDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecutePostToTokenEndpointCallCount&quot;:{&quot;t&quot;:6},&quot;networkClientSendPostRequestAsyncCallCount&quot;:{&quot;t&quot;:6},&quot;networkClientSendPostRequestAsyncDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenSize&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecutePostToTokenEndpointDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecuteTokenRequestDurationMs&quot;:{&quot;t&quot;:6},&quot;handleServerTokenResponseCallCount&quot;:{&quot;t&quot;:6},&quot;encryptCallCount&quot;:{&quot;t&quot;:6},&quot;encryptDurationMs&quot;:{&quot;t&quot;:6},&quot;handleServerTokenResponseDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenByRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;silentRefreshClientAcquireTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenByRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenSilentAsyncDurationMs&quot;:{&quot;t&quot;:6},&quot;accessTokenSize&quot;:{&quot;t&quot;:6},&quot;idTokenSize&quot;:{&quot;t&quot;:6},&quot;durationMs&quot;:{&quot;t&quot;:6},&quot;queuedTimeMs&quot;:{&quot;t&quot;:6},&quot;queuedCount&quot;:{&quot;t&quot;:6},&quot;queuedManuallyCompletedCount&quot;:{&quot;t&quot;:6},&quot;incompleteSubsCount&quot;:{&quot;t&quot;:6}}}},&quot;data&quot;:{&quot;baseData&quot;:{&quot;properties&quot;:{&quot;version&quot;:&quot;PostChannel=4.3.6;SystemPropertiesCollector=4.3.6&quot;}},&quot;eventId&quot;:&quot;01981bcb-9c81-73d2-8325-a3a8d4536159&quot;,&quot;status&quot;:2,&quot;authority&quot;:&quot;${scheme}://login.microsoftonline.com/common/&quot;,&quot;libraryName&quot;:&quot;@azure/msal-browser&quot;,&quot;libraryVersion&quot;:&quot;4.12.0&quot;,&quot;clientId&quot;:&quot;9199bf20-a13f-4107-85dc-02114787ef48&quot;,&quot;name&quot;:&quot;acquireTokenSilent&quot;,&quot;startTimeMs&quot;:1752812985473,&quot;correlationId&quot;:&quot;3d7a361a-9a61-17ed-f113-69757dbd6290&quot;,&quot;appName&quot;:&quot;OWA&quot;,&quot;appVersion&quot;:&quot;20250704003.08&quot;,&quot;cacheLookupPolicy&quot;:0,&quot;accountType&quot;:&quot;AAD&quot;,&quot;deduped&quot;:false,&quot;acquireTokenSilentAsyncCallCount&quot;:1,&quot;visibilityChangeCount&quot;:0,&quot;initializeSilentRequestCallCount&quot;:1,&quot;initializeBaseRequestCallCount&quot;:2,&quot;initializeBaseRequestDurationMs&quot;:0,&quot;initializeSilentRequestDurationMs&quot;:0,&quot;acquireTokenFromCacheCallCount&quot;:1,&quot;silentCacheClientAcquireTokenCallCount&quot;:1,&quot;standardInteractionClientGetClientConfigurationCallCount&quot;:2,&quot;standardInteractionClientGetDiscoveredAuthorityCallCount&quot;:2,&quot;authorityFactoryCreateDiscoveredInstanceCallCount&quot;:2,&quot;authorityResolveEndpointsAsyncCallCount&quot;:2,&quot;authorityUpdateCloudDiscoveryMetadataCallCount&quot;:2,&quot;authorityUpdateCloudDiscoveryMetadataDurationMs&quot;:0,&quot;authorityUpdateEndpointMetadataCallCount&quot;:2,&quot;authorityUpdateEndpointMetadataDurationMs&quot;:0,&quot;cloudDiscoverySource&quot;:&quot;hardcoded_values&quot;,&quot;authorityEndpointSource&quot;:&quot;hardcoded_values&quot;,&quot;authorityResolveEndpointsAsyncDurationMs&quot;:0,&quot;authorityFactoryCreateDiscoveredInstanceDurationMs&quot;:0,&quot;standardInteractionClientGetDiscoveredAuthorityDurationMs&quot;:0,&quot;standardInteractionClientGetClientConfigurationDurationMs&quot;:1,&quot;silentFlowClientAcquireCachedTokenCallCount&quot;:1,&quot;cacheOutcome&quot;:&quot;2&quot;,&quot;silentFlowClientAcquireCachedTokenDurationMs&quot;:1,&quot;silentCacheClientAcquireTokenDurationMs&quot;:4,&quot;acquireTokenFromCacheDurationMs&quot;:4,&quot;acquireTokenByRefreshTokenCallCount&quot;:1,&quot;silentRefreshClientAcquireTokenCallCount&quot;:1,&quot;refreshTokenClientAcquireTokenByRefreshTokenCallCount&quot;:1,&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenCallCount&quot;:1,&quot;cacheManagerGetRefreshTokenCallCount&quot;:1,&quot;cacheManagerGetRefreshTokenDurationMs&quot;:0,&quot;refreshTokenClientAcquireTokenCallCount&quot;:1,&quot;refreshTokenClientExecuteTokenRequestCallCount&quot;:1,&quot;refreshTokenClientCreateTokenRequestBodyCallCount&quot;:1,&quot;refreshTokenClientCreateTokenRequestBodyDurationMs&quot;:0,&quot;refreshTokenClientExecutePostToTokenEndpointCallCount&quot;:1,&quot;networkClientSendPostRequestAsyncCallCount&quot;:1,&quot;networkClientSendPostRequestAsyncDurationMs&quot;:370,&quot;refreshTokenSize&quot;:1108,&quot;requestId&quot;:&quot;e3e59d65-fd65-4077-a080-16bd9a752500&quot;,&quot;refreshTokenClientExecutePostToTokenEndpointDurationMs&quot;:370,&quot;refreshTokenClientExecuteTokenRequestDurationMs&quot;:370,&quot;handleServerTokenResponseCallCount&quot;:1,&quot;encryptCallCount&quot;:4,&quot;encryptDurationMs&quot;:0,&quot;handleServerTokenResponseDurationMs&quot;:5,&quot;refreshTokenClientAcquireTokenDurationMs&quot;:376,&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenDurationMs&quot;:376,&quot;refreshTokenClientAcquireTokenByRefreshTokenDurationMs&quot;:376,&quot;silentRefreshClientAcquireTokenDurationMs&quot;:377,&quot;acquireTokenByRefreshTokenDurationMs&quot;:378,&quot;fromCache&quot;:false,&quot;isNativeBroker&quot;:false,&quot;acquireTokenSilentAsyncDurationMs&quot;:382,&quot;success&quot;:true,&quot;accessTokenSize&quot;:2284,&quot;idTokenSize&quot;:1816,&quot;startPageVisibility&quot;:&quot;hidden&quot;,&quot;endPageVisibility&quot;:&quot;hidden&quot;,&quot;durationMs&quot;:382,&quot;queuedTimeMs&quot;:0,&quot;queuedCount&quot;:32,&quot;queuedManuallyCompletedCount&quot;:5,&quot;incompleteSubsCount&quot;:0,&quot;synthetic&quot;:false,&quot;profileTelemetryId&quot;:&quot;019816fe-1b5c-7fd6-b8fb-13cdfb63bfa5&quot;,&quot;sessionId&quot;:&quot;01981bb3-a1ac-761c-942f-f02e6408b994&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Logout/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;client-id=NO_AUTH&amp;client-version=1DS-Web-JS-4.3.6&amp;apikey=d634483c08244c1ca09af2b2d952c92e-ab2bba03-2ba3-49d8-a82c-ef6da750d8ab-7725&amp;upload-time=1752812985901&amp;w=0&amp;NoResponseBody=true-133" enabled="true">
              <stringProp name="HTTPSampler.domain">browser.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;client-id=NO_AUTH&amp;client-version=1DS-Web-JS-4.3.6&amp;apikey=d634483c08244c1ca09af2b2d952c92e-ab2bba03-2ba3-49d8-a82c-ef6da750d8ab-7725&amp;upload-time=1752812985901&amp;w=0&amp;NoResponseBody=true</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;name&quot;:&quot;acquireTokenSilent&quot;,&quot;time&quot;:&quot;2025-07-18T04:29:45.898Z&quot;,&quot;ver&quot;:&quot;4.0&quot;,&quot;iKey&quot;:&quot;o:d634483c08244c1ca09af2b2d952c92e&quot;,&quot;ext&quot;:{&quot;sdk&quot;:{&quot;ver&quot;:&quot;1DS-Web-JS-4.3.6&quot;,&quot;seq&quot;:10,&quot;epoch&quot;:&quot;2401622023&quot;},&quot;app&quot;:{&quot;sesId&quot;:&quot;K+hZa2651drgKGS52flIgx&quot;},&quot;user&quot;:{&quot;locale&quot;:&quot;en-US&quot;},&quot;web&quot;:{&quot;domain&quot;:&quot;outlook.office.com&quot;,&quot;screenRes&quot;:&quot;1280X720&quot;,&quot;userConsent&quot;:false,&quot;consentDetails&quot;:&quot;{\&quot;GPC_DataSharingOptIn\&quot;:false}&quot;},&quot;intweb&quot;:{},&quot;utc&quot;:{&quot;popSample&quot;:100},&quot;loc&quot;:{&quot;tz&quot;:&quot;+05:30&quot;},&quot;metadata&quot;:{&quot;f&quot;:{&quot;status&quot;:{&quot;t&quot;:6},&quot;startTimeMs&quot;:{&quot;t&quot;:6},&quot;cacheLookupPolicy&quot;:{&quot;t&quot;:6},&quot;acquireTokenSilentAsyncCallCount&quot;:{&quot;t&quot;:6},&quot;visibilityChangeCount&quot;:{&quot;t&quot;:6},&quot;initializeSilentRequestCallCount&quot;:{&quot;t&quot;:6},&quot;initializeBaseRequestCallCount&quot;:{&quot;t&quot;:6},&quot;initializeBaseRequestDurationMs&quot;:{&quot;t&quot;:6},&quot;initializeSilentRequestDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenFromCacheCallCount&quot;:{&quot;t&quot;:6},&quot;silentCacheClientAcquireTokenCallCount&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetClientConfigurationCallCount&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetDiscoveredAuthorityCallCount&quot;:{&quot;t&quot;:6},&quot;authorityFactoryCreateDiscoveredInstanceCallCount&quot;:{&quot;t&quot;:6},&quot;authorityResolveEndpointsAsyncCallCount&quot;:{&quot;t&quot;:6},&quot;authorityUpdateCloudDiscoveryMetadataCallCount&quot;:{&quot;t&quot;:6},&quot;authorityUpdateCloudDiscoveryMetadataDurationMs&quot;:{&quot;t&quot;:6},&quot;authorityUpdateEndpointMetadataCallCount&quot;:{&quot;t&quot;:6},&quot;authorityUpdateEndpointMetadataDurationMs&quot;:{&quot;t&quot;:6},&quot;authorityResolveEndpointsAsyncDurationMs&quot;:{&quot;t&quot;:6},&quot;authorityFactoryCreateDiscoveredInstanceDurationMs&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetDiscoveredAuthorityDurationMs&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetClientConfigurationDurationMs&quot;:{&quot;t&quot;:6},&quot;silentFlowClientAcquireCachedTokenCallCount&quot;:{&quot;t&quot;:6},&quot;silentFlowClientAcquireCachedTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;silentCacheClientAcquireTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenFromCacheDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenByRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;silentRefreshClientAcquireTokenCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenByRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;cacheManagerGetRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;cacheManagerGetRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecuteTokenRequestCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientCreateTokenRequestBodyCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientCreateTokenRequestBodyDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecutePostToTokenEndpointCallCount&quot;:{&quot;t&quot;:6},&quot;networkClientSendPostRequestAsyncCallCount&quot;:{&quot;t&quot;:6},&quot;networkClientSendPostRequestAsyncDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenSize&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecutePostToTokenEndpointDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecuteTokenRequestDurationMs&quot;:{&quot;t&quot;:6},&quot;handleServerTokenResponseCallCount&quot;:{&quot;t&quot;:6},&quot;encryptCallCount&quot;:{&quot;t&quot;:6},&quot;encryptDurationMs&quot;:{&quot;t&quot;:6},&quot;handleServerTokenResponseDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenByRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;silentRefreshClientAcquireTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenByRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenSilentAsyncDurationMs&quot;:{&quot;t&quot;:6},&quot;accessTokenSize&quot;:{&quot;t&quot;:6},&quot;idTokenSize&quot;:{&quot;t&quot;:6},&quot;durationMs&quot;:{&quot;t&quot;:6},&quot;queuedTimeMs&quot;:{&quot;t&quot;:6},&quot;queuedCount&quot;:{&quot;t&quot;:6},&quot;queuedManuallyCompletedCount&quot;:{&quot;t&quot;:6},&quot;incompleteSubsCount&quot;:{&quot;t&quot;:6}}}},&quot;data&quot;:{&quot;baseData&quot;:{&quot;properties&quot;:{&quot;version&quot;:&quot;PostChannel=4.3.6;SystemPropertiesCollector=4.3.6&quot;}},&quot;eventId&quot;:&quot;01981bcb-9c8c-72ee-8d2c-d8ecb63ace00&quot;,&quot;status&quot;:2,&quot;authority&quot;:&quot;${scheme}://login.microsoftonline.com/common/&quot;,&quot;libraryName&quot;:&quot;@azure/msal-browser&quot;,&quot;libraryVersion&quot;:&quot;4.12.0&quot;,&quot;clientId&quot;:&quot;9199bf20-a13f-4107-85dc-02114787ef48&quot;,&quot;name&quot;:&quot;acquireTokenSilent&quot;,&quot;startTimeMs&quot;:1752812985484,&quot;correlationId&quot;:&quot;b10151ca-94e1-6f63-f123-8b5e293af6af&quot;,&quot;appName&quot;:&quot;OWA&quot;,&quot;appVersion&quot;:&quot;20250704003.08&quot;,&quot;cacheLookupPolicy&quot;:0,&quot;accountType&quot;:&quot;AAD&quot;,&quot;deduped&quot;:false,&quot;acquireTokenSilentAsyncCallCount&quot;:1,&quot;visibilityChangeCount&quot;:0,&quot;initializeSilentRequestCallCount&quot;:1,&quot;initializeBaseRequestCallCount&quot;:2,&quot;initializeBaseRequestDurationMs&quot;:0,&quot;initializeSilentRequestDurationMs&quot;:0,&quot;acquireTokenFromCacheCallCount&quot;:1,&quot;silentCacheClientAcquireTokenCallCount&quot;:1,&quot;standardInteractionClientGetClientConfigurationCallCount&quot;:2,&quot;standardInteractionClientGetDiscoveredAuthorityCallCount&quot;:2,&quot;authorityFactoryCreateDiscoveredInstanceCallCount&quot;:2,&quot;authorityResolveEndpointsAsyncCallCount&quot;:2,&quot;authorityUpdateCloudDiscoveryMetadataCallCount&quot;:2,&quot;authorityUpdateCloudDiscoveryMetadataDurationMs&quot;:0,&quot;authorityUpdateEndpointMetadataCallCount&quot;:2,&quot;authorityUpdateEndpointMetadataDurationMs&quot;:0,&quot;cloudDiscoverySource&quot;:&quot;hardcoded_values&quot;,&quot;authorityEndpointSource&quot;:&quot;hardcoded_values&quot;,&quot;authorityResolveEndpointsAsyncDurationMs&quot;:0,&quot;authorityFactoryCreateDiscoveredInstanceDurationMs&quot;:0,&quot;standardInteractionClientGetDiscoveredAuthorityDurationMs&quot;:0,&quot;standardInteractionClientGetClientConfigurationDurationMs&quot;:0,&quot;silentFlowClientAcquireCachedTokenCallCount&quot;:1,&quot;cacheOutcome&quot;:&quot;2&quot;,&quot;silentFlowClientAcquireCachedTokenDurationMs&quot;:0,&quot;silentCacheClientAcquireTokenDurationMs&quot;:1,&quot;acquireTokenFromCacheDurationMs&quot;:3,&quot;acquireTokenByRefreshTokenCallCount&quot;:1,&quot;silentRefreshClientAcquireTokenCallCount&quot;:1,&quot;refreshTokenClientAcquireTokenByRefreshTokenCallCount&quot;:1,&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenCallCount&quot;:1,&quot;cacheManagerGetRefreshTokenCallCount&quot;:1,&quot;cacheManagerGetRefreshTokenDurationMs&quot;:0,&quot;refreshTokenClientAcquireTokenCallCount&quot;:1,&quot;refreshTokenClientExecuteTokenRequestCallCount&quot;:1,&quot;refreshTokenClientCreateTokenRequestBodyCallCount&quot;:1,&quot;refreshTokenClientCreateTokenRequestBodyDurationMs&quot;:0,&quot;refreshTokenClientExecutePostToTokenEndpointCallCount&quot;:1,&quot;networkClientSendPostRequestAsyncCallCount&quot;:1,&quot;networkClientSendPostRequestAsyncDurationMs&quot;:402,&quot;refreshTokenSize&quot;:1103,&quot;requestId&quot;:&quot;c08adb8f-c3bd-4329-b1b1-152cfb601e00&quot;,&quot;refreshTokenClientExecutePostToTokenEndpointDurationMs&quot;:402,&quot;refreshTokenClientExecuteTokenRequestDurationMs&quot;:403,&quot;handleServerTokenResponseCallCount&quot;:1,&quot;encryptCallCount&quot;:4,&quot;encryptDurationMs&quot;:1,&quot;handleServerTokenResponseDurationMs&quot;:6,&quot;refreshTokenClientAcquireTokenDurationMs&quot;:409,&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenDurationMs&quot;:410,&quot;refreshTokenClientAcquireTokenByRefreshTokenDurationMs&quot;:410,&quot;silentRefreshClientAcquireTokenDurationMs&quot;:411,&quot;acquireTokenByRefreshTokenDurationMs&quot;:411,&quot;fromCache&quot;:false,&quot;isNativeBroker&quot;:false,&quot;acquireTokenSilentAsyncDurationMs&quot;:414,&quot;success&quot;:true,&quot;accessTokenSize&quot;:2874,&quot;idTokenSize&quot;:1816,&quot;startPageVisibility&quot;:&quot;hidden&quot;,&quot;endPageVisibility&quot;:&quot;hidden&quot;,&quot;durationMs&quot;:414,&quot;queuedTimeMs&quot;:0,&quot;queuedCount&quot;:32,&quot;queuedManuallyCompletedCount&quot;:5,&quot;incompleteSubsCount&quot;:0,&quot;synthetic&quot;:false,&quot;profileTelemetryId&quot;:&quot;019816fe-1b5c-7fd6-b8fb-13cdfb63bfa5&quot;,&quot;sessionId&quot;:&quot;01981bb3-a1ac-761c-942f-f02e6408b994&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Logout/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;client-id=NO_AUTH&amp;client-version=1DS-Web-JS-4.3.6&amp;apikey=d634483c08244c1ca09af2b2d952c92e-ab2bba03-2ba3-49d8-a82c-ef6da750d8ab-7725&amp;upload-time=1752812985968&amp;w=0&amp;NoResponseBody=true-134" enabled="true">
              <stringProp name="HTTPSampler.domain">browser.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;client-id=NO_AUTH&amp;client-version=1DS-Web-JS-4.3.6&amp;apikey=d634483c08244c1ca09af2b2d952c92e-ab2bba03-2ba3-49d8-a82c-ef6da750d8ab-7725&amp;upload-time=1752812985968&amp;w=0&amp;NoResponseBody=true</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;name&quot;:&quot;acquireTokenSilent&quot;,&quot;time&quot;:&quot;2025-07-18T04:29:45.967Z&quot;,&quot;ver&quot;:&quot;4.0&quot;,&quot;iKey&quot;:&quot;o:d634483c08244c1ca09af2b2d952c92e&quot;,&quot;ext&quot;:{&quot;sdk&quot;:{&quot;ver&quot;:&quot;1DS-Web-JS-4.3.6&quot;,&quot;seq&quot;:11,&quot;epoch&quot;:&quot;2401622023&quot;},&quot;app&quot;:{&quot;sesId&quot;:&quot;K+hZa2651drgKGS52flIgx&quot;},&quot;user&quot;:{&quot;locale&quot;:&quot;en-US&quot;},&quot;web&quot;:{&quot;domain&quot;:&quot;outlook.office.com&quot;,&quot;screenRes&quot;:&quot;1280X720&quot;,&quot;userConsent&quot;:false,&quot;consentDetails&quot;:&quot;{\&quot;GPC_DataSharingOptIn\&quot;:false}&quot;},&quot;intweb&quot;:{},&quot;utc&quot;:{&quot;popSample&quot;:100},&quot;loc&quot;:{&quot;tz&quot;:&quot;+05:30&quot;},&quot;metadata&quot;:{&quot;f&quot;:{&quot;status&quot;:{&quot;t&quot;:6},&quot;startTimeMs&quot;:{&quot;t&quot;:6},&quot;cacheLookupPolicy&quot;:{&quot;t&quot;:6},&quot;acquireTokenSilentAsyncCallCount&quot;:{&quot;t&quot;:6},&quot;visibilityChangeCount&quot;:{&quot;t&quot;:6},&quot;initializeSilentRequestCallCount&quot;:{&quot;t&quot;:6},&quot;initializeBaseRequestCallCount&quot;:{&quot;t&quot;:6},&quot;initializeBaseRequestDurationMs&quot;:{&quot;t&quot;:6},&quot;initializeSilentRequestDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenFromCacheCallCount&quot;:{&quot;t&quot;:6},&quot;silentCacheClientAcquireTokenCallCount&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetClientConfigurationCallCount&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetDiscoveredAuthorityCallCount&quot;:{&quot;t&quot;:6},&quot;authorityFactoryCreateDiscoveredInstanceCallCount&quot;:{&quot;t&quot;:6},&quot;authorityResolveEndpointsAsyncCallCount&quot;:{&quot;t&quot;:6},&quot;authorityUpdateCloudDiscoveryMetadataCallCount&quot;:{&quot;t&quot;:6},&quot;authorityUpdateCloudDiscoveryMetadataDurationMs&quot;:{&quot;t&quot;:6},&quot;authorityUpdateEndpointMetadataCallCount&quot;:{&quot;t&quot;:6},&quot;authorityUpdateEndpointMetadataDurationMs&quot;:{&quot;t&quot;:6},&quot;authorityResolveEndpointsAsyncDurationMs&quot;:{&quot;t&quot;:6},&quot;authorityFactoryCreateDiscoveredInstanceDurationMs&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetDiscoveredAuthorityDurationMs&quot;:{&quot;t&quot;:6},&quot;standardInteractionClientGetClientConfigurationDurationMs&quot;:{&quot;t&quot;:6},&quot;silentFlowClientAcquireCachedTokenCallCount&quot;:{&quot;t&quot;:6},&quot;silentFlowClientAcquireCachedTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;silentCacheClientAcquireTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenFromCacheDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenByRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;silentRefreshClientAcquireTokenCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenByRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;cacheManagerGetRefreshTokenCallCount&quot;:{&quot;t&quot;:6},&quot;cacheManagerGetRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecuteTokenRequestCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientCreateTokenRequestBodyCallCount&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientCreateTokenRequestBodyDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecutePostToTokenEndpointCallCount&quot;:{&quot;t&quot;:6},&quot;networkClientSendPostRequestAsyncCallCount&quot;:{&quot;t&quot;:6},&quot;networkClientSendPostRequestAsyncDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenSize&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecutePostToTokenEndpointDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientExecuteTokenRequestDurationMs&quot;:{&quot;t&quot;:6},&quot;handleServerTokenResponseCallCount&quot;:{&quot;t&quot;:6},&quot;encryptCallCount&quot;:{&quot;t&quot;:6},&quot;encryptDurationMs&quot;:{&quot;t&quot;:6},&quot;handleServerTokenResponseDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;refreshTokenClientAcquireTokenByRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;silentRefreshClientAcquireTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenByRefreshTokenDurationMs&quot;:{&quot;t&quot;:6},&quot;acquireTokenSilentAsyncDurationMs&quot;:{&quot;t&quot;:6},&quot;accessTokenSize&quot;:{&quot;t&quot;:6},&quot;idTokenSize&quot;:{&quot;t&quot;:6},&quot;durationMs&quot;:{&quot;t&quot;:6},&quot;queuedTimeMs&quot;:{&quot;t&quot;:6},&quot;queuedCount&quot;:{&quot;t&quot;:6},&quot;queuedManuallyCompletedCount&quot;:{&quot;t&quot;:6},&quot;incompleteSubsCount&quot;:{&quot;t&quot;:6}}}},&quot;data&quot;:{&quot;baseData&quot;:{&quot;properties&quot;:{&quot;version&quot;:&quot;PostChannel=4.3.6;SystemPropertiesCollector=4.3.6&quot;}},&quot;eventId&quot;:&quot;01981bcb-9c88-7a9b-bff3-e4696b63f6ca&quot;,&quot;status&quot;:2,&quot;authority&quot;:&quot;${scheme}://login.microsoftonline.com/common/&quot;,&quot;libraryName&quot;:&quot;@azure/msal-browser&quot;,&quot;libraryVersion&quot;:&quot;4.12.0&quot;,&quot;clientId&quot;:&quot;9199bf20-a13f-4107-85dc-02114787ef48&quot;,&quot;name&quot;:&quot;acquireTokenSilent&quot;,&quot;startTimeMs&quot;:1752812985480,&quot;correlationId&quot;:&quot;0d62588e-61eb-efd3-b6b2-9a8340f89270&quot;,&quot;appName&quot;:&quot;OWA&quot;,&quot;appVersion&quot;:&quot;20250704003.08&quot;,&quot;cacheLookupPolicy&quot;:0,&quot;accountType&quot;:&quot;AAD&quot;,&quot;deduped&quot;:false,&quot;acquireTokenSilentAsyncCallCount&quot;:1,&quot;visibilityChangeCount&quot;:0,&quot;initializeSilentRequestCallCount&quot;:1,&quot;initializeBaseRequestCallCount&quot;:2,&quot;initializeBaseRequestDurationMs&quot;:0,&quot;initializeSilentRequestDurationMs&quot;:0,&quot;acquireTokenFromCacheCallCount&quot;:1,&quot;silentCacheClientAcquireTokenCallCount&quot;:1,&quot;standardInteractionClientGetClientConfigurationCallCount&quot;:2,&quot;standardInteractionClientGetDiscoveredAuthorityCallCount&quot;:2,&quot;authorityFactoryCreateDiscoveredInstanceCallCount&quot;:2,&quot;authorityResolveEndpointsAsyncCallCount&quot;:2,&quot;authorityUpdateCloudDiscoveryMetadataCallCount&quot;:2,&quot;authorityUpdateCloudDiscoveryMetadataDurationMs&quot;:0,&quot;authorityUpdateEndpointMetadataCallCount&quot;:2,&quot;authorityUpdateEndpointMetadataDurationMs&quot;:0,&quot;cloudDiscoverySource&quot;:&quot;hardcoded_values&quot;,&quot;authorityEndpointSource&quot;:&quot;hardcoded_values&quot;,&quot;authorityResolveEndpointsAsyncDurationMs&quot;:0,&quot;authorityFactoryCreateDiscoveredInstanceDurationMs&quot;:0,&quot;standardInteractionClientGetDiscoveredAuthorityDurationMs&quot;:1,&quot;standardInteractionClientGetClientConfigurationDurationMs&quot;:1,&quot;silentFlowClientAcquireCachedTokenCallCount&quot;:1,&quot;cacheOutcome&quot;:&quot;2&quot;,&quot;silentFlowClientAcquireCachedTokenDurationMs&quot;:0,&quot;silentCacheClientAcquireTokenDurationMs&quot;:1,&quot;acquireTokenFromCacheDurationMs&quot;:1,&quot;acquireTokenByRefreshTokenCallCount&quot;:1,&quot;silentRefreshClientAcquireTokenCallCount&quot;:1,&quot;refreshTokenClientAcquireTokenByRefreshTokenCallCount&quot;:1,&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenCallCount&quot;:1,&quot;cacheManagerGetRefreshTokenCallCount&quot;:1,&quot;cacheManagerGetRefreshTokenDurationMs&quot;:0,&quot;refreshTokenClientAcquireTokenCallCount&quot;:1,&quot;refreshTokenClientExecuteTokenRequestCallCount&quot;:1,&quot;refreshTokenClientCreateTokenRequestBodyCallCount&quot;:1,&quot;refreshTokenClientCreateTokenRequestBodyDurationMs&quot;:0,&quot;refreshTokenClientExecutePostToTokenEndpointCallCount&quot;:1,&quot;networkClientSendPostRequestAsyncCallCount&quot;:1,&quot;networkClientSendPostRequestAsyncDurationMs&quot;:475,&quot;refreshTokenSize&quot;:1103,&quot;requestId&quot;:&quot;6e44dfcf-4963-4c2a-b421-64a12ef52d00&quot;,&quot;refreshTokenClientExecutePostToTokenEndpointDurationMs&quot;:476,&quot;refreshTokenClientExecuteTokenRequestDurationMs&quot;:476,&quot;handleServerTokenResponseCallCount&quot;:1,&quot;encryptCallCount&quot;:4,&quot;encryptDurationMs&quot;:1,&quot;handleServerTokenResponseDurationMs&quot;:7,&quot;refreshTokenClientAcquireTokenDurationMs&quot;:483,&quot;refreshTokenClientAcquireTokenWithCachedRefreshTokenDurationMs&quot;:484,&quot;refreshTokenClientAcquireTokenByRefreshTokenDurationMs&quot;:484,&quot;silentRefreshClientAcquireTokenDurationMs&quot;:485,&quot;acquireTokenByRefreshTokenDurationMs&quot;:485,&quot;fromCache&quot;:false,&quot;isNativeBroker&quot;:false,&quot;acquireTokenSilentAsyncDurationMs&quot;:487,&quot;success&quot;:true,&quot;accessTokenSize&quot;:2288,&quot;idTokenSize&quot;:1816,&quot;startPageVisibility&quot;:&quot;hidden&quot;,&quot;endPageVisibility&quot;:&quot;hidden&quot;,&quot;durationMs&quot;:487,&quot;queuedTimeMs&quot;:0,&quot;queuedCount&quot;:32,&quot;queuedManuallyCompletedCount&quot;:5,&quot;incompleteSubsCount&quot;:0,&quot;synthetic&quot;:false,&quot;profileTelemetryId&quot;:&quot;019816fe-1b5c-7fd6-b8fb-13cdfb63bfa5&quot;,&quot;sessionId&quot;:&quot;01981bb3-a1ac-761c-942f-f02e6408b994&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Storage-Access" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Storage-Access</stringProp>
                    <stringProp name="Header.value">active</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://outlook.office.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Logout/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;content-encoding=gzip-135" enabled="true">
              <stringProp name="HTTPSampler.domain">teams.events.data.microsoft.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/OneCollector/1.0/?cors=true&amp;content-type=application/x-json-stream&amp;content-encoding=gzip</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x3;�;�r�8����Sw��&#x0;$�)�&#xf;��$N,�#�I&apos;��&#xb;&quot;!��\�$e�I���&#x1c;���%�}�Nխ&lt;D&lt;88�&#x6;&#x12;�1�y$&#x6;��F�4_&#xd;
����p�&#x7;&#x12;�&#x13;�Ԉ�QgA�H�F�3ԩ�&#x19;0nD&#xd;
&#x8;lH�w�^��C2Zz�Ktߡ��b�0� ��	q]�]q�&#x1;\�-&#x1f;�~&#xc;2�&#x1a;�ST��\�(�ڻ�Ɔ��&#x2;Z&amp;�&#x1c;�LF`�6�6��&amp;�m����p��[IFd&apos;&gt;,���:#�fy��1ӥڒ[�fz+�_�&#x6;7��m�&#xc;&#x19;�&#x18;���C�P���&#x1c;Wn�&#x12;&#x17;�$�A&#xc;&#xb;��Q6�&#x2;/M�d�&#xf;�$&#x2;��ir+I&#xc;��&#x16;5����p�dh&#x18;&amp;&#x1d;:&#x6;*�B�3��&#x1a;�&#x1d;-���I��&#x18;���a&amp;�u�!��&#xf;&#x1f;��&#x7;���)&#x1;��%�D)�8W��.�����vΣ-jC	&#x1;8���;��&#x7;1G&#x6;&#x19;�&#x3;��9G��gbq�m�&#x1c;&#x15;&#x1;�q��M��H�@d��� A���Va&#x10;��Ǳ&#x8;&#x7f;#諗&#x17;I��&#x10;齗�#&#xd;|qQ��&#x8;w� �����.�ET/��0&#x14;^���:J1���r)��(&#x0;.���{wov&lt;����Za�^KC�b�w!�2�&#x1;�ī&#x4;�&#x7f;կn������&#xe;��H�&apos;d &#x19;���&#xd;�&amp;� &#x10;�l�	5&#x5;�8_2�R&#xf;�p!����&#xd;&#xf;B�&#xc;���.&#xb; ��&quot;JRL&#x3;�p&#x1c;���%�&quot;�y��D-&#x6;��Z�.��-�VX�q@&#x16;�E��@��mV&#x18;j�4ᨋe��7&#x17;�W&#x1f;��:��s�˨bfM&#x17;���s��r)3[H�$��|&#x1e;|���!��,��&#x1c;(%��2&#x19;���B��&#x16;}�4)qJ�3�&#x7;7b�&#x11;a�&#x16;�`.#}X}2S&#x13;Lۇܖ������&#x1e;ԡź��A�&#x13;&#x15;�qʳ͖�oy�&quot;�Z)�JU��ʎi&#x19;V&#x17;�O]�&#x10;��&quot;�Tu)��&gt;ƃZVܺ&#x1a;RF���h3&#x11;�&quot;}�T�Ӣ&#x3;�Alk&#xf;�W;�2��ò��&#xd;��}r]�m����&lt;&#xc;�q���&lt;s�&#x7;a��u�Ѭ=Sb�&#x6;�n&#x10;�ElIn8��c�/��ǭ�&#x1a;���I���?~|���O&apos;����َs�E6&#x1c;x�2�2lf�Wn&#x2;q�&#xf;�7&#x0;�z&#xe;US�&#x17;&#x14;%p�~�w�E��A��k1���I��\=�Ez&#x13;x�������_D&#x16;t�&#xf;�&#x8;�b��uo�&#x1b;�y�X&#x4;R &#x2;��J=���W&#x0;���&#x1e;�&quot;&#x1d;SW&#x8;�e&#xc;�U&amp;VPb���a�&#x4;�᰿�&#x4;|�&#x7;Ia�#�����\����Qߥ����k��S�X�(p���z��-&#x0;m�Z���ql�&apos;&#x2;&#x1c;���_[M��Ӷk�V�a���e�lg��Z&#x19;�&#x15;ƥ&#x1d;��&#x1d;�����9]u���:Nn�f�~��&#x11;���¸��:��{�ֶ�&#x1f;��m����)�g�8Lv��&gt;�&gt;������}�C&#xb;&#x11;�H��&#x1d;2&#x7;%/!Y�&#x2;Nt�!45���������ju����&gt;K��둬�hrs&#x8;��gWmh1j�&#x14;�[�= z&#x11;�=xe��K&#x7f;���G-WwH&#x1f;NK1��&#xf;(V����n�V�m�&#xf;.���A8&#xd;�8a�CH&#x1d;�&#x5;F��M�[�c��U�X�u�&#x17;k�+ߎ&lt;&#x18;!�|�&#x10;̀+��&#x4;����[��2�`M&#x1e;&#xf;�y%�#&#x1e;&#x1e;���&#xd;
�gq����*&#x10;&gt;&#x1e;�C�&#x5;Qd&#x0;�v%�\�A&#x1;&#xd;
=�6��&#xd;VD06�ɍ&#x8;֛&#x1c;��|LE��PޓXVu[&apos;[Y��m�{��}uXI&#x3;Ep&#xd;
�&#x2;��4�r�&#x3;�iކ#EX[�&amp;3�:�}i`�`�l���A�\�����hZ����H��˓8�&#x8;�&#x1c;�&#x0;n �-��ַ&#x10;	��Rȱ8ϰ�`k�&#x8;&#x1;&#x7;�=xĿ)6}Ĩ{�&#x0;&#x7f;�ޣ&#x0;�M&quot;)���/y����T�y����I�)�&#x14;+8�#wܿ&#x2;�8�h���&#x10;��M�&#x4;%(,��7�ϲ&#x1;�T���,I���&#x8;�&#x1;��#/&#xc;�OeJ��!N	�y���$Ρx`�L&#x7f;�HA&lt;*�|�dm���;U��@��&#xc;�)�0Y�c��hï8�U&lt;��J�6&#x1f;i�����&#x8;%�z�ৼ�8�(�3�B*�qScR�;J&#x7f;�Y�$��]�6$�5)J�J2�&#x1c;�69&#x11;+&#x1;�)��&#x14;&#x8;���xC���^C8�V&#x2;ni^̪_�w���X#�&#xc;6t\���|+&#x11;%n�;8ko�4&#x1f;&apos;&#x10;/�r�&#xe;�m�S(	rd�ߓ�%�&#x7f;�|T&#x1f;��Х�ߒϋ���l��m&amp;���휿[&gt;�&#x13;�[:ը�&#x1a;&#x13;d�qo�h:�,�Y��V�_��&#x1e;QsD̡���f�x���	/��&#x7;&#x14;`�ۖK��R&#x6;&#xd;
躥�+�И�\	Ӧ��&#x1b;&#x7f;Y&#x1;wd&#x18;�&#x0;j�&#xd;
���&apos;�o,=g���&#x1a;�1&#xd;
&gt;p,��t��]��&#x6;��I�,�12&#xd;�&#xe;C���)��3���&#x8;��V�&#xe;��O�HQL�x�ڡ���脹��&#x1;�N_ë�؈&#x7;�B���&quot;S-&#xc;6��d�O&#x13;�ܘ�&#x1c;&#x5;�U�&#xb;b�v��w�^����z��!WM�J�f&#x1f;ku�� #r��\6&quot;��K&#x13;��&#xc;����h;-�f�:�s�6ٞ[�n�Y�X���0�� ���8ȓ�&#x14;T�nJR�6&#x1b;���n���٤��b��އ��6|=lkU�Gxx�&#x2;^$�D�@&#x6;�a�;%.� &#x1f;S����z!��&quot;z8�&#x2;_%��$&#x12;QӸ�b�&#xb;ť=\�y��U��&#x8;OW��q݅&#x1a;$&#xc;S��j�c���a&#x11;�YJk�iL�	Y���|j&#x0;���e}�e��ns�8&#x18;th��s�B����v�~��~�vU&#xb;��3�|vSxT̺ =WʪO�J����.��JY�ⳤl�&#x3;�H�&#x7f;mm-�]+������d8���cH��&#xb;����F�&#x1f;�&#x15;/x,� B]&#x14;i�����]&quot;��LlC��܇�C�5&#x1f;+�&lt;L��&gt;�V�z��pb�w!t��I&#x1a;u�ޤ��oc�4炧��(�|&#xe;�B�&#x10;&lt;��z&#x11;�|&#x5;���[\�&#x1e;�&#x1b;߹t�ʷK�&#x5;&#x1c;����3&#x1e;�=ڇSU��JZ�3���?&#x13;&lt;Ā9�yx�&#x7;^6�E8�&#x14;A�&#x16;&#x12;C&#xc;-Аa&#x1f;��gI&#x1e;�&#x2;��0&#x17;y&#xe;&#x16;ʎ&#x3;&#x1e;&amp;�R5�_lR��)~LH[kc��Ҟo@h�C��O���g�np��&quot;��|��&#x1e;Ry�&#x4;q�A��J,�~&#x11;���y&#x18;x=�&#x11;J�JD5$�	���Ȉ]|+-�jPt�&#xc;���&#xe;A�D&#xd;�&#x6;��^&#x12;�L����c�&#xc;�WKz�wY�\���s���B�f#&#x86;��&gt;(,%#h;x-�Vu���~_���C�|��&#x1e;�i����&#x14;&apos;^�^�A&#x13;G7��3��p��e&#xd;
��&#xe;��J&#x1c;��&#x7;�&#x1c;8�~�@��&apos;qQ��&#x12;R?&lt;�+�a&#x7f;�o�K��&#x13;uP&#x7f;�a����cճ��&gt;m����mQ��U&#x10;j��&#x18;�^mȗ]����E��bJ����,h�&#xf;YW�ǅG�&gt;&#xb;U�/P&#x1b;&#x10;�&#x4;�&#x12;�Q������,]���&#x16;Rk9+._|�n�aF��sH��}����ʏA�&#x13;Y���&#x17;&gt;�&#xb;����7&#x0;&#xf;kj��&#x15;vⅺ��G��t�%��CׄGM���h\��&amp;��q&#x4;�(_�x	&#xc;�*����*&#x4;�8��&#x1b;����x&#x4;s@�&#xb;/ߥ��M^N:��z���&#x5;�&#x1d;��;m�H���|R*��sjs1��n&#x12;�:��&#x14;	�`z܈t-�Z�z��L���:�Mj&#x19;CâPim�&#xd;-���&#x5;&#x1a;��c�=�m�&#xd;�&#x1;��3ui1�=&#x1a;&#x18;RSo�&#x1;�U��&amp;�b�K�6&gt;,�&#x1f;��DE�k�6_�&gt;�1P.��F-ݱ&#xd;C&#x1b;S�&#x1d;*&#x0;ut��t�VϦmR�&quot;�Y&#x0;,�pਡ&#x19;�Ġ�8M&#xc;�0�&quot;�(&#x0;&#x6;���&#x0;I��lu&#x11;X&#x7;��&quot;�6&#x2;i?�n��i�&#x0;�&#xd;��;�m��i 0�XLo 0b�����n1�@K&#x19;�&#x0;0�@D&#x3;&#x5;�&#x6;&#x10;�&#x2;8�l�Jg&#xc;�Z�)���.&#x10;-vP&#x3;��Ћ�:1��J!��&#x1c;�hc��Hl�tZ�&#xf;D�JV�3-f5�-&#x1;f�&#x14;�!&quot;���T�n(�&#x2;&#x0;Ŗ&#x0;�l�&#x6;�&#x0;(�&#x12;�u)5+&#x1;&#x1c;S��&#xc;v�&#x15;�4&#x1e;&#x1d;�&#x10;3�^�L]BLW��&#xc;��./�v&#x6;Vq,ס�k�A�PB`.�mSs���&#x4;Y�i@&#x1c;aś�7A�đ�&#x19;��u0&#x1b;�Ev�&apos;�T| gO�.�6&apos;�&#xf;&#x2;�&#x7;	wu,�d&#x14;__�&#x4;��rvr�J��ʋ|��&#xb;{�w���P��q��K;��P���Ll��TN�&#x1d;&#x14;=&#x0;kZ-�&#x7;��=&#x15;G�|��=y&#x1b;&#x19;z�*��&#x17;�&#x0;%&#x1d;bY&#x1a;c&gt;ӸMW&#x1a;&#x3;GX�-\���J��W��.��&#xb;)�D���tSh^�&#x3;T��&amp;ry� r&#x1e;&#x17;�&#x1e;&#xb;�&#x1b;@�������B����D���&#x18;�(1�yď&lt;&#xf;�P&quot;+��K����&#x18;�&#x5;V��7�gg�{���k&#x1e;&#x5;�]&#xb;8��:��G��&#x15;ť��Lq��Uu�pB��4&gt;%&#x1e;Yr�j&#x4;�`&#x18;�uOs&#x5;��je8&#x1e;5&#xc;�1*�y��O&apos;g�&#x1f;��&#x19;&#x14;��/&gt;Jy&#x1b;l����#l�F��&#x12;�vԭ�B���&#xe;�bv~|9^\���&apos;������)zW]&#x15;T�&#x1a;����r5����U��7�aIN�О2)�N�Z&#x8;�&#x2;ԫ&#x6;e�v&#x7f;��c[CW�&#x6;k&#x1;&#x13;$&#xf;Qz8�~Nb�)n�+&#x1a;{��|�����֪qb&amp;��B�s��d��ۗ�%&apos;g��;��&#xb;/]&#x1f;gΊ�y����xu1&#x15;�&gt;����*��^�^&#x8;�ۗ&#x1;�|�dy�[X7G���~b��?&#x7f;�u���&#x74b;�gg��S&apos;ѿ��w/�&gt;M&amp;&#x13;�[�&#x1d;�A�i�&#x2;&#x6;�%�:߄Q�d\Úe���&#x13;��F_�&#xc;օ&#x0;��ƱH&#x6;�əL�[&#x1c;̏b�8�ObU ��B��0,�,D��\�#��1����� �&#x1d;�k�.&#x1d;M&#x18;�M��&#x11;���/��#�΄��&#xf;�/�&#x12;�&quot;�~FE���&#x14;w&#x1b;�$V&#x7f;S��d&#x19;��3�\i�e&#x12;z�����e&#x1e;�Ƽ��K	Rh&amp;s4��.k�a��*��1&#x1e;���^�j�)&#x14;���S�y�&lt;K�&#xf;	&#x0;�&#xd;�&#x2;��kL���|��K��&#x1f;�&#x1c;�U{�&amp;�&#x3;��&#xb;sH&#xe;~)&#x12;��lq����&#x0;&#x0;&#x16;{y&#x0;��&#x7;��P�d�&gt;�_��&#xd;�����o&#x17;��Ã0�&#x16;&#x7;o�w��z0�@k&#x11;/T&#xd;�&#x7f;&#x7;s��iPn���ƚ&#x1a;�_�u�&#x17;r�U&#x12;��_)+&apos;R�B5	�F�&#x12;Q�&#x10;�&#x1;&#xf;=s�.��i�F�����E�m��&#x4;JI�����[����dy�&#x1b;����&#x6;t�&#xf;�Æ��@c@�e1�� 0��&#x1b;�%��V�&#xc;���*�D)�&#xd;��H&apos;��(&gt;V����r����O�&#x16;�8�$)�&#x7f;�\\&#x14;9W�&#xe;�ן;1N�|?P\/)&#x1a;Q�ߛ��eU����l��&#x4;���&#x17;�gݫU6&#x0;&#x0;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="upload-time" elementType="Header">
                    <stringProp name="Header.name">upload-time</stringProp>
                    <stringProp name="Header.value">1752812988301</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-site</stringProp>
                  </elementProp>
                  <elementProp name="apikey" elementType="Header">
                    <stringProp name="Header.name">apikey</stringProp>
                    <stringProp name="Header.value">bc3902d8132f43e3ae086a009979fa88-632130b2-9455-44a6-80e2-d7457b6eb8ca-7193</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://teams.microsoft.com</stringProp>
                  </elementProp>
                  <elementProp name="client-version" elementType="Header">
                    <stringProp name="Header.name">client-version</stringProp>
                    <stringProp name="Header.value">1DS-Web-JS-4.2.1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="AuthMsaDeviceTicket" elementType="Header">
                    <stringProp name="Header.name">AuthMsaDeviceTicket</stringProp>
                    <stringProp name="Header.value">t=GwD2AbuEBAAUT8E2pcttyweiwH80omnEMQMzYo0OZgAAENLFXhlq0Add3CTxxEWaqYDAAVf4Ge/DhSuUkQv/xVSh/PPeGFDFAd6plqIpbf9EmNu3w1oHSdfyKcDVy4SamKQ0ZSCr37+5nV+51r74Gzrmquv9ryd9TDhRpTv1P9a4hjssJ4TZZpD53PjSzKb2Phvc33byOeSifiIH7qI93CZm/HjffAwwGdetIJWkIyOCNrAjTSdCeGlYeOUz06kZ5ZZyBgbick2Yj6Lh+ulfoattP/VvbqSSxYM0bNP/Sy5n/hgstFfL3UkwrtnjDDbTsS30mGYZ/qdUyWOzrennPKMKU/5CcTBPs+N3lVGuDgcGSVOdvaZnGfohsiqsvlkxYldn2kkPBOT4tjKXuh4WzZxMjzLWGyrGiysUScXxiQQ8BNd+LvlD6qNKjJ/tjcWpszSGoIiAdmWVgUdx4Xk2ijt/NdEWijkz/Cf+2J1dn7jLraLVPDnGAG8cPDnckDiPtlBVzz5ESMGSae73YX9dOxuG7KV4GzjbV8vej+p5QbNwMbdvnZul5jvtycvPXOGHBYAxtTLhvc3QDjrAkJTrBf1RC/15oAcNAoY2Dele62PKzYZT4p8O09uLz6CZCyjJwFOcmI7oMXlTue5b9Eut5CYrb0f4AQ==&amp;p=</stringProp>
                  </elementProp>
                  <elementProp name="time-delta-to-apply-millis" elementType="Header">
                    <stringProp name="Header.name">time-delta-to-apply-millis</stringProp>
                    <stringProp name="Header.value">69</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/x-json-stream</stringProp>
                  </elementProp>
                  <elementProp name="cache-control" elementType="Header">
                    <stringProp name="Header.name">cache-control</stringProp>
                    <stringProp name="Header.value">no-cache, no-store</stringProp>
                  </elementProp>
                  <elementProp name="Client-Id" elementType="Header">
                    <stringProp name="Header.name">Client-Id</stringProp>
                    <stringProp name="Header.value">NO_AUTH</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36 Edg/138.0.0.0 maglev/25163.3611.3774.6315/49</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="JpetStore_FishBuying-Thread Group" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">D:/TASK/JpetStore/Tenjin/JpetStore_Fish/JpetStore_Buying_Fish_Credentials.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">Pr_Username,Pr_Password</stringProp>
            <stringProp name="TestPlan.comments">PerformerBA Yethi@1221</stringProp>
          </CSVDataSet>
          <hashTree/>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
            <collectionProp name="AuthManager.auth_list">
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://ogads-pa.clients6.google.com/$rpc/google.internal.onegoogle.asyncdata.v1.AsyncDataService/</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">https://play.google.com/</stringProp>
                <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                <stringProp name="Authorization.domain"></stringProp>
                <stringProp name="Authorization.realm"></stringProp>
                <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
              </elementProp>
            </collectionProp>
            <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
          </AuthManager>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_01_Launch" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_01_Launch/actions/Catalog.action-37" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">none</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_02_LogIN" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/actions/Account.action-42" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="signonForm" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">signonForm</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_sourcePage1" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_sourcePage1</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;input type=&quot;hidden&quot; name=&quot;_sourcePage&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;input </stringProp>
                <stringProp name="BoundaryExtractor.default">COR_sourcePage1_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">2</stringProp>
                <stringProp name="TestPlan.comments">&lt;input type=&quot;hidden&quot; name=&quot;_sourcePage&quot; value=&quot;psDH_1n5swGDi2YpkE_zGesCdedpBEXjcWCX8_QxKwuSc7mPGKsb0tKYMRzC21tK8BHfyf-76veDRM-QhH31eoYgwlL3H9FLBbaqdnbfJDY=&quot; /&gt;&lt;input </stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_fp1" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_fp1</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;input type=&quot;hidden&quot; name=&quot;__fp&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_fp1_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">2</stringProp>
                <stringProp name="TestPlan.comments">&lt;input type=&quot;hidden&quot; name=&quot;__fp&quot; value=&quot;HyFrxhHjjAX-XtySQX9KeiSOrslQNVumXxYLRHC_NJ4KPWBZdfZDAqHEHCTylNjr&quot; /&gt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Please enter your username and password" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1726065345">Please enter your username and password</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/actions/Account.action-54" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="username" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                    <stringProp name="Argument.value">${Pr_Username}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">password</stringProp>
                    <stringProp name="Argument.value">${Pr_Password}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="signon" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">signon</stringProp>
                    <stringProp name="Argument.value">Login</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="_sourcePage" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">_sourcePage</stringProp>
                    <stringProp name="Argument.value">${COR_sourcePage1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="__fp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">__fp</stringProp>
                    <stringProp name="Argument.value">${COR_fp1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Account.action?signonForm=</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/actions/Catalog.action-55" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Account.action?signonForm=</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_03_Select_Fish" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_Select_Fish/actions/Catalog.action-80" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="viewCategory" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">viewCategory</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="categoryId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">categoryId</stringProp>
                    <stringProp name="Argument.value">FISH</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_productId" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_productId</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">productId=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_productId_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">0</stringProp>
                <stringProp name="TestPlan.comments">productId=FI-SW-01&quot;&gt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Fish" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="2189944">Fish</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_Select_Fish/actions/Catalog.action-90" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="viewProduct" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">viewProduct</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="productId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">productId</stringProp>
                    <stringProp name="Argument.value">${COR_productId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action?viewCategory=&amp;categoryId=FISH</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
              </ConstantTimer>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_itemId" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_itemId</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">itemId=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_itemId_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">0</stringProp>
                <stringProp name="TestPlan.comments">itemId=EST-1&quot;&gt;E</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Add to Cart" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-649973466">Add to Cart</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_04_Select_ProductID" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_04_Select_ProductID/actions/Catalog.action-91" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="viewItem" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">viewItem</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="itemId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">itemId</stringProp>
                    <stringProp name="Argument.value">${COR_itemId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action?viewProduct=&amp;productId=${COR_productId}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Add to Cart" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-649973466">Add to Cart</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_05_Add_To_Cart" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_05_Add_To_Cart/actions/Cart.action-95" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Cart.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="addItemToCart" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">addItemToCart</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="workingItemId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">workingItemId</stringProp>
                    <stringProp name="Argument.value">${COR_itemId}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action?viewItem=&amp;itemId=${COR_itemId}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Shopping Cart" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-909066536">Shopping Cart</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_06_Proceed" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_06_Proceed/actions/Order.action-97" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="newOrderForm" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">newOrderForm</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Cart.action?addItemToCart=&amp;workingItemId=${COR_itemId}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
              </ConstantTimer>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_sourcePage2" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_sourcePage2</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;input type=&quot;hidden&quot; name=&quot;_sourcePage&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;input</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_sourcePage2_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">2</stringProp>
                <stringProp name="TestPlan.comments">&lt;input type=&quot;hidden&quot; name=&quot;_sourcePage&quot; value=&quot;HUfUyHfgE0V7I8k4HI_PA17-DEfb46sHPZZHzcna-XK8UvDivuiosohfK_XoPMPlAelPjIs6JPFNaj3IKMfiIXdhh1C9lkw9VUTqG5N3j0E=&quot; /&gt;&lt;input</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_fp2" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_fp2</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;input type=&quot;hidden&quot; name=&quot;__fp&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_fp2_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">2</stringProp>
                <stringProp name="TestPlan.comments">&lt;input type=&quot;hidden&quot; name=&quot;__fp&quot; value=&quot;H9hPML0zYbWFZm595U42tlkRQ29YR-UKJZ4BBMfkLPsIV6QPJNn7X9kRd6gBnS-HczibpXfT6kWToLBjrG4Mt2FzjfwIF6PLWd2_smqE_Z97odqmRY7WbQ==&quot; /&gt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_creditCard" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_creditCard</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">input name=&quot;order.creditCard&quot; type=&quot;text&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt; </stringProp>
                <stringProp name="BoundaryExtractor.default">COR_creditCard_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">input name=&quot;order.creditCard&quot; type=&quot;text&quot; value=&quot;999 9999 9999 9999&quot; /&gt; </stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_expiryDate" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_expiryDate</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;input name=&quot;order.expiryDate&quot; type=&quot;text&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_expiryDate_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">&lt;input name=&quot;order.expiryDate&quot; type=&quot;text&quot; value=&quot;12/03&quot; /&gt;&lt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_FirstName" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_FirstName</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">input name=&quot;order.billToFirstName&quot; type=&quot;text&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_FirstName_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">input name=&quot;order.billToFirstName&quot; type=&quot;text&quot; value=&quot;Nazmul&quot; /&gt;&lt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_LastName" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_LastName</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;input name=&quot;order.billToLastName&quot; type=&quot;text&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_LastName_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">&lt;input name=&quot;order.billToLastName&quot; type=&quot;text&quot; value=&quot;Shaik&quot; /&gt;&lt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_billAddress1" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_billAddress1</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">name=&quot;order.billAddress1&quot; type=&quot;text&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_billAddress1_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">name=&quot;order.billAddress1&quot; type=&quot;text&quot; value=&quot;asada&quot; /&gt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_billAddress2" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_billAddress2</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">name=&quot;order.billAddress2&quot; type=&quot;text&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_billAddress2_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">&lt;input name=&quot;order.billToLastName&quot; type=&quot;text&quot; value=&quot;Shaik&quot; /&gt;&lt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_billCity" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_billCity</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">input name=&quot;order.billCity&quot; type=&quot;text&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_billCity_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">input name=&quot;order.billCity&quot; type=&quot;text&quot; value=&quot;banga&quot; /&gt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_billState" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_billState</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">name=&quot;order.billState&quot; type=&quot;text&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_billState_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">name=&quot;order.billState&quot; type=&quot;text&quot; value=&quot;TN&quot; /&gt;&lt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_billZip" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_billZip</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">name=&quot;order.billZip&quot; type=&quot;text&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_billZip_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">name=&quot;order.billZip&quot; type=&quot;text&quot; value=&quot;322111&quot; /&gt;&lt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_billCountry" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_billCountry</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">name=&quot;order.billCountry&quot; type=&quot;text&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_billCountry_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">name=&quot;order.billCountry&quot; type=&quot;text&quot; value=&quot;India&quot; /&gt;&lt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_newOrder" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">COR_newOrder</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;input name=&quot;newOrder&quot; type=&quot;submit&quot; value=&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">COR_newOrder_NF</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">&lt;input name=&quot;newOrder&quot; type=&quot;submit&quot; value=&quot;Continue&quot; /&gt;</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Payment Details" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1294903784">Payment Details</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_07_Clickon_Continue" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_06_Proceed/actions/Order.action-115" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="order.cardType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.cardType</stringProp>
                    <stringProp name="Argument.value">Visa</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.creditCard" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">order.creditCard</stringProp>
                    <stringProp name="Argument.value">${COR_creditCard}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.expiryDate" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">order.expiryDate</stringProp>
                    <stringProp name="Argument.value">${COR_expiryDate}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billToFirstName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billToFirstName</stringProp>
                    <stringProp name="Argument.value">${COR_FirstName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billToLastName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billToLastName</stringProp>
                    <stringProp name="Argument.value">${COR_LastName}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billAddress1" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billAddress1</stringProp>
                    <stringProp name="Argument.value">${COR_billAddress1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billAddress2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billAddress2</stringProp>
                    <stringProp name="Argument.value">${COR_billAddress2}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billCity" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billCity</stringProp>
                    <stringProp name="Argument.value">${COR_billCity}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billState" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billState</stringProp>
                    <stringProp name="Argument.value">${COR_billState}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billZip" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billZip</stringProp>
                    <stringProp name="Argument.value">${COR_billZip}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="order.billCountry" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">order.billCountry</stringProp>
                    <stringProp name="Argument.value">${COR_billCountry}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="newOrder" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">newOrder</stringProp>
                    <stringProp name="Argument.value">${COR_newOrder}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="_sourcePage" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">_sourcePage</stringProp>
                    <stringProp name="Argument.value">${COR_sourcePage2}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="__fp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">__fp</stringProp>
                    <stringProp name="Argument.value">${COR_fp2}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Order.action?newOrderForm=</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
              </ConstantTimer>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Order" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="76453678">Order</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_08_Clickon_Confirm" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_07_Clickon_Continue/actions/Order.action-119" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="newOrder" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">newOrder</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="confirmed" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">confirmed</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Order.action</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
              </ConstantTimer>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Cor_OrderID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">Cor_OrderID</stringProp>
                <stringProp name="RegexExtractor.regex">th align=&quot;center&quot; colspan=&quot;2&quot;&gt;Order #(.*)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Cor_OrderID_Nf</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">th align=&quot;center&quot; colspan=&quot;2&quot;&gt;Order #6886</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Thank you, your order has been submitted." enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1620325313">Thank you, your order has been submitted.</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
                <stringProp name="Assertion.scope">all</stringProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VTS_Get_total_ColumnRows" enabled="true">
              <intProp name="HTTPSampler.concurrentPool">6</intProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.port">4000</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.path">/data/get_count?colname=OrderID&amp;_=15197482799</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">VTS_Column_Cunt</stringProp>
                <stringProp name="RegexExtractor.regex">true,&quot;count&quot;:(.*?)}</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                <stringProp name="RegexExtractor.default"></stringProp>
              </RegexExtractor>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VTS_Get_edit_ColumnRows" enabled="true">
              <intProp name="HTTPSampler.concurrentPool">6</intProp>
              <stringProp name="HTTPSampler.domain">localhost</stringProp>
              <stringProp name="HTTPSampler.port">4000</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.path">/data/edit_cell/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">key=OrderID&amp;value=${Cor_OrderID},${Pr_Username},${Pr_Password}&amp;id=${VTS_Column_Cunt}&amp;oper=edit</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_09_Clickon_Logout" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Logout/actions/Account.action-124" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="signoff" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">signoff</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Order.action?newOrder=&amp;confirmed=true</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Logout/actions/Catalog.action-125" enabled="true">
              <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">navigate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Order.action?newOrder=&amp;confirmed=true</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-User" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                    <stringProp name="Header.value">?1</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">document</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
              </ConstantTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8484</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">JpetStore_FishBuying_09_Clickon_Logout</stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">D:\TASK\JpetStore\Tenjin\JpetStore_Fish\recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="JpetStore_Buying_Fish">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">10</stringProp>
        <stringProp name="Start users count burst">0</stringProp>
        <stringProp name="Start users period">5</stringProp>
        <stringProp name="Stop users count">5</stringProp>
        <stringProp name="Stop users period">5</stringProp>
        <stringProp name="flighttime">60</stringProp>
        <stringProp name="rampUp">1</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Overall_JpetStore_Buying_Fish">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Login"/>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
              <boolProp name="IfController.evaluateAll">true</boolProp>
              <boolProp name="IfController.useExpression">false</boolProp>
            </IfController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                <stringProp name="delimiter">,</stringProp>
                <stringProp name="fileEncoding"></stringProp>
                <stringProp name="filename">D:/TASK/JpetStore/Tenjin/JpetStore_Fish/JpetStore_Buying_Fish_Credentials.csv</stringProp>
                <boolProp name="ignoreFirstLine">true</boolProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="variableNames">Pr_Username,Pr_Password</stringProp>
                <stringProp name="TestPlan.comments">PerformerBA Yethi@1221</stringProp>
              </CSVDataSet>
              <hashTree/>
              <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
                <collectionProp name="AuthManager.auth_list">
                  <elementProp name="" elementType="Authorization">
                    <stringProp name="Authorization.url">https://ogads-pa.clients6.google.com/$rpc/google.internal.onegoogle.asyncdata.v1.AsyncDataService/</stringProp>
                    <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                    <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                    <stringProp name="Authorization.domain"></stringProp>
                    <stringProp name="Authorization.realm"></stringProp>
                    <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Authorization">
                    <stringProp name="Authorization.url">https://play.google.com/</stringProp>
                    <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
                    <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
                    <stringProp name="Authorization.domain"></stringProp>
                    <stringProp name="Authorization.realm"></stringProp>
                    <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
                  </elementProp>
                </collectionProp>
                <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
              </AuthManager>
              <hashTree/>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_01_Launch" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_01_Launch/actions/Catalog.action-37" enabled="true">
                  <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">none</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                    <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_02_LogIN" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/actions/Account.action-42" enabled="true">
                  <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="signonForm" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">signonForm</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_sourcePage1" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_sourcePage1</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&lt;input type=&quot;hidden&quot; name=&quot;_sourcePage&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;input </stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_sourcePage1_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">2</stringProp>
                    <stringProp name="TestPlan.comments">&lt;input type=&quot;hidden&quot; name=&quot;_sourcePage&quot; value=&quot;psDH_1n5swGDi2YpkE_zGesCdedpBEXjcWCX8_QxKwuSc7mPGKsb0tKYMRzC21tK8BHfyf-76veDRM-QhH31eoYgwlL3H9FLBbaqdnbfJDY=&quot; /&gt;&lt;input </stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_fp1" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_fp1</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&lt;input type=&quot;hidden&quot; name=&quot;__fp&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_fp1_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">2</stringProp>
                    <stringProp name="TestPlan.comments">&lt;input type=&quot;hidden&quot; name=&quot;__fp&quot; value=&quot;HyFrxhHjjAX-XtySQX9KeiSOrslQNVumXxYLRHC_NJ4KPWBZdfZDAqHEHCTylNjr&quot; /&gt;</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Please enter your username and password" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1726065345">Please enter your username and password</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/actions/Account.action-54" enabled="true">
                  <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
                  <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="username" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">username</stringProp>
                        <stringProp name="Argument.value">${Pr_Username}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="password" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">password</stringProp>
                        <stringProp name="Argument.value">${Pr_Password}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="signon" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">signon</stringProp>
                        <stringProp name="Argument.value">Login</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="_sourcePage" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">_sourcePage</stringProp>
                        <stringProp name="Argument.value">${COR_sourcePage1}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="__fp" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">__fp</stringProp>
                        <stringProp name="Argument.value">${COR_fp1}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Account.action?signonForm=</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">${scheme}://${JpetStore_Server}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                      </elementProp>
                      <elementProp name="Cache-Control" elementType="Header">
                        <stringProp name="Header.name">Cache-Control</stringProp>
                        <stringProp name="Header.value">max-age=0</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_02_LogIN/actions/Catalog.action-55" enabled="true">
                  <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Account.action?signonForm=</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Cache-Control" elementType="Header">
                        <stringProp name="Header.name">Cache-Control</stringProp>
                        <stringProp name="Header.value">max-age=0</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                    <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="ERR_MSG_1" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">ERR_MSG_1</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">&lt;div id=&quot;Content&quot;&gt;&lt;ul class=&quot;messages&quot;&gt;&lt;li&gt;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&lt;/li&gt;&lt;/ul&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">XYZ</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion1" enabled="true">
                <stringProp name="BeanShellAssertion.query">try {
    String errorMessage1 = vars.get(&quot;ERR_MSG_1&quot;);
    log.info(&quot;var1LOG value: &quot; + errorMessage1);

  if(errorMessage1.length() ==0)
 {  errorMessage1 = &quot;XYZ&quot;;
 }
 
String errorMessage = errorMessage1.trim();

 int threadNum = ctx.getThreadNum() + 1;
int iterationNum = ctx.getVariables().getIteration();
log.info(&quot;iteration number: &quot; + iterationNum);
log.info(&quot;thread number: &quot; + threadNum);

    	
    //if((errorMessage != null) || (threadNum &gt; 3))
    if(!errorMessage.equals(&quot;XYZ&quot;) &amp;&amp; errorMessage != null &amp;&amp; errorMessage.length() != 0)
    {
//	errorMessage = &quot;Exception Message Parser value is null, check the issue in response file&quot;;
//    }
    	   log.info(&quot;after condition:LOG &quot; + errorMessage);
    	   log.info(&quot;after condition:LOG Length &quot; + errorMessage.length());
    	   
        Failure = true;
        FailureMessage = &quot;Response Code: &quot; + ResponseCode + &quot;, Response Msg: &quot; + ResponseMessage +
            &quot;, Error_Message: &quot; + Error_Message + &quot;, ResponseBody: &quot; + errorMessage;
        
//ctx.setTestLogicalAction(org.apache.jmeter.threads.JMeterContext.TestLogicalAction.START_NEXT_ITERATION_OF_CURRENT_LOOP);

SampleResult.setStopThread(true);
    }


    
} catch (Exception e) {
    log.info(&quot;Exception caught: &quot; + e.getMessage());
    //e.printStackTrace();
    return &quot;Beanshell::::::&quot; + samplerName + &quot;Error::::::::::::&quot; + e.getMessage();
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If else Controller" enabled="true">
              <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}==false</stringProp>
              <boolProp name="IfController.evaluateAll">true</boolProp>
              <boolProp name="IfController.useExpression">false</boolProp>
            </IfController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">try {

 String errorMessage1 = vars.get(&quot;ERR_MSG_1&quot;);
   
 if(errorMessage1.length() ==0)
 {  errorMessage1 = &quot;XYZ&quot;;
 }

  String errorMessage = errorMessage1.trim();

    if(errorMessage == null || errorMessage == &quot;&quot; || errorMessage.length() == 0 || errorMessage.equals(&quot;XYZ&quot;))
    {
        log.info(&quot;Inside if condition: &quot; + errorMessage);

        String samplerName = prev.getSampleLabel();
        int startIndex = Math.max(samplerName.length() - 3, 0);
        samplerName = samplerName.substring(startIndex);


 int threadNum = ctx.getThreadNum() + 1;
int iterationNum = ctx.getVariables().getIteration();
        
        String requestBody = prev.getSamplerData();
        String response = prev.getResponseDataAsString();
        
        log.info(&quot;Request Body: &quot; + requestBody);
        log.info(&quot;Response Message: &quot; + response);
        log.info(&quot;Failure message: &quot; + FailureMessage);

        String stringTest = &quot;Response Code: &quot; + ResponseCode + &quot;, Response Msg: &quot; + ResponseMessage +
            &quot;, Error_Message: &quot; + Error_Message + &quot;, Request Body: &quot; + requestBody +
            &quot;, ResponseBody: &quot; + response;

        f = new FileOutputStream(&quot;${APC_Transact_02_Current_Account_Opening}/Error_&quot;+&quot;_&quot;+threadNum+&quot;_&quot;+iterationNum+&quot;.txt&quot;, true);
        p = new PrintStream(f);
        this.interpreter.setOut(p);
        print(stringTest);
        f.close();
     SampleResult.setStopThread(true);

    }
  

//ctx.setTestLogicalAction(org.apache.jmeter.threads.JMeterContext.TestLogicalAction.START_NEXT_ITERATION_OF_CURRENT_LOOP);

/*  -- Beanshell thread controller methods
ctx.setTestLogicalAction(org.apache.jmeter.threads.JMeterContext.TestLogicalAction.START_NEXT_ITERATION_OF_CURRENT_LOOP);
ctx.setTestLogicalAction(org.apache.jmeter.threads.JMeterContext.TestLogicalAction.START_NEXT_ITERATION_OF_THREAD);
ctx.setTestLogicalAction(org.apache.jmeter.threads.JMeterContext.TestLogicalAction.CONTINUE);
ctx.setTestLogicalAction(org.apache.jmeter.threads.JMeterContext.TestLogicalAction.BREAK_CURRENT_LOOP);
*/
 
// -- JSR223 thread controller methods
//SampleResult.setStopThread(true); 
//ctx.setRestartNextLoop(true); 

//-- this helps to move control back to thread group level iteration
    
} catch (Exception e) {
    log.info(&quot;Exception caught: &quot; + e.getMessage());
    //e.printStackTrace();
    return &quot;Beanshell::::::&quot; + samplerName + &quot;Error::::::::::::&quot; + e.getMessage();
}</stringProp>
                <stringProp name="scriptLanguage">java</stringProp>
              </JSR223Sampler>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Action">
            <stringProp name="LoopController.loops">5</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
              <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
              <boolProp name="IfController.evaluateAll">true</boolProp>
              <boolProp name="IfController.useExpression">false</boolProp>
            </IfController>
            <hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_03_Select_Fish" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_Select_Fish/actions/Catalog.action-80" enabled="true">
                  <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="viewCategory" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">viewCategory</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="categoryId" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">categoryId</stringProp>
                        <stringProp name="Argument.value">FISH</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_productId" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_productId</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">productId=</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_productId_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">0</stringProp>
                    <stringProp name="TestPlan.comments">productId=FI-SW-01&quot;&gt;</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Fish" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="2189944">Fish</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_03_Select_Fish/actions/Catalog.action-90" enabled="true">
                  <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="viewProduct" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">viewProduct</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="productId" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">productId</stringProp>
                        <stringProp name="Argument.value">${COR_productId}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action?viewCategory=&amp;categoryId=FISH</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                    <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_itemId" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_itemId</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">itemId=</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_itemId_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">0</stringProp>
                    <stringProp name="TestPlan.comments">itemId=EST-1&quot;&gt;E</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Add to Cart" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-649973466">Add to Cart</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_04_Select_ProductID" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_04_Select_ProductID/actions/Catalog.action-91" enabled="true">
                  <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="viewItem" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">viewItem</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="itemId" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">itemId</stringProp>
                        <stringProp name="Argument.value">${COR_itemId}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action?viewProduct=&amp;productId=${COR_productId}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                    <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Add to Cart" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-649973466">Add to Cart</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_05_Add_To_Cart" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_05_Add_To_Cart/actions/Cart.action-95" enabled="true">
                  <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Cart.action</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="addItemToCart" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">addItemToCart</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="workingItemId" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">workingItemId</stringProp>
                        <stringProp name="Argument.value">${COR_itemId}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Catalog.action?viewItem=&amp;itemId=${COR_itemId}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                    <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Shopping Cart" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-909066536">Shopping Cart</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_06_Proceed" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_06_Proceed/actions/Order.action-97" enabled="true">
                  <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="newOrderForm" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">newOrderForm</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Cart.action?addItemToCart=&amp;workingItemId=${COR_itemId}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                    <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_sourcePage2" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_sourcePage2</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&lt;input type=&quot;hidden&quot; name=&quot;_sourcePage&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;input</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_sourcePage2_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">2</stringProp>
                    <stringProp name="TestPlan.comments">&lt;input type=&quot;hidden&quot; name=&quot;_sourcePage&quot; value=&quot;HUfUyHfgE0V7I8k4HI_PA17-DEfb46sHPZZHzcna-XK8UvDivuiosohfK_XoPMPlAelPjIs6JPFNaj3IKMfiIXdhh1C9lkw9VUTqG5N3j0E=&quot; /&gt;&lt;input</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_fp2" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_fp2</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&lt;input type=&quot;hidden&quot; name=&quot;__fp&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_fp2_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">2</stringProp>
                    <stringProp name="TestPlan.comments">&lt;input type=&quot;hidden&quot; name=&quot;__fp&quot; value=&quot;H9hPML0zYbWFZm595U42tlkRQ29YR-UKJZ4BBMfkLPsIV6QPJNn7X9kRd6gBnS-HczibpXfT6kWToLBjrG4Mt2FzjfwIF6PLWd2_smqE_Z97odqmRY7WbQ==&quot; /&gt;</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_creditCard" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_creditCard</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">input name=&quot;order.creditCard&quot; type=&quot;text&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt; </stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_creditCard_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                    <stringProp name="TestPlan.comments">input name=&quot;order.creditCard&quot; type=&quot;text&quot; value=&quot;999 9999 9999 9999&quot; /&gt; </stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_expiryDate" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_expiryDate</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&lt;input name=&quot;order.expiryDate&quot; type=&quot;text&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_expiryDate_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                    <stringProp name="TestPlan.comments">&lt;input name=&quot;order.expiryDate&quot; type=&quot;text&quot; value=&quot;12/03&quot; /&gt;&lt;</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_FirstName" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_FirstName</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">input name=&quot;order.billToFirstName&quot; type=&quot;text&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_FirstName_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                    <stringProp name="TestPlan.comments">input name=&quot;order.billToFirstName&quot; type=&quot;text&quot; value=&quot;Nazmul&quot; /&gt;&lt;</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_LastName" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_LastName</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&lt;input name=&quot;order.billToLastName&quot; type=&quot;text&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_LastName_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                    <stringProp name="TestPlan.comments">&lt;input name=&quot;order.billToLastName&quot; type=&quot;text&quot; value=&quot;Shaik&quot; /&gt;&lt;</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_billAddress1" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_billAddress1</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">name=&quot;order.billAddress1&quot; type=&quot;text&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_billAddress1_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                    <stringProp name="TestPlan.comments">name=&quot;order.billAddress1&quot; type=&quot;text&quot; value=&quot;asada&quot; /&gt;</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_billAddress2" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_billAddress2</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">name=&quot;order.billAddress2&quot; type=&quot;text&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_billAddress2_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                    <stringProp name="TestPlan.comments">&lt;input name=&quot;order.billToLastName&quot; type=&quot;text&quot; value=&quot;Shaik&quot; /&gt;&lt;</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_billCity" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_billCity</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">input name=&quot;order.billCity&quot; type=&quot;text&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_billCity_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                    <stringProp name="TestPlan.comments">input name=&quot;order.billCity&quot; type=&quot;text&quot; value=&quot;banga&quot; /&gt;</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_billState" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_billState</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">name=&quot;order.billState&quot; type=&quot;text&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_billState_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                    <stringProp name="TestPlan.comments">name=&quot;order.billState&quot; type=&quot;text&quot; value=&quot;TN&quot; /&gt;&lt;</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_billZip" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_billZip</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">name=&quot;order.billZip&quot; type=&quot;text&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_billZip_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                    <stringProp name="TestPlan.comments">name=&quot;order.billZip&quot; type=&quot;text&quot; value=&quot;322111&quot; /&gt;&lt;</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_billCountry" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_billCountry</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">name=&quot;order.billCountry&quot; type=&quot;text&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;&lt;</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_billCountry_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                    <stringProp name="TestPlan.comments">name=&quot;order.billCountry&quot; type=&quot;text&quot; value=&quot;India&quot; /&gt;&lt;</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="COR_newOrder" enabled="true">
                    <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                    <stringProp name="BoundaryExtractor.refname">COR_newOrder</stringProp>
                    <stringProp name="BoundaryExtractor.lboundary">&lt;input name=&quot;newOrder&quot; type=&quot;submit&quot; value=&quot;</stringProp>
                    <stringProp name="BoundaryExtractor.rboundary">&quot; /&gt;</stringProp>
                    <stringProp name="BoundaryExtractor.default">COR_newOrder_NF</stringProp>
                    <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                    <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                    <stringProp name="TestPlan.comments">&lt;input name=&quot;newOrder&quot; type=&quot;submit&quot; value=&quot;Continue&quot; /&gt;</stringProp>
                  </BoundaryExtractor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Payment Details" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="1294903784">Payment Details</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_07_Clickon_Continue" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_06_Proceed/actions/Order.action-115" enabled="true">
                  <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="order.cardType" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.cardType</stringProp>
                        <stringProp name="Argument.value">Visa</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="order.creditCard" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">order.creditCard</stringProp>
                        <stringProp name="Argument.value">${COR_creditCard}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="order.expiryDate" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">order.expiryDate</stringProp>
                        <stringProp name="Argument.value">${COR_expiryDate}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="order.billToFirstName" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billToFirstName</stringProp>
                        <stringProp name="Argument.value">${COR_FirstName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="order.billToLastName" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billToLastName</stringProp>
                        <stringProp name="Argument.value">${COR_LastName}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="order.billAddress1" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billAddress1</stringProp>
                        <stringProp name="Argument.value">${COR_billAddress1}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="order.billAddress2" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billAddress2</stringProp>
                        <stringProp name="Argument.value">${COR_billAddress2}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="order.billCity" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billCity</stringProp>
                        <stringProp name="Argument.value">${COR_billCity}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="order.billState" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billState</stringProp>
                        <stringProp name="Argument.value">TN</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="order.billZip" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billZip</stringProp>
                        <stringProp name="Argument.value">${COR_billZip}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="order.billCountry" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">order.billCountry</stringProp>
                        <stringProp name="Argument.value">${COR_billCountry}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="newOrder" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">newOrder</stringProp>
                        <stringProp name="Argument.value">Continue</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="_sourcePage" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">_sourcePage</stringProp>
                        <stringProp name="Argument.value">${COR_sourcePage2}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="__fp" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">__fp</stringProp>
                        <stringProp name="Argument.value">${COR_fp2}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Order.action?newOrderForm=</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">${scheme}://${JpetStore_Server}</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                      </elementProp>
                      <elementProp name="Cache-Control" elementType="Header">
                        <stringProp name="Header.name">Cache-Control</stringProp>
                        <stringProp name="Header.value">max-age=0</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                    <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Order" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="76453678">Order</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_08_Clickon_Confirm" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_07_Clickon_Continue/actions/Order.action-119" enabled="true">
                  <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Order.action</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="newOrder" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">newOrder</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="confirmed" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">confirmed</stringProp>
                        <stringProp name="Argument.value">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Order.action</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                    <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Cor_OrderID" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">Cor_OrderID</stringProp>
                    <stringProp name="RegexExtractor.regex">th align=&quot;center&quot; colspan=&quot;2&quot;&gt;Order #(.*)</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">Cor_OrderID_Nf</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <stringProp name="TestPlan.comments">th align=&quot;center&quot; colspan=&quot;2&quot;&gt;Order #6886</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Thank you, your order has been submitted." enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-1620325313">Thank you, your order has been submitted.</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">2</intProp>
                    <stringProp name="Assertion.scope">all</stringProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VTS_Get_total_ColumnRows" enabled="true">
                  <intProp name="HTTPSampler.concurrentPool">6</intProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.port">4000</stringProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <stringProp name="HTTPSampler.path">/data/get_count?colname=OrderID&amp;_=15197482799</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">VTS_Column_Cunt</stringProp>
                    <stringProp name="RegexExtractor.regex">true,&quot;count&quot;:(.*?)}</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                    <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
                    <stringProp name="RegexExtractor.default"></stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="VTS_Get_edit_ColumnRows" enabled="true">
                  <intProp name="HTTPSampler.concurrentPool">6</intProp>
                  <stringProp name="HTTPSampler.domain">localhost</stringProp>
                  <stringProp name="HTTPSampler.port">4000</stringProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <stringProp name="HTTPSampler.path">/data/edit_cell/</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">key=OrderID&amp;value=${Cor_OrderID},${Pr_Username},${Pr_Password}&amp;id=${VTS_Column_Cunt}&amp;oper=edit</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="JpetStore_FishBuying_09_Clickon_Logout" enabled="false">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Logout/actions/Account.action-124" enabled="true">
                  <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
                  <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Account.action</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="signoff" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">signoff</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Order.action?newOrder=&amp;confirmed=true</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="JpetStore_FishBuying_09_Clickon_Logout/actions/Catalog.action-125" enabled="true">
                  <stringProp name="HTTPSampler.domain">${JpetStore_Server}</stringProp>
                  <stringProp name="HTTPSampler.port">443</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/actions/Catalog.action</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Sec-Fetch-Mode" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                        <stringProp name="Header.value">navigate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">${scheme}://${JpetStore_Server}/actions/Order.action?newOrder=&amp;confirmed=true</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Site" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                        <stringProp name="Header.value">same-origin</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">en-US,en;q=0.9,kn;q=0.8</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-User" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                        <stringProp name="Header.value">?1</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua</stringProp>
                        <stringProp name="Header.value">&quot;Not)A;Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;138&quot;, &quot;Google Chrome&quot;;v=&quot;138&quot;</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-mobile" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                        <stringProp name="Header.value">?0</stringProp>
                      </elementProp>
                      <elementProp name="sec-ch-ua-platform" elementType="Header">
                        <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                        <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                      </elementProp>
                      <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                        <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                        <stringProp name="Header.value">1</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/138.0.0.0 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Sec-Fetch-Dest" elementType="Header">
                        <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                        <stringProp name="Header.value">document</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="JPetstore_Fish_Buying_ThinkTime" enabled="true">
                    <stringProp name="ConstantTimer.delay">${JPetstore_Fish_Buying_ThinkTime}</stringProp>
                  </ConstantTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="ERR_MSG_1" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">ERR_MSG_1</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">{&quot;header&quot;:{},&quot;error&quot;:{&quot;errorMessage&quot;:&quot;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;errorCode&quot;:&quot;TH-002&quot;}</stringProp>
                <stringProp name="BoundaryExtractor.default">XYZ</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">&lt;td&gt;Technical Error has occured&lt;/td&gt;</stringProp>
                <stringProp name="Sample.scope">all</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ERR_MSG_2" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ERR_MSG_2</stringProp>
                <stringProp name="RegexExtractor.regex">CONTENT=&quot;-1&quot;&gt;\n(.*?)ged.</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">XYZ</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              </RegexExtractor>
              <hashTree/>
              <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell Assertion1" enabled="true">
                <stringProp name="BeanShellAssertion.query">try {
    String errorMessage1 = vars.get(&quot;ERR_MSG_1&quot;);
    String errorMessage2 = vars.get(&quot;ERR_MSG_2&quot;);
   
 if(errorMessage1.length() ==0)
 {  errorMessage1 = &quot;XYZ&quot;;
 }
 if(errorMessage2.length() ==0)
 {  errorMessage2 = &quot;XYZ&quot;;
 }
 
  String errorMessage = errorMessage1.trim() + errorMessage2.trim();

    log.info(&quot;err1 value: &quot; + errorMessage1);
    log.info(&quot;err2 value: &quot; + errorMessage2);

    log.info(&quot;err value: &quot; + errorMessage);
    
    log.info(&quot;e len&quot; + errorMessage.length());

  
    

 int threadNum = ctx.getThreadNum() + 1;
int iterationNum = ctx.getVariables().getIteration();
log.info(&quot;iteration number: &quot; + iterationNum);
log.info(&quot;thread number: &quot; + threadNum);

    //	 if(errorMessage.equals(&quot;XYZ&quot;))
  if(errorMessage != null &amp;&amp; !errorMessage.equals(&quot;XYZXYZ&quot;) &amp;&amp; errorMessage.length() != 0 &amp;&amp; !errorMessage.contains(&quot;Operation&quot;))
    {
    	   log.info(&quot;after condition: &quot; + errorMessage);
    	   
        Failure = true;
        FailureMessage = &quot;Response Code: &quot; + ResponseCode + &quot;, Response Msg: &quot; + ResponseMessage + &quot;, ResponseBody: &quot; + errorMessage;
    prev.setResponseMessage(&quot;Error Message: &quot; + errorMessage);
            
  // SampleResult.setStopThread(true);
//ctx.setTestLogicalAction(org.apache.jmeter.threads.JMeterContext.TestLogicalAction.START_NEXT_ITERATION_OF_CURRENT_LOOP);
    }
} catch (Exception e) {
    log.info(&quot;Exception caught: &quot; + e.getMessage());
    //e.printStackTrace();
    return &quot;Beanshell::::::&quot; + samplerName + &quot;Error::::::::::::&quot; + e.getMessage();
}</stringProp>
                <stringProp name="BeanShellAssertion.filename"></stringProp>
                <stringProp name="BeanShellAssertion.parameters"></stringProp>
                <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
              </BeanShellAssertion>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If else Controller" enabled="true">
              <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}==false</stringProp>
              <boolProp name="IfController.evaluateAll">true</boolProp>
              <boolProp name="IfController.useExpression">false</boolProp>
            </IfController>
            <hashTree>
              <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">try {

 String errorMessage1 = vars.get(&quot;ERR_MSG_1&quot;);
    String errorMessage2 = vars.get(&quot;ERR_MSG_2&quot;);
   
 if(errorMessage1.length() ==0)
 {  errorMessage1 = &quot;XYZ&quot;;
 }
 if(errorMessage2.length() ==0)
 {  errorMessage2 = &quot;XYZ&quot;;
 }
  String errorMessage = errorMessage1.trim() + errorMessage2.trim();

    if(errorMessage == null || errorMessage == &quot;&quot; || errorMessage.length() == 0 || errorMessage.equals(&quot;XYZXYZ&quot;))
    {
        log.info(&quot;Inside if condition: &quot; + errorMessage);

        String samplerName = prev.getSampleLabel();
        int startIndex = Math.max(samplerName.length() - 3, 0);
        samplerName = samplerName.substring(startIndex);


 int threadNum = ctx.getThreadNum() + 1;
int iterationNum = ctx.getVariables().getIteration();
        
        String requestBody = prev.getSamplerData();
        String response = prev.getResponseDataAsString();
        
        log.info(&quot;Request Body: &quot; + requestBody);
        log.info(&quot;Response Message: &quot; + response);
        log.info(&quot;Failure message: &quot; + FailureMessage);

        String stringTest = &quot;Response Code: &quot; + ResponseCode + &quot;, Response Msg: &quot; + ResponseMessage +
            &quot;, Error_Message: &quot; + Error_Message + &quot;, Request Body: &quot; + requestBody +
            &quot;, ResponseBody: &quot; + response;

        f = new FileOutputStream(&quot;${GTB_UI_01_Cashwithdrawal}/Error_&quot;+&quot;_&quot;+threadNum+&quot;_&quot;+iterationNum+&quot;.txt&quot;, true);
        p = new PrintStream(f);
        this.interpreter.setOut(p);
        print(stringTest);
        f.close();
    // SampleResult.setStopThread(true);

    }
  

//ctx.setTestLogicalAction(org.apache.jmeter.threads.JMeterContext.TestLogicalAction.START_NEXT_ITERATION_OF_CURRENT_LOOP);

/*  -- Beanshell thread controller methods
ctx.setTestLogicalAction(org.apache.jmeter.threads.JMeterContext.TestLogicalAction.START_NEXT_ITERATION_OF_CURRENT_LOOP);
ctx.setTestLogicalAction(org.apache.jmeter.threads.JMeterContext.TestLogicalAction.START_NEXT_ITERATION_OF_THREAD);
ctx.setTestLogicalAction(org.apache.jmeter.threads.JMeterContext.TestLogicalAction.CONTINUE);
ctx.setTestLogicalAction(org.apache.jmeter.threads.JMeterContext.TestLogicalAction.BREAK_CURRENT_LOOP);
*/
 
// -- JSR223 thread controller methods
//SampleResult.setStopThread(true); 
//ctx.setRestartNextLoop(true); 

//-- this helps to move control back to thread group level iteration
    
} catch (Exception e) {
    log.info(&quot;Exception caught: &quot; + e.getMessage());
    //e.printStackTrace();
    return &quot;Beanshell::::::&quot; + samplerName + &quot;Error::::::::::::&quot; + e.getMessage();
}</stringProp>
                <stringProp name="scriptLanguage">java</stringProp>
              </JSR223Sampler>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">D:\TASK\JpetStore\Tenjin\JpetStore_Fish\error.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
